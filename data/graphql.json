{
    "AccountAccessLoginRequestsAdaptiveGroups": {
        "avg": "",
        "count": "Number of access login API events processed",
        "dimensions": "List of dimensions to group by"
    },
    "AccountAccessLoginRequestsAdaptiveGroupsAvg": {
        "sampleInterval": "Average sample interval"
    },
    "AccountAccessLoginRequestsAdaptiveGroupsDimensions": {
        "appId": "Access application ID",
        "approvingPolicyId": "Policy ID that approved the user",
        "cfRayId": "CF ray id",
        "country": "Country tag",
        "date": "The date the access login event was emitted",
        "datetime": "The date and time the access login event was emitted",
        "datetimeMinute": "The date and time the access login event was emitted truncated to the minute",
        "deviceId": "Device ID",
        "hasExistingJWT": "Has existing JWT (0 = false, 1 = true)",
        "hasGatewayEnabled": "Has Gateway enabled (0 = false, 1 = true)",
        "hasWarpEnabled": "Has WARP enabled (0 = false, 1 = true)",
        "identityProvider": "Identity provider",
        "ipAddress": "User IP address",
        "isSuccessfulLogin": "If the login was successful (0 = false, 1 = true)",
        "mtlsCertSerialId": "MTLS certificate serial ID",
        "mtlsCommonName": "MTLS common name",
        "mtlsStatus": "MTLS status (may show error message if status is not successful)",
        "serviceTokenId": "Service token ID",
        "userUuid": "User UUID"
    },
    "AccountAccessLoginRequestsAdaptiveGroupsFilter_InputObject": {},
    "AccountAccessLoginRequestsAdaptiveGroupsOrderBy": {},
    "AccountCdnNetworkAnalyticsAdaptiveGroups": {
        "avg": "The average of values for a metric per dimension",
        "dimensions": "List of dimensions to group by",
        "sum": "The sum of values for a metric per dimension"
    },
    "AccountCdnNetworkAnalyticsAdaptiveGroupsAvg": {
        "bitRate": "Sum of bits received, divided by 1 second, providing a per-second bit rate when grouped by datetime",
        "bitRateDay": "Sum of bits received, divided by 86400 seconds, providing a per-second bit rate when grouped by date",
        "bitRateFifteenMinutes": "Sum of bits received, divided by 900 seconds, providing a per-second bit rate when grouped by datetimeFifteenMinutes",
        "bitRateFiveMinutes": "Sum of bits received, divided by 300 seconds, providing a per-second bit rate when grouped by datetimeFiveMinutes",
        "bitRateHour": "Sum of bits received, divided by 3600 seconds, providing a per-second bit rate when grouped by datetimeHour",
        "bitRateMinute": "Sum of bits received, divided by 60 seconds, providing a per-second bit rate when grouped by datetimeMinute",
        "bitRateTenSeconds": "Sum of bits received, divided by 10 seconds, providing a per-second bit rate when grouped by datetimeTenSeconds",
        "packetRate": "Sum of packets received, divided by 1 second, providing a per-second packet rate when grouped by datetime",
        "packetRateDay": "Sum of packets received, divided by 86400 seconds, providing a per-second packet rate when grouped by date",
        "packetRateFifteenMinutes": "Sum of packets received, divided by 900 seconds, providing a per-second packet rate when grouped by datetimeFifteenMinutes",
        "packetRateFiveMinutes": "Sum of packets received, divided by 300 seconds, providing a per-second packet rate when grouped by datetimeFiveMinutes",
        "packetRateHour": "Sum of packets received, divided by 3600 seconds, providing a per-second packet rate when grouped by datetimeHour",
        "packetRateMinute": "Sum of packets received, divided by 60 seconds, providing a per-second packet rate when grouped by datetimeMinute",
        "packetRateTenSeconds": "Sum of packets received, divided by 10 seconds, providing a per-second packet rate when grouped by datetimeTenSeconds"
    },
    "AccountCdnNetworkAnalyticsAdaptiveGroupsDimensions": {
        "coloCity": "City where the Cloudflare datacenter that received the packet is located",
        "coloCode": "Cloudflare datacenter that received the packet (nearest IATA airport code)",
        "coloCountry": "Country where the Cloudflare datacenter that received the packet is located (ISO 3166-1 alpha-2)",
        "coloGeohash": "Latitude and longitude where the Cloudflare datacenter that received the packet is located (Geohash encoding)",
        "coloName": "Cloudflare datacenter that received the packet (unique site identifier)",
        "date": "Date that the packet was received",
        "datetime": "Date and time that the packet was received",
        "datetimeFifteenMinutes": "Date and time that the packet was received, rounded to the start of the nearest fifteen minutes",
        "datetimeFiveMinutes": "Date and time that the packet was received, rounded to the start of the nearest five minutes",
        "datetimeHour": "Date and time that the packet was received, rounded to the start of the nearest hour",
        "datetimeMinute": "Date and time that the packet was received, rounded to the start of the nearest minute",
        "datetimeTenSeconds": "Date and time that the packet was received, rounded to the start of the nearest ten seconds",
        "destinationAsn": "ASN associated with the destination IP of the packet, or 0 if there was no mapping available",
        "destinationAsnName": "Name of ASN associated with the destination IP of the packet, if available",
        "destinationCountry": "Country where the destination IP of the packet is located (ISO 3166-1 alpha-2)",
        "destinationGeohash": "Latitude and longitude where the destination IP of the packet is located (Geohash encoding)",
        "destinationPort": "Value of the Destination Port header field in the TCP or UDP packet",
        "direction": "Direction of the packet relative to the customer network (possible values: inbound, outbound, lateral)",
        "ethertype": "Value of the Ethertype header field in the Ethernet packet (2048 for IPv4; 34525 for IPv6)",
        "greChecksum": "Value of the Checkusm header field in the GRE packet",
        "greEthertype": "Value of the Ethertype header field in the GRE packet",
        "greHeaderLength": "Length of the GRE packet header, in bytes",
        "greKey": "Value of the Key header field in the GRE packet",
        "greSequenceNumber": "Value of the Sequence Number header field in the GRE packet",
        "greVersion": "Value of the Version header field in the GRE packet",
        "icmpChecksum": "Value of the Checkusm header field in the ICMP packet",
        "icmpCode": "Value of the Code header field in the ICMP packet",
        "icmpType": "Value of the Type header field in the ICMP packet",
        "ipDestinationAddress": "Value of the Destination Address header field in the IPv4 or IPv6 packet",
        "ipDestinationSubnet": "Computed subnet of the Destination Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6)",
        "ipFragmentOffset": "Value of the Fragment Offset header field in the IPv4 or IPv6 packet",
        "ipHeaderLength": "Length of the IPv4 or IPv6 packet header, in bytes",
        "ipMoreFragments": "Value of the More Fragments header field in the IPv4 or IPv6 packet",
        "ipProtocol": "Value of the Protocol header field in the IPv4 or IPv6 packet",
        "ipProtocolName": "Name of the protocol specified by the Protocol header field in the IPv4 or IPv6 packet",
        "ipSourceAddress": "Value of the Source Address header field in the IPv4 or IPv6 packet",
        "ipSourceSubnet": "Computed subnet of the Source Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6)",
        "ipTotalLength": "Total length of the IPv4 or IPv6 packet, in bytes",
        "ipTotalLengthBuckets": "Total length of the IPv4 or IPv6 packet, in bytes, with the last two digits truncated",
        "ipTtl": "Value of the TTL header field in the IPv4 packet or the Hop Limit header field in the IPv6 packet",
        "ipTtlBuckets": "Value of the TTL header field in the IPv4 packet or the Hop Limit header field in the IPv6 packet, with the last digit truncated",
        "ipv4Checksum": "Value of the Checksum header field in the IPv4 packet",
        "ipv4DontFragment": "Value of the Don't Fragment header field in the IPv4 packet",
        "ipv4Dscp": "Value of the Differentiated Services Code Point header field in the IPv4 packet",
        "ipv4Ecn": "Value of the Explicit Congestion Notification header field in the IPv4 packet",
        "ipv4Identification": "Value of the Identification header field in the IPv4 packet",
        "ipv4Options": "List of Options numbers included in the IPv4 packet header",
        "ipv6Dscp": "Value of the Differentiated Services Code Point header field in the IPv6 packet",
        "ipv6Ecn": "Value of the Explicit Congestion Notification header field in the IPv6 packet",
        "ipv6ExtensionHeaders": "List of Extension Header numbers included in the IPv6 packet header",
        "ipv6FlowLabel": "Value of the Flow Label header field in the IPv6 packet",
        "ipv6Identification": "Value of the Identification extension header field in the IPv6 packet",
        "mitigationSystem": "Which system dropped the packet (possible values: dosd, flowtrackd, magic-firewall)",
        "outcome": "The action that was taken on the packet (possible values: pass, drop)",
        "sampleInterval": "ABR sample interval",
        "sourceAsn": "ASN associated with the source IP of the packet, or 0 if there was no mapping available",
        "sourceAsnName": "Name of ASN associated with the source IP of the packet, if available",
        "sourceCountry": "Country where the source IP of the packet is located (ISO 3166-1 alpha-2)",
        "sourceGeohash": "Latitude and longitude where the source IP of the packet is located (Geohash encoding)",
        "sourcePort": "Value of the Source Port header field in the TCP or UDP packet",
        "tcpAcknowledgementNumber": "Value of the Acknowledgement Number header field in the TCP packet",
        "tcpChecksum": "Value of the Checkusm header field in the TCP packet",
        "tcpDataOffset": "Value of the Data Offset header field in the TCP packet",
        "tcpFlags": "Value of the Flags header field in the TCP packet",
        "tcpFlagsString": "Human-readable string representation of the Flags header field in the TCP packet",
        "tcpMss": "Value of the MSS option header field in the TCP packet",
        "tcpOptions": "List of Options numbers included in the TCP packet header",
        "tcpSackBlocks": "Value of the SACK Blocks option header field in the TCP packet",
        "tcpSackPermitted": "Value of the SACK Permitted option header field in the TCP packet",
        "tcpSequenceNumber": "Value of the Sequence Number header field in the TCP packet",
        "tcpTimestampEcr": "Value of the Timestamp Echo Reply option header field in the TCP packet",
        "tcpTimestampValue": "Value of the Timestamp option header field in the TCP packet",
        "tcpUrgentPointer": "Value of the Urgent Pointer header field in the TCP packet",
        "tcpWindowScale": "Value of the Window Scale option header field in the TCP packet",
        "tcpWindowSize": "Value of the Window Size header field in the TCP packet",
        "udpChecksum": "Value of the Checkusm header field in the UDP packet",
        "udpPayloadLength": "Value of the Payload Length header field in the UDP packet"
    },
    "AccountCdnNetworkAnalyticsAdaptiveGroupsFilter_InputObject": {},
    "AccountCdnNetworkAnalyticsAdaptiveGroupsOrderBy": {},
    "AccountCdnNetworkAnalyticsAdaptiveGroupsSum": {
        "bits": "Sum of bits received",
        "packets": "Sum of packets received"
    },
    "AccountDosdAttackAnalyticsGroups": {
        "attackId": "Unique identifier of the mitigation that matched the packet, if any",
        "attackType": "Type of attack traffic",
        "bits": "Sum of bits received during the attack",
        "commonTcpFlags": "Common TCP flags used by attack traffic, if any",
        "commonTcpFlagsNames": "Names of common TCP flags used by attack traffic, if any",
        "destinationIp": "Fixed destination IP used by attack traffic, if any",
        "destinationPort": "Fixed destination port used by attack traffic, if any",
        "endDatetime": "Date and time that the attack ended; not available for ongoing attacks",
        "ipProtocol": "Fixed protocol used by attack traffic, if any",
        "ipProtocolName": "Fixed protocol used by attack traffic, if any",
        "mitigationReason": "Type of mitigation applied to attack traffic",
        "mitigationScope": "Whether mitigation was applied in only some locations or globally",
        "mitigationType": "Type of mitigation applied to attack traffic",
        "packets": "Sum of packets received during the attack",
        "sourceIp": "Fixed source IP used by attack traffic, if any",
        "sourcePort": "Fixed source port used by attack traffic, if any",
        "startDatetime": "Date and time that the attack started",
        "tcpFlags": "Fixed TCP flags used by attack traffic, if any",
        "tcpFlagsNames": "Names of fixed TCP flags used by attack traffic, if any"
    },
    "AccountDosdAttackAnalyticsGroupsFilter_InputObject": {},
    "AccountDosdAttackAnalyticsGroupsOrderBy": {},
    "AccountDosdNetworkAnalyticsAdaptiveGroups": {
        "avg": "The average of values for a metric per dimension",
        "dimensions": "List of dimensions to group by",
        "sum": "The sum of values for a metric per dimension"
    },
    "AccountDosdNetworkAnalyticsAdaptiveGroupsAvg": {
        "bitRate": "Sum of bits received, divided by 1 second, providing a per-second bit rate when grouped by datetime",
        "bitRateDay": "Sum of bits received, divided by 86400 seconds, providing a per-second bit rate when grouped by date",
        "bitRateFifteenMinutes": "Sum of bits received, divided by 900 seconds, providing a per-second bit rate when grouped by datetimeFifteenMinutes",
        "bitRateFiveMinutes": "Sum of bits received, divided by 300 seconds, providing a per-second bit rate when grouped by datetimeFiveMinutes",
        "bitRateHour": "Sum of bits received, divided by 3600 seconds, providing a per-second bit rate when grouped by datetimeHour",
        "bitRateMinute": "Sum of bits received, divided by 60 seconds, providing a per-second bit rate when grouped by datetimeMinute",
        "bitRateTenSeconds": "Sum of bits received, divided by 10 seconds, providing a per-second bit rate when grouped by datetimeTenSeconds",
        "packetRate": "Sum of packets received, divided by 1 second, providing a per-second packet rate when grouped by datetime",
        "packetRateDay": "Sum of packets received, divided by 86400 seconds, providing a per-second packet rate when grouped by date",
        "packetRateFifteenMinutes": "Sum of packets received, divided by 900 seconds, providing a per-second packet rate when grouped by datetimeFifteenMinutes",
        "packetRateFiveMinutes": "Sum of packets received, divided by 300 seconds, providing a per-second packet rate when grouped by datetimeFiveMinutes",
        "packetRateHour": "Sum of packets received, divided by 3600 seconds, providing a per-second packet rate when grouped by datetimeHour",
        "packetRateMinute": "Sum of packets received, divided by 60 seconds, providing a per-second packet rate when grouped by datetimeMinute",
        "packetRateTenSeconds": "Sum of packets received, divided by 10 seconds, providing a per-second packet rate when grouped by datetimeTenSeconds"
    },
    "AccountDosdNetworkAnalyticsAdaptiveGroupsDimensions": {
        "attackId": "Unique identifier of the mitigation that matched the packet, if any",
        "coloCity": "City where the Cloudflare datacenter that received the packet is located",
        "coloCode": "Cloudflare datacenter that received the packet (nearest IATA airport code)",
        "coloCountry": "Country where the Cloudflare datacenter that received the packet is located (ISO 3166-1 alpha-2)",
        "coloGeohash": "Latitude and longitude where the Cloudflare datacenter that received the packet is located (Geohash encoding)",
        "coloName": "Cloudflare datacenter that received the packet (unique site identifier)",
        "date": "Date that the packet was received",
        "datetime": "Date and time that the packet was received",
        "datetimeFifteenMinutes": "Date and time that the packet was received, rounded to the start of the nearest fifteen minutes",
        "datetimeFiveMinutes": "Date and time that the packet was received, rounded to the start of the nearest five minutes",
        "datetimeHour": "Date and time that the packet was received, rounded to the start of the nearest hour",
        "datetimeMinute": "Date and time that the packet was received, rounded to the start of the nearest minute",
        "datetimeTenSeconds": "Date and time that the packet was received, rounded to the start of the nearest ten seconds",
        "destinationAsn": "ASN associated with the destination IP of the packet, or 0 if there was no mapping available",
        "destinationAsnName": "Name of ASN associated with the destination IP of the packet, if available",
        "destinationCountry": "Country where the destination IP of the packet is located (ISO 3166-1 alpha-2)",
        "destinationGeohash": "Latitude and longitude where the destination IP of the packet is located (Geohash encoding)",
        "destinationPort": "Value of the Destination Port header field in the TCP or UDP packet",
        "direction": "Direction of the packet relative to the customer network (possible values: inbound, outbound, lateral)",
        "ethertype": "Value of the Ethertype header field in the Ethernet packet (2048 for IPv4; 34525 for IPv6)",
        "greChecksum": "Value of the Checkusm header field in the GRE packet",
        "greEthertype": "Value of the Ethertype header field in the GRE packet",
        "greHeaderLength": "Length of the GRE packet header, in bytes",
        "greKey": "Value of the Key header field in the GRE packet",
        "greSequenceNumber": "Value of the Sequence Number header field in the GRE packet",
        "greVersion": "Value of the Version header field in the GRE packet",
        "icmpChecksum": "Value of the Checkusm header field in the ICMP packet",
        "icmpCode": "Value of the Code header field in the ICMP packet",
        "icmpType": "Value of the Type header field in the ICMP packet",
        "ipDestinationAddress": "Value of the Destination Address header field in the IPv4 or IPv6 packet",
        "ipDestinationSubnet": "Computed subnet of the Destination Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6)",
        "ipFragmentOffset": "Value of the Fragment Offset header field in the IPv4 or IPv6 packet",
        "ipHeaderLength": "Length of the IPv4 or IPv6 packet header, in bytes",
        "ipMoreFragments": "Value of the More Fragments header field in the IPv4 or IPv6 packet",
        "ipProtocol": "Value of the Protocol header field in the IPv4 or IPv6 packet",
        "ipProtocolName": "Name of the protocol specified by the Protocol header field in the IPv4 or IPv6 packet",
        "ipSourceAddress": "Value of the Source Address header field in the IPv4 or IPv6 packet",
        "ipSourceSubnet": "Computed subnet of the Source Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6)",
        "ipTotalLength": "Total length of the IPv4 or IPv6 packet, in bytes",
        "ipTotalLengthBuckets": "Total length of the IPv4 or IPv6 packet, in bytes, with the last two digits truncated",
        "ipTtl": "Value of the TTL header field in the IPv4 packet or the Hop Limit header field in the IPv6 packet",
        "ipTtlBuckets": "Value of the TTL header field in the IPv4 packet or the Hop Limit header field in the IPv6 packet, with the last digit truncated",
        "ipv4Checksum": "Value of the Checksum header field in the IPv4 packet",
        "ipv4DontFragment": "Value of the Don't Fragment header field in the IPv4 packet",
        "ipv4Dscp": "Value of the Differentiated Services Code Point header field in the IPv4 packet",
        "ipv4Ecn": "Value of the Explicit Congestion Notification header field in the IPv4 packet",
        "ipv4Identification": "Value of the Identification header field in the IPv4 packet",
        "ipv4Options": "List of Options numbers included in the IPv4 packet header",
        "ipv6Dscp": "Value of the Differentiated Services Code Point header field in the IPv6 packet",
        "ipv6Ecn": "Value of the Explicit Congestion Notification header field in the IPv6 packet",
        "ipv6ExtensionHeaders": "List of Extension Header numbers included in the IPv6 packet header",
        "ipv6FlowLabel": "Value of the Flow Label header field in the IPv6 packet",
        "ipv6Identification": "Value of the Identification extension header field in the IPv6 packet",
        "mitigationReason": "Reason for applying a mitigation to the packet, if any",
        "mitigationScope": "Whether the packet matched a local or global mitigation, if any (possible values: local, global)",
        "outcome": "The action that was taken on the packet (possible values: pass, drop)",
        "protocolState": "State of the packet in the context of the protocol, if available",
        "ruleId": "Unique identifier of the rule that matched the packet, if any",
        "rulesetId": "Unique identifier of the ruleset containing the rule that matched the packet, if any",
        "rulesetOverrideId": "Unique identifier of the ruleset override containing the rule that matched the packet, if any",
        "sampleInterval": "ABR sample interval",
        "sourceAsn": "ASN associated with the source IP of the packet, or 0 if there was no mapping available",
        "sourceAsnName": "Name of ASN associated with the source IP of the packet, if available",
        "sourceCountry": "Country where the source IP of the packet is located (ISO 3166-1 alpha-2)",
        "sourceGeohash": "Latitude and longitude where the source IP of the packet is located (Geohash encoding)",
        "sourcePort": "Value of the Source Port header field in the TCP or UDP packet",
        "tcpAcknowledgementNumber": "Value of the Acknowledgement Number header field in the TCP packet",
        "tcpChecksum": "Value of the Checkusm header field in the TCP packet",
        "tcpDataOffset": "Value of the Data Offset header field in the TCP packet",
        "tcpFlags": "Value of the Flags header field in the TCP packet",
        "tcpFlagsString": "Human-readable string representation of the Flags header field in the TCP packet",
        "tcpMss": "Value of the MSS option header field in the TCP packet",
        "tcpOptions": "List of Options numbers included in the TCP packet header",
        "tcpSackBlocks": "Value of the SACK Blocks option header field in the TCP packet",
        "tcpSackPermitted": "Value of the SACK Permitted option header field in the TCP packet",
        "tcpSequenceNumber": "Value of the Sequence Number header field in the TCP packet",
        "tcpTimestampEcr": "Value of the Timestamp Echo Reply option header field in the TCP packet",
        "tcpTimestampValue": "Value of the Timestamp option header field in the TCP packet",
        "tcpUrgentPointer": "Value of the Urgent Pointer header field in the TCP packet",
        "tcpWindowScale": "Value of the Window Scale option header field in the TCP packet",
        "tcpWindowSize": "Value of the Window Size header field in the TCP packet",
        "udpChecksum": "Value of the Checkusm header field in the UDP packet",
        "udpPayloadLength": "Value of the Payload Length header field in the UDP packet",
        "verdict": "The action that Cloudflare thinks should be taken on the packet (possible values: pass, drop)"
    },
    "AccountDosdNetworkAnalyticsAdaptiveGroupsFilter_InputObject": {},
    "AccountDosdNetworkAnalyticsAdaptiveGroupsOrderBy": {},
    "AccountDosdNetworkAnalyticsAdaptiveGroupsSum": {
        "bits": "Sum of bits received",
        "packets": "Sum of packets received"
    },
    "AccountDurableObjectsInvocationsAdaptiveGroups": {
        "avg": "The average value used for sample interval",
        "dimensions": "List of dimensions to group by",
        "max": "The max value for a metric",
        "min": "The min value for a metric",
        "quantiles": "Quantiles of a metric per dimension",
        "sum": "The sum of values for a metric per dimension"
    },
    "AccountDurableObjectsInvocationsAdaptiveGroupsAvg": {
        "sampleInterval": ""
    },
    "AccountDurableObjectsInvocationsAdaptiveGroupsDimensions": {
        "date": "Request datetime, truncated to start of a day",
        "datetime": "Request datetime",
        "datetimeHour": "Request datetime, truncated to start of an hour",
        "datetimeMinute": "Request datetime, truncated to start of a minute",
        "environmentName": "The name of the script environment",
        "namespaceId": "Durable Object namespace ID",
        "objectId": "Durable Object ID as a hex string",
        "scriptName": "The name of the script",
        "status": "Status of the worker invocation"
    },
    "AccountDurableObjectsInvocationsAdaptiveGroupsFilter_InputObject": {},
    "AccountDurableObjectsInvocationsAdaptiveGroupsMax": {
        "responseBodySize": "Maximum response body size for one request - bytes",
        "wallTime": "Maximum wall time for one request - microseconds"
    },
    "AccountDurableObjectsInvocationsAdaptiveGroupsMin": {
        "responseBodySize": "Minimum response body size for one request - bytes",
        "wallTime": "Minimum wall time for one request - microseconds"
    },
    "AccountDurableObjectsInvocationsAdaptiveGroupsOrderBy": {},
    "AccountDurableObjectsInvocationsAdaptiveGroupsQuantiles": {
        "responseBodySizeP25": "Response body size 25th percentile - bytes",
        "responseBodySizeP50": "Response body size 50th percentile - bytes",
        "responseBodySizeP75": "Response body size 75th percentile - bytes",
        "responseBodySizeP90": "Response body size 90th percentile - bytes",
        "responseBodySizeP99": "Response body size 99th percentile - bytes",
        "responseBodySizeP999": "Response body size 99.9th percentile - bytes",
        "wallTimeP25": "Wall time 25th percentile - microseconds",
        "wallTimeP50": "Wall time 50th percentile - microseconds",
        "wallTimeP75": "Wall time 75th percentile - microseconds",
        "wallTimeP90": "Wall time 90th percentile - microseconds",
        "wallTimeP99": "Wall time 99th percentile - microseconds",
        "wallTimeP999": "Wall time 99.9th percentile - microseconds"
    },
    "AccountDurableObjectsInvocationsAdaptiveGroupsSum": {
        "errors": "Sum of errors",
        "requests": "Sum of requests",
        "responseBodySize": "Sum of response body sizes",
        "wallTime": "Sum of wall time"
    },
    "AccountDurableObjectsPeriodicGroups": {
        "dimensions": "List of dimensions to group by",
        "max": "The max value for a metric",
        "sum": "The sum of values for a metric per dimension"
    },
    "AccountDurableObjectsPeriodicGroupsDimensions": {
        "date": "Datetime the metrics period started, truncated to start of a day",
        "datetimeHour": "Datetime the metrics period started, truncated to start of an hour",
        "datetimeMinute": "Datetime the metrics period started, truncated to start of a minute",
        "namespaceId": "Durable Object namespace ID",
        "objectId": "Durable Object ID as a hex string"
    },
    "AccountDurableObjectsPeriodicGroupsFilter_InputObject": {},
    "AccountDurableObjectsPeriodicGroupsMax": {
        "activeWebsocketConnections": "Maximum active websocket connections in the time window"
    },
    "AccountDurableObjectsPeriodicGroupsOrderBy": {},
    "AccountDurableObjectsPeriodicGroupsSum": {
        "activeTime": "Sum of active time - microseconds",
        "cpuTime": "Sum of CPU time - microseconds",
        "exceededCpuErrors": "Sum of CPU exceeded errors",
        "exceededMemoryErrors": "Sum of memory exceeded errors",
        "fatalInternalErrors": "Sum of fatal internal server errors",
        "inboundWebsocketMsgCount": "Sum of incoming websocket messages",
        "outboundWebsocketMsgCount": "Sum of outbound websocket messages",
        "storageDeletes": "Sum of storage deletes",
        "storageReadUnits": "Sum of storage reads - in 4KB units",
        "storageWriteUnits": "Sum of storage writes - in 4KB units",
        "subrequests": "Sum of subrequests"
    },
    "AccountDurableObjectsStorageGroups": {
        "dimensions": "List of dimensions to group by",
        "max": "The sum of values for a metric per dimension"
    },
    "AccountDurableObjectsStorageGroupsDimensions": {
        "date": "Datetime that the storage usage was recorded, truncated to start of a day",
        "datetimeHour": "Datetime that the storage usage was recorded, truncated to start of an hour"
    },
    "AccountDurableObjectsStorageGroupsFilter_InputObject": {},
    "AccountDurableObjectsStorageGroupsMax": {
        "storedBytes": "Max of stored bytes"
    },
    "AccountDurableObjectsStorageGroupsOrderBy": {},
    "AccountDurableObjectsSubrequestsAdaptiveGroups": {
        "dimensions": "List of dimensions to group by",
        "sum": "The sum of values for a metric per dimension"
    },
    "AccountDurableObjectsSubrequestsAdaptiveGroupsDimensions": {
        "date": "Request datetime, truncated to start of a day",
        "datetime": "Request datetime",
        "datetimeHour": "Request datetime, truncated to start of an hour",
        "datetimeMinute": "Request datetime, truncated to start of a minute",
        "environmentName": "The name of the script environment",
        "namespaceId": "Durable Object namespace ID",
        "objectId": "Durable Object ID as a hex string",
        "scriptName": "The name of the script"
    },
    "AccountDurableObjectsSubrequestsAdaptiveGroupsFilter_InputObject": {},
    "AccountDurableObjectsSubrequestsAdaptiveGroupsOrderBy": {},
    "AccountDurableObjectsSubrequestsAdaptiveGroupsSum": {
        "requestBodySizeUncached": "Outgoing Durable Objects fetch request body size in bytes where the request was not cached"
    },
    "AccountFbmAttackAnalyticsGroups": {
        "attackId": "Unique identifier of the mitigation that matched the packet, if any",
        "attackType": "Type of attack traffic",
        "bits": "Sum of bits received during the attack",
        "commonTcpFlags": "Common TCP flags used by attack traffic, if any",
        "commonTcpFlagsNames": "Names of common TCP flags used by attack traffic, if any",
        "destinationIp": "Fixed destination IP used by attack traffic, if any",
        "destinationPort": "Fixed destination port used by attack traffic, if any",
        "endDatetime": "Date and time that the attack ended; not available for ongoing attacks",
        "ipProtocol": "Fixed protocol used by attack traffic, if any",
        "ipProtocolName": "Fixed protocol used by attack traffic, if any",
        "mitigationReason": "Type of mitigation applied to attack traffic",
        "mitigationScope": "Whether mitigation was applied in only some locations or globally",
        "mitigationType": "Type of mitigation applied to attack traffic",
        "packets": "Sum of packets received during the attack",
        "sourceIp": "Fixed source IP used by attack traffic, if any",
        "sourcePort": "Fixed source port used by attack traffic, if any",
        "startDatetime": "Date and time that the attack started",
        "tcpFlags": "Fixed TCP flags used by attack traffic, if any",
        "tcpFlagsNames": "Names of fixed TCP flags used by attack traffic, if any"
    },
    "AccountFbmAttackAnalyticsGroupsFilter_InputObject": {},
    "AccountFbmAttackAnalyticsGroupsOrderBy": {},
    "AccountFilter_InputObject": {},
    "AccountFirewallEventsAdaptive": {
        "action": "The code of the first-class action the Cloudflare Firewall took on this request",
        "apiGatewayMatchedEndpoint": "API Gateway endpoint matched at the edge",
        "botScore": "The final score originated from bot management detections.",
        "botScoreSrcName": "Name of the source detection which generated the bot management score.",
        "clientASNDescription": "The ASN of the visitor as string",
        "clientAsn": "The ASN number of the visitor",
        "clientCountryName": "Country from which request originated",
        "clientIP": "The visitor's IP address (IPv4 or IPv6)",
        "clientIPClass": "The classification of the visitor's IP address, possible values are: unknown | clean | badHost | searchEngine | allowlist | greylist | monitoringService | securityScanner | noRecord | scan | backupService | mobilePlatform | tor",
        "clientRefererHost": "The referer host",
        "clientRefererPath": "The referer path requested by visitor",
        "clientRefererQuery": "The referer query-string was requested by the visitor",
        "clientRefererScheme": "The referer url scheme requested by the visitor",
        "clientRequestHTTPHost": "The HTTP hostname requested by the visitor",
        "clientRequestHTTPMethodName": "The HTTP method used by the visitor",
        "clientRequestHTTPProtocol": "The version of HTTP protocol requested by the visitor",
        "clientRequestPath": "The path requested by visitor",
        "clientRequestQuery": "The query-string was requested by the visitor",
        "clientRequestScheme": "The url scheme requested by the visitor",
        "contentScanHasFailed": "1 if not all contents for this request where successfully scanned, else 0",
        "contentScanNumMaliciousObj": "Number of scannable content objects that are malicious",
        "contentScanNumObj": "Number of scannable content objects",
        "contentScanObjResults": "Array of scan results in order of detection",
        "contentScanObjTypes": "Array of content types in order of detection",
        "date": "The date the event occurred at the edge",
        "datetime": "The date and time the event occurred at the edge",
        "datetimeFifteenMinutes": "The date and time the event occurred at the edge truncated to a multiple of 15 minutes",
        "datetimeFiveMinutes": "The date and time the event occurred at the edge truncated to a multiple of 5 minutes",
        "datetimeHour": "The date and time the event occurred at the edge truncated to hours",
        "datetimeMinute": "The date and time the event occurred at the edge truncated to the minute",
        "edgeColoName": "The airport code of the Cloudflare datacenter that served this request",
        "edgeResponseStatus": "HTTP response status code returned to browser",
        "httpApplication": "Unique identifier for HTTP Application",
        "httpApplicationVersion": "Version associated with HTTP Application",
        "ja3Hash": "MD5 hash of the JA3 TLS fingerprint",
        "kind": "The kind of event, currently only possible values are: firewall",
        "matchIndex": "Rules match index in the chain",
        "metadata": "Additional product-specific information. Metadata is organized in key:value pairs",
        "originResponseStatus": "HTTP origin response status code returned to browser",
        "originatorRayName": "The RayId of the request that issued the challenge/jschallenge",
        "rayName": "The RayId of the request",
        "ref": "The ref-field is a user-defined rule identifier that can be set via the API for some firewall products and allows users to label their rules individually alongside cloudflare provided identifiers (only available to entitled customers)",
        "ruleId": "The Cloudflare security product-specific RuleId triggered by this request",
        "rulesetId": "The Cloudflare security product-specific RulesetId triggered by this request",
        "sampleInterval": "ABR sample interval",
        "source": "The Cloudflare security product triggered by this request",
        "userAgent": "visitor's user-agent string",
        "wafAttackScore": "Beta. Overall request score generated by the WAF detection module",
        "wafMlAttackScore": "Beta. Overall request score generated by the WAF detection module",
        "wafMlSqliAttackScore": "Beta. WAF ML score for an SQLi attack",
        "wafMlXssAttackScore": "Beta. WAF ML score for an XSS attack",
        "wafRceAttackScore": "Beta. WAF score for a RCE attack",
        "wafSqliAttackScore": "Beta. WAF score for a SQLi attack",
        "wafXssAttackScore": "Beta. WAF score for a XSS attack"
    },
    "AccountFirewallEventsAdaptiveFilter_InputObject": {},
    "AccountFirewallEventsAdaptiveGroups": {
        "avg": "The average value used for sample interval",
        "count": "The sum of sample interval values",
        "dimensions": "List of dimensions to group by"
    },
    "AccountFirewallEventsAdaptiveGroupsAvg": {
        "sampleInterval": ""
    },
    "AccountFirewallEventsAdaptiveGroupsDimensions": {
        "action": "The code of the first-class action the Cloudflare Firewall took on this request",
        "apiGatewayMatchedEndpoint": "API Gateway endpoint matched at the edge",
        "botScore": "The final score originated from bot management detections.",
        "botScoreSrcName": "Name of the source detection which generated the bot management score.",
        "clientASNDescription": "The ASN of the visitor as string",
        "clientAsn": "The ASN number of the visitor",
        "clientCountryName": "Country from which request originated",
        "clientIP": "The visitor's IP address (IPv4 or IPv6)",
        "clientIPClass": "The classification of the visitor's IP address, possible values are: unknown | clean | badHost | searchEngine | allowlist | greylist | monitoringService | securityScanner | noRecord | scan | backupService | mobilePlatform | tor",
        "clientRefererHost": "The referer host",
        "clientRefererPath": "The referer path requested by visitor",
        "clientRefererQuery": "The referer query-string was requested by the visitor",
        "clientRefererScheme": "The referer url scheme requested by the visitor",
        "clientRequestHTTPHost": "The HTTP hostname requested by the visitor",
        "clientRequestHTTPMethodName": "The HTTP method used by the visitor",
        "clientRequestHTTPProtocol": "The version of HTTP protocol requested by the visitor",
        "clientRequestPath": "The path requested by visitor",
        "clientRequestQuery": "The query-string was requested by the visitor",
        "clientRequestScheme": "The url scheme requested by the visitor",
        "date": "The date the event occurred at the edge",
        "datetime": "The date and time the event occurred at the edge",
        "datetimeFifteenMinutes": "The date and time the event occurred at the edge truncated to a multiple of 15 minutes",
        "datetimeFiveMinutes": "The date and time the event occurred at the edge truncated to a multiple of 5 minutes",
        "datetimeHour": "The date and time the event occurred at the edge truncated to hours",
        "datetimeMinute": "The date and time the event occurred at the edge truncated to the minute",
        "edgeColoName": "The airport code of the Cloudflare datacenter that served this request",
        "edgeResponseStatus": "HTTP response status code returned to browser",
        "httpApplication": "Unique identifier for HTTP Application",
        "httpApplicationVersion": "Version associated with HTTP Application",
        "ja3Hash": "MD5 hash of the JA3 TLS fingerprint",
        "kind": "The kind of event, currently only possible values are: firewall",
        "matchIndex": "Rules match index in the chain",
        "originResponseStatus": "HTTP origin response status code returned to browser",
        "originatorRayName": "The RayId of the request that issued the challenge/jschallenge",
        "rayName": "The RayId of the request",
        "ref": "The ref-field is a user-defined rule identifier that can be set via the API for some firewall products and allows users to label their rules individually alongside cloudflare provided identifiers (only available to entitled customers)",
        "ruleId": "The Cloudflare security product-specific RuleId triggered by this request",
        "rulesetId": "The Cloudflare security product-specific RulesetId triggered by this request",
        "sampleInterval": "ABR sample interval",
        "source": "The Cloudflare security product triggered by this request",
        "userAgent": "visitor's user-agent string",
        "wafAttackScore": "Beta. Overall request score generated by the WAF detection module",
        "wafMlAttackScore": "Beta. Overall request score generated by the WAF ML detection module",
        "wafMlSqliAttackScore": "Beta. WAF ML score for an SQLi attack",
        "wafMlXssAttackScore": "Beta. WAF ML score for an XSS attack",
        "wafRceAttackScore": "Beta. WAF score for a RCE attack",
        "wafSqliAttackScore": "Beta. WAF score for a SQLi attack",
        "wafXssAttackScore": "Beta. WAF score for a XSS attack"
    },
    "AccountFirewallEventsAdaptiveGroupsFilter_InputObject": {},
    "AccountFirewallEventsAdaptiveGroupsOrderBy": {},
    "AccountFirewallEventsAdaptiveMetadataElem": {
        "key": "The key of the metadata. Key format can vary by Cloudflare security product and can change over time.",
        "value": "The value of the metadata. Value format can vary by Cloudflare security product and can change over time."
    },
    "AccountFirewallEventsAdaptiveOrderBy": {},
    "AccountFlowtrackdNetworkAnalyticsAdaptiveGroups": {
        "avg": "The average of values for a metric per dimension",
        "dimensions": "List of dimensions to group by",
        "sum": "The sum of values for a metric per dimension"
    },
    "AccountFlowtrackdNetworkAnalyticsAdaptiveGroupsAvg": {
        "bitRate": "Sum of bits received, divided by 1 second, providing a per-second bit rate when grouped by datetime",
        "bitRateDay": "Sum of bits received, divided by 86400 seconds, providing a per-second bit rate when grouped by date",
        "bitRateFifteenMinutes": "Sum of bits received, divided by 900 seconds, providing a per-second bit rate when grouped by datetimeFifteenMinutes",
        "bitRateFiveMinutes": "Sum of bits received, divided by 300 seconds, providing a per-second bit rate when grouped by datetimeFiveMinutes",
        "bitRateHour": "Sum of bits received, divided by 3600 seconds, providing a per-second bit rate when grouped by datetimeHour",
        "bitRateMinute": "Sum of bits received, divided by 60 seconds, providing a per-second bit rate when grouped by datetimeMinute",
        "bitRateTenSeconds": "Sum of bits received, divided by 10 seconds, providing a per-second bit rate when grouped by datetimeTenSeconds",
        "packetRate": "Sum of packets received, divided by 1 second, providing a per-second packet rate when grouped by datetime",
        "packetRateDay": "Sum of packets received, divided by 86400 seconds, providing a per-second packet rate when grouped by date",
        "packetRateFifteenMinutes": "Sum of packets received, divided by 900 seconds, providing a per-second packet rate when grouped by datetimeFifteenMinutes",
        "packetRateFiveMinutes": "Sum of packets received, divided by 300 seconds, providing a per-second packet rate when grouped by datetimeFiveMinutes",
        "packetRateHour": "Sum of packets received, divided by 3600 seconds, providing a per-second packet rate when grouped by datetimeHour",
        "packetRateMinute": "Sum of packets received, divided by 60 seconds, providing a per-second packet rate when grouped by datetimeMinute",
        "packetRateTenSeconds": "Sum of packets received, divided by 10 seconds, providing a per-second packet rate when grouped by datetimeTenSeconds"
    },
    "AccountFlowtrackdNetworkAnalyticsAdaptiveGroupsDimensions": {
        "coloCity": "City where the Cloudflare datacenter that received the packet is located",
        "coloCode": "Cloudflare datacenter that received the packet (nearest IATA airport code)",
        "coloCountry": "Country where the Cloudflare datacenter that received the packet is located (ISO 3166-1 alpha-2)",
        "coloGeohash": "Latitude and longitude where the Cloudflare datacenter that received the packet is located (Geohash encoding)",
        "coloName": "Cloudflare datacenter that received the packet (unique site identifier)",
        "date": "Date that the packet was received",
        "datetime": "Date and time that the packet was received",
        "datetimeFifteenMinutes": "Date and time that the packet was received, rounded to the start of the nearest fifteen minutes",
        "datetimeFiveMinutes": "Date and time that the packet was received, rounded to the start of the nearest five minutes",
        "datetimeHour": "Date and time that the packet was received, rounded to the start of the nearest hour",
        "datetimeMinute": "Date and time that the packet was received, rounded to the start of the nearest minute",
        "datetimeTenSeconds": "Date and time that the packet was received, rounded to the start of the nearest ten seconds",
        "destinationAsn": "ASN associated with the destination IP of the packet, or 0 if there was no mapping available",
        "destinationAsnName": "Name of ASN associated with the destination IP of the packet, if available",
        "destinationCountry": "Country where the destination IP of the packet is located (ISO 3166-1 alpha-2)",
        "destinationGeohash": "Latitude and longitude where the destination IP of the packet is located (Geohash encoding)",
        "destinationPort": "Value of the Destination Port header field in the TCP or UDP packet",
        "direction": "Direction of the packet relative to the customer network (possible values: inbound, outbound, lateral)",
        "ethertype": "Value of the Ethertype header field in the Ethernet packet (2048 for IPv4; 34525 for IPv6)",
        "greChecksum": "Value of the Checkusm header field in the GRE packet",
        "greEthertype": "Value of the Ethertype header field in the GRE packet",
        "greHeaderLength": "Length of the GRE packet header, in bytes",
        "greKey": "Value of the Key header field in the GRE packet",
        "greSequenceNumber": "Value of the Sequence Number header field in the GRE packet",
        "greVersion": "Value of the Version header field in the GRE packet",
        "icmpChecksum": "Value of the Checkusm header field in the ICMP packet",
        "icmpCode": "Value of the Code header field in the ICMP packet",
        "icmpType": "Value of the Type header field in the ICMP packet",
        "ipDestinationAddress": "Value of the Destination Address header field in the IPv4 or IPv6 packet",
        "ipDestinationSubnet": "Computed subnet of the Destination Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6)",
        "ipFragmentOffset": "Value of the Fragment Offset header field in the IPv4 or IPv6 packet",
        "ipHeaderLength": "Length of the IPv4 or IPv6 packet header, in bytes",
        "ipMoreFragments": "Value of the More Fragments header field in the IPv4 or IPv6 packet",
        "ipProtocol": "Value of the Protocol header field in the IPv4 or IPv6 packet",
        "ipProtocolName": "Name of the protocol specified by the Protocol header field in the IPv4 or IPv6 packet",
        "ipSourceAddress": "Value of the Source Address header field in the IPv4 or IPv6 packet",
        "ipSourceSubnet": "Computed subnet of the Source Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6)",
        "ipTotalLength": "Total length of the IPv4 or IPv6 packet, in bytes",
        "ipTotalLengthBuckets": "Total length of the IPv4 or IPv6 packet, in bytes, with the last two digits truncated",
        "ipTtl": "Value of the TTL header field in the IPv4 packet or the Hop Limit header field in the IPv6 packet",
        "ipTtlBuckets": "Value of the TTL header field in the IPv4 packet or the Hop Limit header field in the IPv6 packet, with the last digit truncated",
        "ipv4Checksum": "Value of the Checksum header field in the IPv4 packet",
        "ipv4DontFragment": "Value of the Don't Fragment header field in the IPv4 packet",
        "ipv4Dscp": "Value of the Differentiated Services Code Point header field in the IPv4 packet",
        "ipv4Ecn": "Value of the Explicit Congestion Notification header field in the IPv4 packet",
        "ipv4Identification": "Value of the Identification header field in the IPv4 packet",
        "ipv4Options": "List of Options numbers included in the IPv4 packet header",
        "ipv6Dscp": "Value of the Differentiated Services Code Point header field in the IPv6 packet",
        "ipv6Ecn": "Value of the Explicit Congestion Notification header field in the IPv6 packet",
        "ipv6ExtensionHeaders": "List of Extension Header numbers included in the IPv6 packet header",
        "ipv6FlowLabel": "Value of the Flow Label header field in the IPv6 packet",
        "ipv6Identification": "Value of the Identification extension header field in the IPv6 packet",
        "mitigationReason": "Reason for applying a mitigation to the packet, if any",
        "mitigationScope": "Whether the packet matched a local or global mitigation, if any (possible values: local, global)",
        "outcome": "The action that was taken on the packet (possible values: pass, drop)",
        "protocolState": "State of the packet in the context of the protocol, if available",
        "sampleInterval": "ABR sample interval",
        "sourceAsn": "ASN associated with the source IP of the packet, or 0 if there was no mapping available",
        "sourceAsnName": "Name of ASN associated with the source IP of the packet, if available",
        "sourceCountry": "Country where the source IP of the packet is located (ISO 3166-1 alpha-2)",
        "sourceGeohash": "Latitude and longitude where the source IP of the packet is located (Geohash encoding)",
        "sourcePort": "Value of the Source Port header field in the TCP or UDP packet",
        "tcpAcknowledgementNumber": "Value of the Acknowledgement Number header field in the TCP packet",
        "tcpChecksum": "Value of the Checkusm header field in the TCP packet",
        "tcpDataOffset": "Value of the Data Offset header field in the TCP packet",
        "tcpFlags": "Value of the Flags header field in the TCP packet",
        "tcpFlagsString": "Human-readable string representation of the Flags header field in the TCP packet",
        "tcpMss": "Value of the MSS option header field in the TCP packet",
        "tcpOptions": "List of Options numbers included in the TCP packet header",
        "tcpSackBlocks": "Value of the SACK Blocks option header field in the TCP packet",
        "tcpSackPermitted": "Value of the SACK Permitted option header field in the TCP packet",
        "tcpSequenceNumber": "Value of the Sequence Number header field in the TCP packet",
        "tcpTimestampEcr": "Value of the Timestamp Echo Reply option header field in the TCP packet",
        "tcpTimestampValue": "Value of the Timestamp option header field in the TCP packet",
        "tcpUrgentPointer": "Value of the Urgent Pointer header field in the TCP packet",
        "tcpWindowScale": "Value of the Window Scale option header field in the TCP packet",
        "tcpWindowSize": "Value of the Window Size header field in the TCP packet",
        "udpChecksum": "Value of the Checkusm header field in the UDP packet",
        "udpPayloadLength": "Value of the Payload Length header field in the UDP packet",
        "verdict": "The action that Cloudflare thinks should be taken on the packet (possible values: pass, drop)"
    },
    "AccountFlowtrackdNetworkAnalyticsAdaptiveGroupsFilter_InputObject": {},
    "AccountFlowtrackdNetworkAnalyticsAdaptiveGroupsOrderBy": {},
    "AccountFlowtrackdNetworkAnalyticsAdaptiveGroupsSum": {
        "bits": "Sum of bits received",
        "packets": "Sum of packets received"
    },
    "AccountGatewayL4DownstreamSessionsAdaptiveGroups": {
        "count": "The number of downstream sessions",
        "dimensions": "List of dimensions to group by",
        "quantiles": "",
        "sum": ""
    },
    "AccountGatewayL4DownstreamSessionsAdaptiveGroupsDimensions": {
        "coloCode": "IATA Airport code that represents the city in which a Cloudflare data center (colo) is located",
        "coloCountry": "ISO 3166-1 alpha-2 code that represents the country in which a Cloudflare data center (colo) is located",
        "date": "Start timestamp of this session, truncated to date",
        "datetimeFifteenMinutes": "Start timestamp of this session, truncated to multiple of 15 minutes",
        "datetimeFiveMinutes": "Start timestamp of this session, truncated to multiple of 5 minutes",
        "datetimeHour": "Start timestamp of this session, truncated to the hour",
        "datetimeMinute": "Start timestamp of this session, truncated to the minute",
        "quicErrorCode": "QUIC specific error code. Possible values are https://www.iana.org/assignments/quic/quic.xhtml#quic-transport-error-codes",
        "rttUs": "Last Round Trip Time estimation for this session in microseconds",
        "sessionId": "Identifier for this session",
        "sourceIP": "IP address of the client making this session",
        "tokenAuthStatus": "Client token authentication status. Possible values are success | failed with invalid token and upto date token key ID | failed with invalid token due to outdated/missing token key ID | failed due to reused token",
        "tokenSigningRegion": "Broad location assigned to client in this session",
        "transport": "Transport protocol used for this session. Possible values are tcp | quic | udp",
        "transportHandshakeDurationUs": "Time taken for TCP/TLS or QUIC handshake in microsecond",
        "transportStatus": "Transport Status. Possible values are unknown | success | failure"
    },
    "AccountGatewayL4DownstreamSessionsAdaptiveGroupsFilter_InputObject": {},
    "AccountGatewayL4DownstreamSessionsAdaptiveGroupsOrderBy": {},
    "AccountGatewayL4DownstreamSessionsAdaptiveGroupsQuantiles": {
        "tokenAuthDurationUsP50": "Time taken for Client Token Authentication in microseconds",
        "transportHandshakeDurationUsP50": "Time taken for TCP/TLS or QUIC handshake in microseconds"
    },
    "AccountGatewayL4DownstreamSessionsAdaptiveGroupsSum": {
        "bytesRecvd": "Total bytes received in this session",
        "bytesSent": "Total bytes sent in this session",
        "clientBytesRetransmitted": "Total bytes retransmitted by client in this session",
        "packetsRecvd": "Total number of packets received in this session",
        "packetsSent": "Total number of packets sent in this session",
        "tokenAuthDurationUs": "Time taken for client token authentication in microseconds"
    },
    "AccountGatewayL4SessionsAdaptiveGroups": {
        "count": "The number of Gateway L4 sessions",
        "dimensions": "List of dimensions to group by"
    },
    "AccountGatewayL4SessionsAdaptiveGroupsDimensions": {
        "action": "action taken by gateway",
        "datetime": "Datetime that the session was started",
        "datetimeHour": "Datetime that the session was started truncated to hours",
        "datetimeMinute": "Datetime that the session was started truncated to minutes",
        "destinationIp": "The destination IP address for the session",
        "destinationPort": "The destination port for the session",
        "deviceId": "The device ID of the gateway user who initiated the session",
        "email": "The email address of the gateway user who initiated the session",
        "sni": "The SNI pulled from the session tls handshake, if present",
        "sourceIp": "The source IP address for the session",
        "sourcePort": "The source port for the session",
        "transport": "The transport protocol used in the session, one of (0, tcp) (1, quic) (2, udp)",
        "userId": "The ID of the gateway user who initiated the session"
    },
    "AccountGatewayL4SessionsAdaptiveGroupsFilter_InputObject": {},
    "AccountGatewayL4SessionsAdaptiveGroupsOrderBy": {},
    "AccountGatewayL4UpstreamSessionsAdaptiveGroups": {
        "count": "The number of upstream sessions",
        "dimensions": "List of dimensions to group by",
        "quantiles": "",
        "sum": ""
    },
    "AccountGatewayL4UpstreamSessionsAdaptiveGroupsDimensions": {
        "coloCode": "IATA Airport code that represents the city in which a Cloudflare data center (colo) is located",
        "coloCountry": "ISO 3166-1 alpha-2 code that represents the country in which a Cloudflare data center (colo) is located",
        "date": "Start timestamp of this session, truncated to date",
        "datetimeFifteenMinutes": "Start timestamp of this session, truncated to multiple of 15 minutes",
        "datetimeFiveMinutes": "Start timestamp of this session, truncated to multiple of 5 minutes",
        "datetimeHour": "Start timestamp of this session, truncated to the hour",
        "datetimeMinute": "Start timestamp of this session, truncated to the minute",
        "destinationIP": "IP address of the origin server",
        "domainName": "SNI domain name for this session",
        "downstreamSessionId": "Downstream session identifier of this session",
        "httpConnectReqStatus": "Client HTTP CONNECT request status. Possible values are unknown | success | failure",
        "quicErrorCode": "QUIC error code. Possible values are https://www.iana.org/assignments/quic/quic.xhtml#quic-transport-error-codes",
        "rttUs": "Last Round Trip Time estimation for this session in microseconds",
        "tokenSigningRegion": "Broad location assigned to client in this session",
        "totalTunnelSetupDurationUs": "Total time taken for tunnel setup in microseconds",
        "transport": "Transport protocol used for this session. Possible values are tcp | quic | udp",
        "transportStatus": "Transport status. Possible values are unknown | success | failure"
    },
    "AccountGatewayL4UpstreamSessionsAdaptiveGroupsFilter_InputObject": {},
    "AccountGatewayL4UpstreamSessionsAdaptiveGroupsOrderBy": {},
    "AccountGatewayL4UpstreamSessionsAdaptiveGroupsQuantiles": {
        "connectReqHandlingDurationUsP50": "Time taken for CONNECT request handling in microseconds",
        "totalTunnelSetupDurationUsP50": "Total time taken for tunnel setup in microseconds",
        "tunnelSetupDurationUsP50": "Time taken to setup the tunnel in microseconds"
    },
    "AccountGatewayL4UpstreamSessionsAdaptiveGroupsSum": {
        "bytesRecvd": "Total bytes received in this session",
        "bytesSent": "Total bytes sent in this session",
        "connectReqHandlingDurationUs": "Time taken for CONNECT request handling in microseconds",
        "originBytesRetransmitted": "Total bytes retransmitted by origin in this session",
        "packetsRecvd": "Total number of packets received in this session",
        "packetsSent": "Total number of packets sent in this session",
        "totalTunnelSetupDurationUs": "Total time taken for tunnel setup in microseconds",
        "tunnelSetupDurationUs": "Time taken for tunnel setup in microseconds"
    },
    "AccountGatewayL7RequestsAdaptiveGroups": {
        "count": "The number of Gateway L7 requests",
        "dimensions": "List of dimensions to group by"
    },
    "AccountGatewayL7RequestsAdaptiveGroupsDimensions": {
        "action": "action taken by gateway",
        "datetime": "Datetime that the request happened",
        "datetimeHour": "Datetime that the request happened truncated to hours",
        "datetimeMinute": "Datetime that the request happened truncated to minutes",
        "deviceId": "The device ID of the gateway user who made the request",
        "email": "The email address of the gateway user who made the request",
        "httpHost": "The destination host for the request",
        "isIsolated": "Indicates whether this request was made through an isolated link",
        "userId": "The ID of the gateway user who made the request"
    },
    "AccountGatewayL7RequestsAdaptiveGroupsFilter_InputObject": {},
    "AccountGatewayL7RequestsAdaptiveGroupsOrderBy": {},
    "AccountGatewayResolverByCategoryAdaptiveGroups": {
        "count": "The number of Gateway Resolver queries",
        "dimensions": "List of dimensions to group by"
    },
    "AccountGatewayResolverByCategoryAdaptiveGroupsDimensions": {
        "categoryId": "ID of the category that was assigned to the domain",
        "datetime": "The date and time the DNS query was resolved",
        "datetimeHour": "The date and time the event occurred at the edge truncated to hours",
        "datetimeMinute": "The date and time the event occurred at the edge truncated to minutes",
        "locationId": "The uuid identifying the customer Location used when resolving",
        "resolverDecision": "Enum identifier for the decision made by gateway-resolver, one of: (0, unknown) (1, allowedByQueryName) (2, blockedByQueryName) (3, blockedByCategory) (4, allowedOnNoLocation) (5, allowedOnNoPolicyMatch) (6, blockedAlwaysCategory) (7, overrideForSafeSearch) (8, overrideApplied) (9, blockedRule) (10, allowedRule)\n"
    },
    "AccountGatewayResolverByCategoryAdaptiveGroupsFilter_InputObject": {},
    "AccountGatewayResolverByCategoryAdaptiveGroupsOrderBy": {},
    "AccountGatewayResolverQueriesAdaptiveGroups": {
        "count": "The number of Gateway Resolver queries",
        "dimensions": "List of dimensions to group by"
    },
    "AccountGatewayResolverQueriesAdaptiveGroupsDimensions": {
        "categoryIds": "Json array of categories for this query",
        "datetime": "The date and time the DNS query was resolved",
        "datetimeHour": "The date and time the event occurred at the edge truncated to hours",
        "datetimeMinute": "The date and time the event occurred at the edge truncated to minutes",
        "locationId": "The uuid identifying the customer Location used when resolving",
        "queryNameReversed": "Name of the query in reverse order, e.g. com.cloudflare.teams.dash",
        "resolverDecision": "Enum identifier for the decision made by gateway-resolver, one of: (0, unknown) (1, allowedByQueryName) (2, blockedByQueryName) (3, blockedByCategory) (4, allowedOnNoLocation) (5, allowedOnNoPolicyMatch) (6, blockedAlwaysCategory) (7, overrideForSafeSearch) (8, overrideApplied) (9, blockedRule) (10, allowedRule)\n",
        "scheduleInfo": "Json object of schedule releated information"
    },
    "AccountGatewayResolverQueriesAdaptiveGroupsFilter_InputObject": {},
    "AccountGatewayResolverQueriesAdaptiveGroupsOrderBy": {},
    "AccountHttpRequests1dGroups": {
        "avg": "The average value for a metric per dimension",
        "dimensions": "List of dimensions to group by",
        "sum": "The sum of values for a metric per dimension",
        "uniq": "The number of unique values for a metric per dimension"
    },
    "AccountHttpRequests1dGroupsAvg": {
        "bytes": "",
        "sampleInterval": "Average sample interval"
    },
    "AccountHttpRequests1dGroupsBrowserMapElem": {
        "pageViews": "Successful requests for HTML content",
        "uaBrowserFamily": "Browser type"
    },
    "AccountHttpRequests1dGroupsClientHTTPVersionMapElem": {
        "clientHTTPProtocol": "HTTP version",
        "requests": ""
    },
    "AccountHttpRequests1dGroupsClientSSLMapElem": {
        "clientSSLProtocol": "Protocol version",
        "requests": ""
    },
    "AccountHttpRequests1dGroupsContentTypeMapElem": {
        "bytes": "Bytes returned to client",
        "edgeResponseContentTypeName": "Content type returned to client",
        "requests": ""
    },
    "AccountHttpRequests1dGroupsCountryMapElem": {
        "bytes": "Bytes returned to client",
        "clientCountryName": "Country from which request originated",
        "requests": "",
        "threats": "Requests classified as threats"
    },
    "AccountHttpRequests1dGroupsDimensions": {
        "date": "Request date"
    },
    "AccountHttpRequests1dGroupsFilter_InputObject": {},
    "AccountHttpRequests1dGroupsIpClassMapElem": {
        "ipType": "IP class",
        "requests": ""
    },
    "AccountHttpRequests1dGroupsOrderBy": {},
    "AccountHttpRequests1dGroupsResponseStatusMapElem": {
        "edgeResponseStatus": "HTTP response status code returned to client",
        "requests": ""
    },
    "AccountHttpRequests1dGroupsSum": {
        "browserMap": "",
        "bytes": "Bytes returned to client",
        "cachedBytes": "Bytes returned to client from cache",
        "cachedRequests": "Requests served from cache",
        "clientHTTPVersionMap": "",
        "clientSSLMap": "",
        "contentTypeMap": "",
        "countryMap": "",
        "encryptedBytes": "Bytes returned to client using SSL/TLS protocol",
        "encryptedRequests": "Requests served using SSL/TLS protocol",
        "ipClassMap": "",
        "pageViews": "Successful requests for HTML content",
        "requests": "",
        "responseStatusMap": "",
        "threatPathingMap": "",
        "threats": "Requests classified as threats"
    },
    "AccountHttpRequests1dGroupsThreatPathingMapElem": {
        "requests": "",
        "threatPathingName": "Threat type"
    },
    "AccountHttpRequests1dGroupsUniq": {
        "uniques": "A number of unique IPs"
    },
    "AccountHttpRequests1hGroups": {
        "avg": "The average value for a metric per dimension",
        "dimensions": "List of dimensions to group by",
        "sum": "The sum of values for a metric per dimension",
        "uniq": "The number of unique values for a metric per dimension"
    },
    "AccountHttpRequests1hGroupsAvg": {
        "bytes": "",
        "sampleInterval": "Average sample interval"
    },
    "AccountHttpRequests1hGroupsBrowserMapElem": {
        "pageViews": "Successful requests for HTML content",
        "uaBrowserFamily": "Browser type"
    },
    "AccountHttpRequests1hGroupsClientHTTPVersionMapElem": {
        "clientHTTPProtocol": "HTTP version",
        "requests": ""
    },
    "AccountHttpRequests1hGroupsClientSSLMapElem": {
        "clientSSLProtocol": "Protocol version",
        "requests": ""
    },
    "AccountHttpRequests1hGroupsContentTypeMapElem": {
        "bytes": "Bytes returned to client",
        "edgeResponseContentTypeName": "Content type returned to client",
        "requests": ""
    },
    "AccountHttpRequests1hGroupsCountryMapElem": {
        "bytes": "Bytes returned to client",
        "clientCountryName": "Country from which request originated",
        "requests": "",
        "threats": "Requests classified as threats"
    },
    "AccountHttpRequests1hGroupsDimensions": {
        "date": "Request date",
        "datetime": "Request datetime truncated to the hour"
    },
    "AccountHttpRequests1hGroupsFilter_InputObject": {},
    "AccountHttpRequests1hGroupsIpClassMapElem": {
        "ipType": "IP class",
        "requests": ""
    },
    "AccountHttpRequests1hGroupsOrderBy": {},
    "AccountHttpRequests1hGroupsResponseStatusMapElem": {
        "edgeResponseStatus": "HTTP response status code returned to client",
        "requests": ""
    },
    "AccountHttpRequests1hGroupsSum": {
        "browserMap": "",
        "bytes": "Bytes returned to client",
        "cachedBytes": "Bytes returned to client from cache",
        "cachedRequests": "Requests served from cache",
        "clientHTTPVersionMap": "",
        "clientSSLMap": "",
        "contentTypeMap": "",
        "countryMap": "",
        "encryptedBytes": "Bytes returned to client using SSL/TLS protocol",
        "encryptedRequests": "Requests served using SSL/TLS protocol",
        "ipClassMap": "",
        "pageViews": "Successful requests for HTML content",
        "requests": "",
        "responseStatusMap": "",
        "threatPathingMap": "",
        "threats": "Requests classified as threats"
    },
    "AccountHttpRequests1hGroupsThreatPathingMapElem": {
        "requests": "",
        "threatPathingName": "Threat type"
    },
    "AccountHttpRequests1hGroupsUniq": {
        "uniques": "A number of unique IPs"
    },
    "AccountHttpRequests1mGroups": {
        "avg": "The average value for a metric per dimension",
        "dimensions": "List of dimensions to group by",
        "sum": "The sum of values for a metric per dimension",
        "uniq": "The number of unique values for a metric per dimension"
    },
    "AccountHttpRequests1mGroupsAvg": {
        "bytes": "",
        "sampleInterval": "Average sample interval"
    },
    "AccountHttpRequests1mGroupsBrowserMapElem": {
        "pageViews": "Successful requests for HTML content",
        "uaBrowserFamily": "Browser type"
    },
    "AccountHttpRequests1mGroupsClientHTTPVersionMapElem": {
        "clientHTTPProtocol": "HTTP version",
        "requests": ""
    },
    "AccountHttpRequests1mGroupsClientSSLMapElem": {
        "clientSSLProtocol": "Protocol version",
        "requests": ""
    },
    "AccountHttpRequests1mGroupsContentTypeMapElem": {
        "bytes": "Bytes returned to client",
        "edgeResponseContentTypeName": "Content type returned to client",
        "requests": ""
    },
    "AccountHttpRequests1mGroupsCountryMapElem": {
        "bytes": "Bytes returned to client",
        "clientCountryName": "Country from which request originated",
        "requests": "",
        "threats": "Requests classified as threats"
    },
    "AccountHttpRequests1mGroupsDimensions": {
        "date": "Request date",
        "datetime": "Request datetime, truncated to the minute",
        "datetimeDay": "Request datetime truncated to the day",
        "datetimeFifteenMinutes": "Request datetime truncated to multiple of 15 minutes",
        "datetimeFiveMinutes": "Request datetime truncated to multiple of 5 minutes",
        "datetimeHalfOfHour": "Request datetime truncated to multiple of 30 minutes",
        "datetimeHour": "Request datetime truncated to the hour",
        "datetimeMinute": "Request datetime truncated to the minute"
    },
    "AccountHttpRequests1mGroupsFilter_InputObject": {},
    "AccountHttpRequests1mGroupsIpClassMapElem": {
        "ipType": "IP class",
        "requests": ""
    },
    "AccountHttpRequests1mGroupsOrderBy": {},
    "AccountHttpRequests1mGroupsResponseStatusMapElem": {
        "edgeResponseStatus": "HTTP response status code returned to client",
        "requests": ""
    },
    "AccountHttpRequests1mGroupsSum": {
        "browserMap": "",
        "bytes": "Bytes returned to client",
        "cachedBytes": "Bytes returned to client from cache",
        "cachedRequests": "Requests served from cache",
        "clientHTTPVersionMap": "",
        "clientSSLMap": "",
        "contentTypeMap": "",
        "countryMap": "",
        "encryptedBytes": "Bytes returned to client using SSL/TLS protocol",
        "encryptedRequests": "Requests served using SSL/TLS protocol",
        "ipClassMap": "",
        "pageViews": "Successful requests for HTML content",
        "requests": "",
        "responseStatusMap": "",
        "threatPathingMap": "",
        "threats": "Requests classified as threats"
    },
    "AccountHttpRequests1mGroupsThreatPathingMapElem": {
        "requests": "",
        "threatPathingName": "Threat type"
    },
    "AccountHttpRequests1mGroupsUniq": {
        "uniques": "A number of unique IPs"
    },
    "AccountHttpRequestsOverviewAdaptiveGroups": {
        "avg": "The average value for a metric per dimension",
        "dimensions": "List of dimensions to group by",
        "ratio": "The ratio of a range of status codes, between 0 and 1",
        "sum": "The sum of values for a metric per dimension"
    },
    "AccountHttpRequestsOverviewAdaptiveGroupsAvg": {
        "originResponseDurationMs": "The average originResponseDuration, in milliseconds, excluding 0 values (i.e. cached ones)",
        "sampleInterval": "Average sample interval"
    },
    "AccountHttpRequestsOverviewAdaptiveGroupsDimensions": {
        "clientCountryName": "Country from which request originated",
        "clientRequestHTTPProtocol": "HTTP protocol version",
        "clientSSLProtocol": "SSL protocol version",
        "date": "The date the event occurred at the edge",
        "datetime": "The date and time the event occurred at the edge",
        "datetimeFifteenMinutes": "The date and time the event occurred at the edge truncated to a multiple of 15 minutes",
        "datetimeFiveMinutes": "The date and time the event occurred at the edge truncated to a multiple of 5 minutes",
        "datetimeHour": "The date and time the event occurred at the edge truncated to hours",
        "datetimeMinute": "The date and time the event occurred at the edge truncated to the minute",
        "edgeResponseContentTypeName": "Content type returned to client",
        "edgeResponseStatus": "HTTP response status code returned to client",
        "httpApplication": "Unique identifier for HTTP Application",
        "httpApplicationVersion": "Version associated with HTTP Application",
        "userAgentBrowser": "Browser parsed from the user agent"
    },
    "AccountHttpRequestsOverviewAdaptiveGroupsFilter_InputObject": {},
    "AccountHttpRequestsOverviewAdaptiveGroupsOrderBy": {},
    "AccountHttpRequestsOverviewAdaptiveGroupsRatio": {
        "status4xx": "",
        "status5xx": ""
    },
    "AccountHttpRequestsOverviewAdaptiveGroupsSum": {
        "bytes": "",
        "cachedBytes": "Bytes returned to client from cache",
        "cachedRequests": "Requests served from cache",
        "pageViews": "Successful requests for HTML content",
        "requests": "",
        "visits": "The number of requests by end-users that were initiated from a different website (i.e. where the request HTTP Referer header does not match the host in the HTTP Host header)"
    },
    "AccountImagesRequestsAdaptiveGroups": {
        "avg": "The average value for a metric per dimension",
        "dimensions": "List of dimensions to group by",
        "sum": "The sum of values for a metric per dimension"
    },
    "AccountImagesRequestsAdaptiveGroupsAvg": {
        "sampleInterval": ""
    },
    "AccountImagesRequestsAdaptiveGroupsDimensions": {
        "date": "The date the event occurred at the edge",
        "datetime": "The date and time the event occurred at the edge",
        "datetimeFifteenMinutes": "The date and time the event occurred at the edge truncated to a multiple of 15 minutes",
        "datetimeFiveMinutes": "The date and time the event occurred at the edge truncated to a multiple of 5 minutes",
        "datetimeHour": "The date and time the event occurred at the edge truncated to hours",
        "datetimeMinute": "The date and time the event occurred at the edge truncated to the minute"
    },
    "AccountImagesRequestsAdaptiveGroupsFilter_InputObject": {},
    "AccountImagesRequestsAdaptiveGroupsOrderBy": {},
    "AccountImagesRequestsAdaptiveGroupsSum": {
        "requests": ""
    },
    "AccountIpFlows1dGroups": {
        "avg": "The average value for a metric",
        "dimensions": "List of dimensions to group by",
        "sum": "The sum of values for a metric per dimension"
    },
    "AccountIpFlows1dGroupsAvg": {
        "sampleInterval": "ipFlows sample interval. Data for this node is sampled at a rate of 1/8192."
    },
    "AccountIpFlows1dGroupsDimensions": {
        "attackDestinationIP": "Destination IP used by packets during an attack",
        "attackDestinationPort": "Destination port used by packets during an attack",
        "attackId": "The Cloudflare unique attack identifier this packet was part of",
        "attackMitigationType": "Type of action (Block, Rate-limit, Connection-Tracking) used to mitigate the attack",
        "attackProtocol": "IP protocol used by packets during an attack",
        "attackSourcePort": "Source port used by packets during an attack",
        "attackTcpFlags": "TCP flags used by packets during an attack",
        "attackType": "Classification of the attack",
        "coloCity": "City of data center that received the packet",
        "coloCode": "IATA airport code of data center that received the packet",
        "coloCountry": "Country of data center that received the packet",
        "coloRegion": "Region of data center that received the packet",
        "date": "Date the packet was received",
        "destinationIP": "Destination IP of the packet",
        "destinationIPv4Range23": "Destination IP/23 range of the packet",
        "destinationIPv4Range24": "Destination IP/24 range of the packet",
        "destinationPort": "Destination port of the TCP/UDP packet",
        "ipProtocol": "IP protocol",
        "ipVersion": "IP version"
    },
    "AccountIpFlows1dGroupsFilter_InputObject": {},
    "AccountIpFlows1dGroupsOrderBy": {},
    "AccountIpFlows1dGroupsSum": {
        "bits": "Total number of bits received",
        "packets": "Total number of packets received"
    },
    "AccountIpFlows1hGroups": {
        "avg": "The average value for a metric",
        "dimensions": "List of dimensions to group by",
        "sum": "The sum of values for a metric per dimension"
    },
    "AccountIpFlows1hGroupsAvg": {
        "sampleInterval": "ipFlows sample interval. Data for this node is sampled at a rate of 1/8192."
    },
    "AccountIpFlows1hGroupsDimensions": {
        "attackDestinationIP": "Destination IP used by packets during an attack",
        "attackDestinationPort": "Destination port used by packets during an attack",
        "attackId": "The Cloudflare unique attack identifier this packet was part of",
        "attackMitigationType": "Type of action (Block, Rate-limit, Connection-Tracking) used to mitigate the attack",
        "attackProtocol": "IP protocol used by packets during an attack",
        "attackSourcePort": "Source port used by packets during an attack",
        "attackTcpFlags": "TCP flags used by packets during an attack",
        "attackType": "Classification of the attack",
        "coloCity": "City of data center that received the packet",
        "coloCode": "IATA airport code of data center that received the packet",
        "coloCountry": "Country of data center that received the packet",
        "coloRegion": "Region of data center that received the packet",
        "date": "Date the packet was received",
        "datetimeHour": "Datetime the packet was received truncated to multiple of one hour",
        "destinationIP": "Destination IP of the packet",
        "destinationIPv4Range23": "Destination IP/23 range of the packet",
        "destinationIPv4Range24": "Destination IP/24 range of the packet",
        "destinationPort": "Destination port of the TCP/UDP packet",
        "ipProtocol": "IP protocol",
        "ipVersion": "IP version",
        "sourceIPASNDescription": "The ASN description associated with the source IP",
        "sourceIPAsn": "The ASN associated with the source IP",
        "sourceIPCountry": "The country associated with the source IP",
        "sourcePort": "Source port of the TCP/UDP packet",
        "tcpFlags": "List of TCP flags"
    },
    "AccountIpFlows1hGroupsFilter_InputObject": {},
    "AccountIpFlows1hGroupsOrderBy": {},
    "AccountIpFlows1hGroupsSum": {
        "bits": "Total number of bits received",
        "packets": "Total number of packets received"
    },
    "AccountIpFlows1mAttacksGroups": {
        "avg": "The average value for a metric",
        "dimensions": "List of dimensions to group by",
        "max": "The max value for a metric",
        "min": "The min value for a metric",
        "sum": "The sum of values for a metric per dimension"
    },
    "AccountIpFlows1mAttacksGroupsAvg": {
        "bitsPerSecond": "Average rate of bits received",
        "packetsPerSecond": "Average rate of packets received",
        "sampleInterval": "ipFlows sample interval. Data for this node is sampled at a rate of 1/8192."
    },
    "AccountIpFlows1mAttacksGroupsDimensions": {
        "attackDestinationIP": "Destination IP used by packets during an attack",
        "attackDestinationPort": "Destination port used by packets during an attack",
        "attackId": "The Cloudflare unique attack identifier this packet was part of",
        "attackMitigationType": "Type of action (Block, Rate-limit, Connection-Tracking) used to mitigate the attack",
        "attackProtocol": "IP protocol used by packets during an attack",
        "attackSourcePort": "Source port used by packets during an attack",
        "attackTcpFlags": "TCP flags used by packets during an attack",
        "attackType": "Classification of the attack",
        "date": "Date the packet was received",
        "destinationIP": "Destination IP of the packet",
        "destinationPort": "Destination port of the TCP/UDP packet"
    },
    "AccountIpFlows1mAttacksGroupsFilter_InputObject": {},
    "AccountIpFlows1mAttacksGroupsMax": {
        "bitsPerSecond": "Max rate of bits received",
        "datetimeMinute": "Max datetime truncated to minute a packet was received",
        "packetsPerSecond": "Max rate of packets received"
    },
    "AccountIpFlows1mAttacksGroupsMin": {
        "bitsPerSecond": "Min rate of bits received",
        "datetimeMinute": "Min datetime truncated to minute a packet was received",
        "packetsPerSecond": "Min rate of packets received"
    },
    "AccountIpFlows1mAttacksGroupsOrderBy": {},
    "AccountIpFlows1mAttacksGroupsSum": {
        "bits": "Total number of bits received",
        "packets": "Total number of packets received"
    },
    "AccountIpFlows1mGroups": {
        "avg": "The average value for a metric",
        "dimensions": "List of dimensions to group by",
        "max": "The max value for a metric",
        "min": "The min value for a metric",
        "sum": "The sum of values for a metric per dimension"
    },
    "AccountIpFlows1mGroupsAvg": {
        "bitsPerSecond": "Average rate of bits received",
        "packetsPerSecond": "Average rate of packets received",
        "sampleInterval": "ipFlows sample interval. Data for this node is sampled at a rate of 1/8192."
    },
    "AccountIpFlows1mGroupsDimensions": {
        "attackDestinationIP": "Destination IP used by packets during an attack",
        "attackDestinationPort": "Destination port used by packets during an attack",
        "attackId": "The Cloudflare unique attack identifier this packet was part of",
        "attackMitigationType": "Type of action (Block, Rate-limit, Connection-Tracking) used to mitigate the attack",
        "attackProtocol": "IP protocol used by packets during an attack",
        "attackSourcePort": "Source port used by packets during an attack",
        "attackTcpFlags": "TCP flags used by packets during an attack",
        "attackType": "Classification of the attack",
        "coloCity": "City of data center that received the packet",
        "coloCode": "IATA airport code of data center that received the packet",
        "coloCountry": "Country of data center that received the packet",
        "coloRegion": "Region of data center that received the packet",
        "date": "Date the packet was received",
        "datetimeFifteenMinutes": "Datetime the packet was received truncated to multiple of 15 minutes",
        "datetimeFiveMinutes": "Datetime the packet was received truncated to multiple of 5 minutes",
        "datetimeHour": "Datetime the packet was received truncated to multiple of one hour",
        "datetimeMinute": "Datetime the packet was received truncated to the minute",
        "destinationIP": "Destination IP of the packet",
        "destinationIPv4Range23": "Destination IP/23 range of the packet",
        "destinationIPv4Range24": "Destination IP/24 range of the packet",
        "destinationPort": "Destination port of the TCP/UDP packet",
        "ipProtocol": "IP protocol",
        "ipVersion": "IP version",
        "sourceIP": "Source IP of the packet",
        "sourceIPASNDescription": "The ASN description associated with the source IP",
        "sourceIPAsn": "The ASN associated with the source IP",
        "sourceIPCountry": "The country associated with the source IP",
        "sourcePort": "Source port of the TCP/UDP packet",
        "tcpFlags": "List of TCP flags"
    },
    "AccountIpFlows1mGroupsFilter_InputObject": {},
    "AccountIpFlows1mGroupsMax": {
        "bitsPerSecond": "Max rate of bits received",
        "datetimeMinute": "Max datetime truncated to minute a packet was received",
        "packetsPerSecond": "Max rate of packets received"
    },
    "AccountIpFlows1mGroupsMin": {
        "bitsPerSecond": "Min rate of bits received",
        "datetimeMinute": "Min datetime truncated to minute a packet was received",
        "packetsPerSecond": "Min rate of packets received"
    },
    "AccountIpFlows1mGroupsOrderBy": {},
    "AccountIpFlows1mGroupsSum": {
        "bits": "Total number of bits received",
        "packets": "Total number of packets received"
    },
    "AccountLogpushHealthAdaptiveGroups": {
        "avg": "",
        "count": "The number of values for a metric per dimension",
        "dimensions": "List of dimensions to group by",
        "sum": "The sum of values for a metric per dimension"
    },
    "AccountLogpushHealthAdaptiveGroupsAvg": {
        "sampleInterval": "Average sample interval"
    },
    "AccountLogpushHealthAdaptiveGroupsDimensions": {
        "date": "Date that we completed pushing the log batch",
        "datetime": "Datetime that we completed pushing the log batch",
        "datetimeFifteenMinutes": "Datetime that we completed pushing the log batch, truncated to multiple of 15 minutes",
        "datetimeFiveMinutes": "Datetime that we completed pushing the log batch, truncated to multiple of 5 minutes",
        "datetimeHour": "Datetime that we completed pushing the log batch, truncated to the hour",
        "datetimeMinute": "Datetime that we completed pushing the log batch, truncated to the minute",
        "destinationType": "Destination type, e.g. 'S3' or 'GCS'",
        "final": "Cloudflare may attempt to push a batch of logs multiple times if we encounter a failure. This field will be set to 'true' if this was the last push attempt for this batch of logs. If this field is set to false, it means the push failed but another retry was attempted. If this field is set to true and status >= 300, then the batch of logs failed to push and log data was lost. If you want to count the total number of logs that succeeded or failed, you should always set final = true.",
        "jobId": "The Logpush Job ID",
        "status": "HTTP response status code of the log destination"
    },
    "AccountLogpushHealthAdaptiveGroupsFilter_InputObject": {},
    "AccountLogpushHealthAdaptiveGroupsOrderBy": {},
    "AccountLogpushHealthAdaptiveGroupsSum": {
        "bytes": "Bytes of uncompressed log data pushed",
        "bytesCompressed": "Bytes of compressed log data pushed",
        "records": "A count of the total number of records pushed."
    },
    "AccountMagicFirewallNetworkAnalyticsAdaptiveGroups": {
        "avg": "The average of values for a metric per dimension",
        "dimensions": "List of dimensions to group by",
        "sum": "The sum of values for a metric per dimension"
    },
    "AccountMagicFirewallNetworkAnalyticsAdaptiveGroupsAvg": {
        "bitRate": "Sum of bits received, divided by 1 second, providing a per-second bit rate when grouped by datetime",
        "bitRateDay": "Sum of bits received, divided by 86400 seconds, providing a per-second bit rate when grouped by date",
        "bitRateFifteenMinutes": "Sum of bits received, divided by 900 seconds, providing a per-second bit rate when grouped by datetimeFifteenMinutes",
        "bitRateFiveMinutes": "Sum of bits received, divided by 300 seconds, providing a per-second bit rate when grouped by datetimeFiveMinutes",
        "bitRateHour": "Sum of bits received, divided by 3600 seconds, providing a per-second bit rate when grouped by datetimeHour",
        "bitRateMinute": "Sum of bits received, divided by 60 seconds, providing a per-second bit rate when grouped by datetimeMinute",
        "bitRateTenSeconds": "Sum of bits received, divided by 10 seconds, providing a per-second bit rate when grouped by datetimeTenSeconds",
        "packetRate": "Sum of packets received, divided by 1 second, providing a per-second packet rate when grouped by datetime",
        "packetRateDay": "Sum of packets received, divided by 86400 seconds, providing a per-second packet rate when grouped by date",
        "packetRateFifteenMinutes": "Sum of packets received, divided by 900 seconds, providing a per-second packet rate when grouped by datetimeFifteenMinutes",
        "packetRateFiveMinutes": "Sum of packets received, divided by 300 seconds, providing a per-second packet rate when grouped by datetimeFiveMinutes",
        "packetRateHour": "Sum of packets received, divided by 3600 seconds, providing a per-second packet rate when grouped by datetimeHour",
        "packetRateMinute": "Sum of packets received, divided by 60 seconds, providing a per-second packet rate when grouped by datetimeMinute",
        "packetRateTenSeconds": "Sum of packets received, divided by 10 seconds, providing a per-second packet rate when grouped by datetimeTenSeconds"
    },
    "AccountMagicFirewallNetworkAnalyticsAdaptiveGroupsDimensions": {
        "coloCity": "City where the Cloudflare datacenter that received the packet is located",
        "coloCode": "Cloudflare datacenter that received the packet (nearest IATA airport code)",
        "coloCountry": "Country where the Cloudflare datacenter that received the packet is located (ISO 3166-1 alpha-2)",
        "coloGeohash": "Latitude and longitude where the Cloudflare datacenter that received the packet is located (Geohash encoding)",
        "coloName": "Cloudflare datacenter that received the packet (unique site identifier)",
        "date": "Date that the packet was received",
        "datetime": "Date and time that the packet was received",
        "datetimeFifteenMinutes": "Date and time that the packet was received, rounded to the start of the nearest fifteen minutes",
        "datetimeFiveMinutes": "Date and time that the packet was received, rounded to the start of the nearest five minutes",
        "datetimeHour": "Date and time that the packet was received, rounded to the start of the nearest hour",
        "datetimeMinute": "Date and time that the packet was received, rounded to the start of the nearest minute",
        "datetimeTenSeconds": "Date and time that the packet was received, rounded to the start of the nearest ten seconds",
        "destinationAsn": "ASN associated with the destination IP of the packet, or 0 if there was no mapping available",
        "destinationAsnName": "Name of ASN associated with the destination IP of the packet, if available",
        "destinationCountry": "Country where the destination IP of the packet is located (ISO 3166-1 alpha-2)",
        "destinationGeohash": "Latitude and longitude where the destination IP of the packet is located (Geohash encoding)",
        "destinationPort": "Value of the Destination Port header field in the TCP or UDP packet",
        "direction": "Direction of the packet relative to the customer network (possible values: inbound, outbound, lateral)",
        "ethertype": "Value of the Ethertype header field in the Ethernet packet (2048 for IPv4; 34525 for IPv6)",
        "greChecksum": "Value of the Checkusm header field in the GRE packet",
        "greEthertype": "Value of the Ethertype header field in the GRE packet",
        "greHeaderLength": "Length of the GRE packet header, in bytes",
        "greKey": "Value of the Key header field in the GRE packet",
        "greSequenceNumber": "Value of the Sequence Number header field in the GRE packet",
        "greVersion": "Value of the Version header field in the GRE packet",
        "icmpChecksum": "Value of the Checkusm header field in the ICMP packet",
        "icmpCode": "Value of the Code header field in the ICMP packet",
        "icmpType": "Value of the Type header field in the ICMP packet",
        "ipDestinationAddress": "Value of the Destination Address header field in the IPv4 or IPv6 packet",
        "ipDestinationSubnet": "Computed subnet of the Destination Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6)",
        "ipFragmentOffset": "Value of the Fragment Offset header field in the IPv4 or IPv6 packet",
        "ipHeaderLength": "Length of the IPv4 or IPv6 packet header, in bytes",
        "ipMoreFragments": "Value of the More Fragments header field in the IPv4 or IPv6 packet",
        "ipProtocol": "Value of the Protocol header field in the IPv4 or IPv6 packet",
        "ipProtocolName": "Name of the protocol specified by the Protocol header field in the IPv4 or IPv6 packet",
        "ipSourceAddress": "Value of the Source Address header field in the IPv4 or IPv6 packet",
        "ipSourceSubnet": "Computed subnet of the Source Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6)",
        "ipTotalLength": "Total length of the IPv4 or IPv6 packet, in bytes",
        "ipTotalLengthBuckets": "Total length of the IPv4 or IPv6 packet, in bytes, with the last two digits truncated",
        "ipTtl": "Value of the TTL header field in the IPv4 packet or the Hop Limit header field in the IPv6 packet",
        "ipTtlBuckets": "Value of the TTL header field in the IPv4 packet or the Hop Limit header field in the IPv6 packet, with the last digit truncated",
        "ipv4Checksum": "Value of the Checksum header field in the IPv4 packet",
        "ipv4DontFragment": "Value of the Don't Fragment header field in the IPv4 packet",
        "ipv4Dscp": "Value of the Differentiated Services Code Point header field in the IPv4 packet",
        "ipv4Ecn": "Value of the Explicit Congestion Notification header field in the IPv4 packet",
        "ipv4Identification": "Value of the Identification header field in the IPv4 packet",
        "ipv4Options": "List of Options numbers included in the IPv4 packet header",
        "ipv6Dscp": "Value of the Differentiated Services Code Point header field in the IPv6 packet",
        "ipv6Ecn": "Value of the Explicit Congestion Notification header field in the IPv6 packet",
        "ipv6ExtensionHeaders": "List of Extension Header numbers included in the IPv6 packet header",
        "ipv6FlowLabel": "Value of the Flow Label header field in the IPv6 packet",
        "ipv6Identification": "Value of the Identification extension header field in the IPv6 packet",
        "outcome": "The action that was taken on the packet (possible values: pass, drop)",
        "ruleId": "Unique identifier of the rule that matched the packet, if any",
        "rulesetId": "Unique identifier of the ruleset containing the rule that matched the packet, if any",
        "sampleInterval": "ABR sample interval",
        "sourceAsn": "ASN associated with the source IP of the packet, or 0 if there was no mapping available",
        "sourceAsnName": "Name of ASN associated with the source IP of the packet, if available",
        "sourceCountry": "Country where the source IP of the packet is located (ISO 3166-1 alpha-2)",
        "sourceGeohash": "Latitude and longitude where the source IP of the packet is located (Geohash encoding)",
        "sourcePort": "Value of the Source Port header field in the TCP or UDP packet",
        "tcpAcknowledgementNumber": "Value of the Acknowledgement Number header field in the TCP packet",
        "tcpChecksum": "Value of the Checkusm header field in the TCP packet",
        "tcpDataOffset": "Value of the Data Offset header field in the TCP packet",
        "tcpFlags": "Value of the Flags header field in the TCP packet",
        "tcpFlagsString": "Human-readable string representation of the Flags header field in the TCP packet",
        "tcpMss": "Value of the MSS option header field in the TCP packet",
        "tcpOptions": "List of Options numbers included in the TCP packet header",
        "tcpSackBlocks": "Value of the SACK Blocks option header field in the TCP packet",
        "tcpSackPermitted": "Value of the SACK Permitted option header field in the TCP packet",
        "tcpSequenceNumber": "Value of the Sequence Number header field in the TCP packet",
        "tcpTimestampEcr": "Value of the Timestamp Echo Reply option header field in the TCP packet",
        "tcpTimestampValue": "Value of the Timestamp option header field in the TCP packet",
        "tcpUrgentPointer": "Value of the Urgent Pointer header field in the TCP packet",
        "tcpWindowScale": "Value of the Window Scale option header field in the TCP packet",
        "tcpWindowSize": "Value of the Window Size header field in the TCP packet",
        "udpChecksum": "Value of the Checkusm header field in the UDP packet",
        "udpPayloadLength": "Value of the Payload Length header field in the UDP packet",
        "verdict": "The action that Cloudflare thinks should be taken on the packet (possible values: pass, drop)"
    },
    "AccountMagicFirewallNetworkAnalyticsAdaptiveGroupsFilter_InputObject": {},
    "AccountMagicFirewallNetworkAnalyticsAdaptiveGroupsOrderBy": {},
    "AccountMagicFirewallNetworkAnalyticsAdaptiveGroupsSum": {
        "bits": "Sum of bits received",
        "packets": "Sum of packets received"
    },
    "AccountMagicFirewallSamplesAdaptiveGroups": {
        "dimensions": "List of dimensions to group by",
        "sum": "The sum of values for a metric per dimension"
    },
    "AccountMagicFirewallSamplesAdaptiveGroupsDimensions": {
        "datetime": "Date and time that the packet was received",
        "datetimeFiveMinute": "Date and time that the packet was received, rounded to the start of the nearest five minutes",
        "ruleId": "Unique identifier of the rule that matched the packet, if any"
    },
    "AccountMagicFirewallSamplesAdaptiveGroupsFilter_InputObject": {},
    "AccountMagicFirewallSamplesAdaptiveGroupsOrderBy": {},
    "AccountMagicFirewallSamplesAdaptiveGroupsSum": {
        "bits": "Sum of bits received",
        "packets": "Sum of packets received"
    },
    "AccountMagicTransitNetworkAnalyticsAdaptiveGroups": {
        "avg": "The average of values for a metric per dimension",
        "dimensions": "List of dimensions to group by",
        "sum": "The sum of values for a metric per dimension"
    },
    "AccountMagicTransitNetworkAnalyticsAdaptiveGroupsAvg": {
        "bitRate": "Sum of bits received, divided by 1 second, providing a per-second bit rate when grouped by datetime",
        "bitRateDay": "Sum of bits received, divided by 86400 seconds, providing a per-second bit rate when grouped by date",
        "bitRateFifteenMinutes": "Sum of bits received, divided by 900 seconds, providing a per-second bit rate when grouped by datetimeFifteenMinutes",
        "bitRateFiveMinutes": "Sum of bits received, divided by 300 seconds, providing a per-second bit rate when grouped by datetimeFiveMinutes",
        "bitRateHour": "Sum of bits received, divided by 3600 seconds, providing a per-second bit rate when grouped by datetimeHour",
        "bitRateMinute": "Sum of bits received, divided by 60 seconds, providing a per-second bit rate when grouped by datetimeMinute",
        "bitRateTenSeconds": "Sum of bits received, divided by 10 seconds, providing a per-second bit rate when grouped by datetimeTenSeconds",
        "packetRate": "Sum of packets received, divided by 1 second, providing a per-second packet rate when grouped by datetime",
        "packetRateDay": "Sum of packets received, divided by 86400 seconds, providing a per-second packet rate when grouped by date",
        "packetRateFifteenMinutes": "Sum of packets received, divided by 900 seconds, providing a per-second packet rate when grouped by datetimeFifteenMinutes",
        "packetRateFiveMinutes": "Sum of packets received, divided by 300 seconds, providing a per-second packet rate when grouped by datetimeFiveMinutes",
        "packetRateHour": "Sum of packets received, divided by 3600 seconds, providing a per-second packet rate when grouped by datetimeHour",
        "packetRateMinute": "Sum of packets received, divided by 60 seconds, providing a per-second packet rate when grouped by datetimeMinute",
        "packetRateTenSeconds": "Sum of packets received, divided by 10 seconds, providing a per-second packet rate when grouped by datetimeTenSeconds"
    },
    "AccountMagicTransitNetworkAnalyticsAdaptiveGroupsDimensions": {
        "coloCity": "City where the Cloudflare datacenter that received the packet is located",
        "coloCode": "Cloudflare datacenter that received the packet (nearest IATA airport code)",
        "coloCountry": "Country where the Cloudflare datacenter that received the packet is located (ISO 3166-1 alpha-2)",
        "coloGeohash": "Latitude and longitude where the Cloudflare datacenter that received the packet is located (Geohash encoding)",
        "coloName": "Cloudflare datacenter that received the packet (unique site identifier)",
        "date": "Date that the packet was received",
        "datetime": "Date and time that the packet was received",
        "datetimeFifteenMinutes": "Date and time that the packet was received, rounded to the start of the nearest fifteen minutes",
        "datetimeFiveMinutes": "Date and time that the packet was received, rounded to the start of the nearest five minutes",
        "datetimeHour": "Date and time that the packet was received, rounded to the start of the nearest hour",
        "datetimeMinute": "Date and time that the packet was received, rounded to the start of the nearest minute",
        "datetimeTenSeconds": "Date and time that the packet was received, rounded to the start of the nearest ten seconds",
        "destinationAsn": "ASN associated with the destination IP of the packet, or 0 if there was no mapping available",
        "destinationAsnName": "Name of ASN associated with the destination IP of the packet, if available",
        "destinationCountry": "Country where the destination IP of the packet is located (ISO 3166-1 alpha-2)",
        "destinationGeohash": "Latitude and longitude where the destination IP of the packet is located (Geohash encoding)",
        "destinationPort": "Value of the Destination Port header field in the TCP or UDP packet",
        "direction": "Direction of the packet relative to the customer network (possible values: inbound, outbound, lateral)",
        "ethertype": "Value of the Ethertype header field in the Ethernet packet (2048 for IPv4; 34525 for IPv6)",
        "greChecksum": "Value of the Checkusm header field in the GRE packet",
        "greEthertype": "Value of the Ethertype header field in the GRE packet",
        "greHeaderLength": "Length of the GRE packet header, in bytes",
        "greKey": "Value of the Key header field in the GRE packet",
        "greSequenceNumber": "Value of the Sequence Number header field in the GRE packet",
        "greVersion": "Value of the Version header field in the GRE packet",
        "icmpChecksum": "Value of the Checkusm header field in the ICMP packet",
        "icmpCode": "Value of the Code header field in the ICMP packet",
        "icmpType": "Value of the Type header field in the ICMP packet",
        "ipDestinationAddress": "Value of the Destination Address header field in the IPv4 or IPv6 packet",
        "ipDestinationSubnet": "Computed subnet of the Destination Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6)",
        "ipFragmentOffset": "Value of the Fragment Offset header field in the IPv4 or IPv6 packet",
        "ipHeaderLength": "Length of the IPv4 or IPv6 packet header, in bytes",
        "ipMoreFragments": "Value of the More Fragments header field in the IPv4 or IPv6 packet",
        "ipProtocol": "Value of the Protocol header field in the IPv4 or IPv6 packet",
        "ipProtocolName": "Name of the protocol specified by the Protocol header field in the IPv4 or IPv6 packet",
        "ipSourceAddress": "Value of the Source Address header field in the IPv4 or IPv6 packet",
        "ipSourceSubnet": "Computed subnet of the Source Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6)",
        "ipTotalLength": "Total length of the IPv4 or IPv6 packet, in bytes",
        "ipTotalLengthBuckets": "Total length of the IPv4 or IPv6 packet, in bytes, with the last two digits truncated",
        "ipTtl": "Value of the TTL header field in the IPv4 packet or the Hop Limit header field in the IPv6 packet",
        "ipTtlBuckets": "Value of the TTL header field in the IPv4 packet or the Hop Limit header field in the IPv6 packet, with the last digit truncated",
        "ipv4Checksum": "Value of the Checksum header field in the IPv4 packet",
        "ipv4DontFragment": "Value of the Don't Fragment header field in the IPv4 packet",
        "ipv4Dscp": "Value of the Differentiated Services Code Point header field in the IPv4 packet",
        "ipv4Ecn": "Value of the Explicit Congestion Notification header field in the IPv4 packet",
        "ipv4Identification": "Value of the Identification header field in the IPv4 packet",
        "ipv4Options": "List of Options numbers included in the IPv4 packet header",
        "ipv6Dscp": "Value of the Differentiated Services Code Point header field in the IPv6 packet",
        "ipv6Ecn": "Value of the Explicit Congestion Notification header field in the IPv6 packet",
        "ipv6ExtensionHeaders": "List of Extension Header numbers included in the IPv6 packet header",
        "ipv6FlowLabel": "Value of the Flow Label header field in the IPv6 packet",
        "ipv6Identification": "Value of the Identification extension header field in the IPv6 packet",
        "mitigationSystem": "Which system dropped the packet (possible values: dosd, flowtrackd, magic-firewall)",
        "outcome": "The action that was taken on the packet (possible values: pass, drop)",
        "sampleInterval": "ABR sample interval",
        "sourceAsn": "ASN associated with the source IP of the packet, or 0 if there was no mapping available",
        "sourceAsnName": "Name of ASN associated with the source IP of the packet, if available",
        "sourceCountry": "Country where the source IP of the packet is located (ISO 3166-1 alpha-2)",
        "sourceGeohash": "Latitude and longitude where the source IP of the packet is located (Geohash encoding)",
        "sourcePort": "Value of the Source Port header field in the TCP or UDP packet",
        "tcpAcknowledgementNumber": "Value of the Acknowledgement Number header field in the TCP packet",
        "tcpChecksum": "Value of the Checkusm header field in the TCP packet",
        "tcpDataOffset": "Value of the Data Offset header field in the TCP packet",
        "tcpFlags": "Value of the Flags header field in the TCP packet",
        "tcpFlagsString": "Human-readable string representation of the Flags header field in the TCP packet",
        "tcpMss": "Value of the MSS option header field in the TCP packet",
        "tcpOptions": "List of Options numbers included in the TCP packet header",
        "tcpSackBlocks": "Value of the SACK Blocks option header field in the TCP packet",
        "tcpSackPermitted": "Value of the SACK Permitted option header field in the TCP packet",
        "tcpSequenceNumber": "Value of the Sequence Number header field in the TCP packet",
        "tcpTimestampEcr": "Value of the Timestamp Echo Reply option header field in the TCP packet",
        "tcpTimestampValue": "Value of the Timestamp option header field in the TCP packet",
        "tcpUrgentPointer": "Value of the Urgent Pointer header field in the TCP packet",
        "tcpWindowScale": "Value of the Window Scale option header field in the TCP packet",
        "tcpWindowSize": "Value of the Window Size header field in the TCP packet",
        "udpChecksum": "Value of the Checkusm header field in the UDP packet",
        "udpPayloadLength": "Value of the Payload Length header field in the UDP packet"
    },
    "AccountMagicTransitNetworkAnalyticsAdaptiveGroupsFilter_InputObject": {},
    "AccountMagicTransitNetworkAnalyticsAdaptiveGroupsOrderBy": {},
    "AccountMagicTransitNetworkAnalyticsAdaptiveGroupsSum": {
        "bits": "Sum of bits received",
        "packets": "Sum of packets received"
    },
    "AccountMagicTransitTunnelHealthChecksAdaptiveGroups": {
        "avg": "",
        "count": "Total number of healthcheck results",
        "dimensions": "List of dimensions to group by"
    },
    "AccountMagicTransitTunnelHealthChecksAdaptiveGroupsAvg": {
        "sampleInterval": "Average sample interval per dimension",
        "tunnelState": "Combined Tunnel State aggregated from multiple results. 0 is down, 0.5 is degraded and 1 is healthy"
    },
    "AccountMagicTransitTunnelHealthChecksAdaptiveGroupsDimensions": {
        "datetime": "The time the healthcheck request was sent",
        "datetimeFifteenMinutes": "The time the healthcheck request was sent, truncated to multiple of 15 minutes",
        "datetimeFiveMinutes": "The time the healthcheck request was sent, truncated to multiple of 5 minutes",
        "datetimeHalfOfHour": "The time the healthcheck request was sent, truncated to multiple of 30 minutes",
        "datetimeHour": "The time the healthcheck request was sent, truncated to the hour",
        "datetimeMinute": "The time the healthcheck request was sent, truncated to the last minute",
        "edgeColoCity": "City of the Cloudflare datacenter from where the healthcheck was run",
        "edgeColoCode": "IATA airport code of the Cloudflare datacenter from where the healthcheck was run",
        "edgeColoCountry": "Country of the Cloudflare datacenter from where the healthcheck was run",
        "edgeColoName": "The name of the Cloudflare datacenter from where the healthcheck was run",
        "edgeColoRegion": "Region of the Cloudflare datacenter from where the healthcheck was run",
        "remoteTunnelIPv4": "IP address of the remote end of the tunnel",
        "resultStatus": "The status of the request",
        "tunnelName": "Human friendly tunnel name"
    },
    "AccountMagicTransitTunnelHealthChecksAdaptiveGroupsFilter_InputObject": {},
    "AccountMagicTransitTunnelHealthChecksAdaptiveGroupsOrderBy": {},
    "AccountMagicTransitTunnelTrafficAdaptiveGroups": {
        "avg": "Ingress/Egress bandwidth in bits per second for a past duration",
        "dimensions": "List of dimensions to group by"
    },
    "AccountMagicTransitTunnelTrafficAdaptiveGroupsAvg": {
        "bitRateFifteenMinutes": "Sum of bits received, divided by 900 seconds, providing a per-second bit rate when grouped by datetimeFifteenMinutes",
        "bitRateFiveMinutes": "Sum of bits received, divided by 300 seconds, providing a per-second bit rate when grouped by datetimeFiveMinutes",
        "bitRateHour": "Sum of bits received, divided by 3600 seconds, providing a per-second bit rate when grouped by datetimeHour"
    },
    "AccountMagicTransitTunnelTrafficAdaptiveGroupsDimensions": {
        "datetime": "Date and time that the packet was received",
        "datetimeFifteenMinutes": "Date and time that the packet was received, rounded to the start of the nearest fifteen minutes",
        "datetimeFiveMinutes": "Date and time that the packet was received, rounded to the start of the nearest five minutes",
        "datetimeHour": "Date and time that the packet was received, rounded to the start of the nearest hour",
        "direction": "Traffic Direction",
        "edgeColoCity": "City where the Cloudflare datacenter that received the packet is located",
        "edgeColoCode": "Cloudflare datacenter that received the packet (nearest IATA airport code)",
        "edgeColoCountry": "Country where the Cloudflare datacenter that received the packet is located (ISO 3166-1 alpha-2)",
        "edgeColoGeohash": "Latitude and longitude where the Cloudflare datacenter that received the packet is located (Geohash encoding)",
        "edgeColoName": "Cloudflare datacenter that received the packet (unique site identifier)",
        "system": "System to collect info on",
        "tunnelName": "Tunnel device name"
    },
    "AccountMagicTransitTunnelTrafficAdaptiveGroupsFilter_InputObject": {},
    "AccountMagicTransitTunnelTrafficAdaptiveGroupsOrderBy": {},
    "AccountMnmFlowDataAdaptiveGroups": {
        "avg": "The average of values for a metric per dimension",
        "dimensions": "List of dimensions to group by",
        "sum": "The sum of values for a metric per dimension"
    },
    "AccountMnmFlowDataAdaptiveGroupsAvg": {
        "bitRate": "Sum of bits received, divided by 1 second, providing a per-second bit rate when grouped by datetime",
        "bitRateDay": "Sum of bits received, divided by 86400 seconds, providing a per-second bit rate when grouped by date",
        "bitRateFifteenMinutes": "Sum of bits received, divided by 900 seconds, providing a per-second bit rate when grouped by datetimeFifteenMinutes",
        "bitRateFiveMinutes": "Sum of bits received, divided by 300 seconds, providing a per-second bit rate when grouped by datetimeFiveMinutes",
        "bitRateHour": "Sum of bits received, divided by 3600 seconds, providing a per-second bit rate when grouped by datetimeHour",
        "bitRateMinute": "Sum of bits received, divided by 60 seconds, providing a per-second bit rate when grouped by datetimeMinute",
        "bitRateTenSeconds": "Sum of bits received, divided by 10 seconds, providing a per-second bit rate when grouped by datetimeTenSeconds",
        "packetRate": "Sum of packets received, divided by 1 second, providing a per-second packet rate when grouped by datetime",
        "packetRateDay": "Sum of packets received, divided by 86400 seconds, providing a per-second packet rate when grouped by date",
        "packetRateFifteenMinutes": "Sum of packets received, divided by 900 seconds, providing a per-second packet rate when grouped by datetimeFifteenMinutes",
        "packetRateFiveMinutes": "Sum of packets received, divided by 300 seconds, providing a per-second packet rate when grouped by datetimeFiveMinutes",
        "packetRateHour": "Sum of packets received, divided by 3600 seconds, providing a per-second packet rate when grouped by datetimeHour",
        "packetRateMinute": "Sum of packets received, divided by 60 seconds, providing a per-second packet rate when grouped by datetimeMinute",
        "packetRateTenSeconds": "Sum of packets received, divided by 10 seconds, providing a per-second packet rate when grouped by datetimeTenSeconds",
        "sampleInterval": "Average sample interval applied to the data"
    },
    "AccountMnmFlowDataAdaptiveGroupsDimensions": {
        "date": "Date that the packet was received",
        "datetime": "Date and time that the packet was received",
        "datetimeFifteenMinutes": "Date and time that the packet was received, rounded to the start of the nearest fifteen minutes",
        "datetimeFiveMinutes": "Date and time that the packet was received, rounded to the start of the nearest five minutes",
        "datetimeHour": "Date and time that the packet was received, rounded to the start of the nearest hour",
        "datetimeMinute": "Date and time that the packet was received, rounded to the start of the nearest minute",
        "datetimeTenSeconds": "Date and time that the packet was received, rounded to the start of the nearest ten seconds",
        "destinationAddress": "IP to which the data was sent",
        "destinationPort": "Value of the Destination Port header field in the packet",
        "ethertype": "Value of the Ethertype header field in the Ethernet packet (2048 for IPv4; 34525 for IPv6)",
        "protocol": "Layer 4 protocol",
        "protocolString": "Human-readable string representation of the protocol",
        "routerAddress": "IP of the router that sampled the flows",
        "sourceAddress": "IP from which the data was sent",
        "sourcePort": "Value of the Source Port header field in the packet",
        "tcpFlags": "Value of the Flags header field in the TCP packet",
        "tcpFlagsString": "Human-readable string representation of the Flags header field in the TCP packet",
        "version": "Version of the record schema"
    },
    "AccountMnmFlowDataAdaptiveGroupsFilter_InputObject": {},
    "AccountMnmFlowDataAdaptiveGroupsOrderBy": {},
    "AccountMnmFlowDataAdaptiveGroupsSum": {
        "bits": "Sum of bits",
        "packets": "Sum of packets"
    },
    "AccountNelReportsAdaptiveGroups": {
        "avg": "",
        "count": "The number of NEL Reports",
        "dimensions": "List of dimensions to group by"
    },
    "AccountNelReportsAdaptiveGroupsAvg": {
        "sampleInterval": "Average sample interval"
    },
    "AccountNelReportsAdaptiveGroupsDimensions": {
        "clientIPASN": "Client ASN",
        "clientIPASNDescription": "Client ASN Description",
        "clientIPCountry": "Client Country",
        "clientIPCountryCode": "2 letter client country code using ISO 3166-1 alpha-2 syntax",
        "clientIPVersion": "IP Version the client used to connect",
        "date": "Request date from browser",
        "datetime": "Request datetime from browser",
        "datetimeFifteenMinutes": "Request datetime from browser, truncated to multiple of 15 minutes",
        "datetimeFiveMinutes": "Request datetime from browser, truncated to multiple of 5 minutes",
        "datetimeHalfOfHour": "Request datetime from browser, truncated to multiple of 30 minutes",
        "datetimeHour": "Request datetime from browser, truncated to the hour",
        "datetimeMinute": "Request datetime from browser, truncated to the minute",
        "lastKnownGoodColoCode": "IATA airport code of colo the client connected to",
        "phase": "The phase of connection the error occurred in",
        "protocol": "HTTP Protocol used when the error occured",
        "type": "The type of error in the phase"
    },
    "AccountNelReportsAdaptiveGroupsFilter_InputObject": {},
    "AccountNelReportsAdaptiveGroupsOrderBy": {},
    "AccountPagesFunctionsInvocationsAdaptiveGroups": {
        "avg": "",
        "dimensions": "List of dimensions to group by",
        "quantiles": "Quantiles of a metric per dimension",
        "sum": "The sum of values for a metric per dimension"
    },
    "AccountPagesFunctionsInvocationsAdaptiveGroupsAvg": {
        "sampleInterval": "Average sample interval"
    },
    "AccountPagesFunctionsInvocationsAdaptiveGroupsDimensions": {
        "date": "Request datetime, truncated to start of a day",
        "datetime": "Request datetime",
        "datetimeHour": "Request datetime, truncated to start of an hour",
        "datetimeMinute": "Request datetime, truncated to start of an minute",
        "scriptName": "The name of the script",
        "status": "Status of the worker invocation",
        "usageModel": "Usage model of the worker invocation"
    },
    "AccountPagesFunctionsInvocationsAdaptiveGroupsFilter_InputObject": {},
    "AccountPagesFunctionsInvocationsAdaptiveGroupsOrderBy": {},
    "AccountPagesFunctionsInvocationsAdaptiveGroupsQuantiles": {
        "cpuTimeP50": "CPU time 50th percentile - microseconds",
        "cpuTimeP75": "CPU time 75th percentile - microseconds",
        "cpuTimeP99": "CPU time 99th percentile - microseconds",
        "cpuTimeP999": "CPU time 99.9th percentile - microseconds",
        "durationP50": "Duration 50th percentile - GB*s",
        "durationP75": "Duration 75th percentile - GB*s",
        "durationP99": "Duration 99th percentile - GB*s",
        "durationP999": "Duration 99.9th percentile - GB*s"
    },
    "AccountPagesFunctionsInvocationsAdaptiveGroupsSum": {
        "duration": "Sum of Duration - GB*s",
        "errors": "Sum of Errors",
        "requests": "Sum of Requests",
        "responseBodySize": "Sum of Response Body Sizes",
        "subrequests": "Sum of Subrequests",
        "wallTime": "Sum of Wall Time"
    },
    "AccountQueueMessageOperationsAdaptiveGroups": {
        "avg": "The average value for a metric per dimension",
        "count": "Number of Message Operations",
        "dimensions": "List of dimensions to group by",
        "max": "The max of values for a metric per dimension",
        "sum": "The sum of values for a metric per dimension"
    },
    "AccountQueueMessageOperationsAdaptiveGroupsAvg": {
        "sampleInterval": "The average value used for sample interval"
    },
    "AccountQueueMessageOperationsAdaptiveGroupsDimensions": {
        "actionType": "The type of the Queue message operation",
        "date": "Message operation timestamp, truncated to start of a day",
        "datetime": "Message operation timestamp",
        "datetimeHour": "Message operation timestamp, truncated to start of an hour",
        "datetimeMinute": "Message operation timestamp, truncated to start of an minute",
        "queueId": "The ID of the Queue"
    },
    "AccountQueueMessageOperationsAdaptiveGroupsFilter_InputObject": {},
    "AccountQueueMessageOperationsAdaptiveGroupsMax": {
        "messageSize": "Max Message Size"
    },
    "AccountQueueMessageOperationsAdaptiveGroupsOrderBy": {},
    "AccountQueueMessageOperationsAdaptiveGroupsSum": {
        "billableOperations": "Number of Billable Operations (some message operations count as multiple billable operations)",
        "bytes": "Total size (in bytes) of message operations"
    },
    "AccountQueuesMessagesAdaptiveGroups": {
        "avg": "The average value for a metric per dimension",
        "dimensions": "List of dimensions to group by",
        "max": "The max of values for a metric per dimension",
        "sum": "The sum of values for a metric per dimension"
    },
    "AccountQueuesMessagesAdaptiveGroupsAvg": {
        "sampleInterval": "The average value used for sample interval"
    },
    "AccountQueuesMessagesAdaptiveGroupsDimensions": {
        "actionType": "The name of the Queue operation",
        "datetime": "Message timestamp",
        "datetimeHour": "Message timestamp, truncated to start of an hour",
        "datetimeMinute": "Message timestamp, truncated to start of an minute",
        "queueId": "The ID of the Queue"
    },
    "AccountQueuesMessagesAdaptiveGroupsFilter_InputObject": {},
    "AccountQueuesMessagesAdaptiveGroupsMax": {
        "messageSize": "Max Message Size"
    },
    "AccountQueuesMessagesAdaptiveGroupsOrderBy": {},
    "AccountQueuesMessagesAdaptiveGroupsSum": {
        "billableOperations": "Sum of Billable Operations",
        "messageSize": "Sum of Message Size",
        "messages": "Sum of Messages"
    },
    "AccountR2OperationsAdaptiveGroups": {
        "dimensions": "List of dimensions to group by",
        "sum": "The sum of values for a metric per dimension"
    },
    "AccountR2OperationsAdaptiveGroupsDimensions": {
        "actionStatus": "Status of the R2 operation",
        "actionType": "The name of the R2 operation",
        "bucketName": "The name of the R2 bucket, if applicable to this request",
        "date": "Request timestamp, truncated to start of a day",
        "datetime": "Request timestamp",
        "datetimeHour": "Request timestamp, truncated to start of an hour",
        "datetimeMinute": "Request timestamp, truncated to start of an minute",
        "objectName": "The name of the R2 object, if applicable to this request",
        "responseStatusCode": "HTTP status code returned by R2"
    },
    "AccountR2OperationsAdaptiveGroupsFilter_InputObject": {},
    "AccountR2OperationsAdaptiveGroupsOrderBy": {},
    "AccountR2OperationsAdaptiveGroupsSum": {
        "requests": "Sum of Requests",
        "responseObjectSize": "Sum of Response Object Sizes"
    },
    "AccountR2StorageAdaptiveGroups": {
        "dimensions": "List of dimensions to group by",
        "max": "The max of values for a metric per dimension"
    },
    "AccountR2StorageAdaptiveGroupsDimensions": {
        "bucketName": "The name of the R2 bucket, if applicable to this request",
        "date": "Storage sample timestamp, truncated to start of a day",
        "datetime": "Storage sample timestamp",
        "datetimeHour": "Storage sample timestamp, truncated to start of an hour",
        "datetimeMinute": "Storage sample timestamp, truncated to start of an minute"
    },
    "AccountR2StorageAdaptiveGroupsFilter_InputObject": {},
    "AccountR2StorageAdaptiveGroupsMax": {
        "metadataSize": "Max of metadata size",
        "objectCount": "Max of object count",
        "payloadSize": "Max of payload size",
        "uploadCount": "Max of upload count"
    },
    "AccountR2StorageAdaptiveGroupsOrderBy": {},
    "AccountRumPageloadEventsAdaptiveGroups": {
        "avg": "",
        "count": "The number of pages viewed by end-users",
        "dimensions": "List of dimensions to group by",
        "sum": ""
    },
    "AccountRumPageloadEventsAdaptiveGroupsAvg": {
        "sampleInterval": "Average sample interval"
    },
    "AccountRumPageloadEventsAdaptiveGroupsDimensions": {
        "countryName": "Client country ISO 3166 alpha2 code",
        "customTagInternalSxg": "Signed Exchange enabled status",
        "date": "Request date from browser",
        "datetimeFifteenMinutes": "Request datetime from browser, truncated to multiple of 15 minutes",
        "datetimeFiveMinutes": "Request datetime from browser, truncated to multiple of 5 minutes",
        "datetimeHalfOfHour": "Request datetime from browser, truncated to multiple of 30 minutes",
        "datetimeHour": "Request datetime from browser, truncated to the hour",
        "datetimeMinute": "Request datetime from browser, truncated to the minute",
        "deviceType": "Device type used for view the page",
        "refererHost": "Host of the HTTP request referer",
        "refererPath": "Path of the HTTP request referer",
        "refererScheme": "Scheme of the HTTP request referer (http or https)",
        "requestHost": "HTTP Host of the web page URL",
        "requestPath": "Path of the web page URL",
        "requestScheme": "Scheme of the web page URL (http or https)",
        "siteTag": "The key value to identify a site",
        "userAgentBrowser": "Browser parsed from the user agent",
        "userAgentOS": "OS parsed from the user agent"
    },
    "AccountRumPageloadEventsAdaptiveGroupsFilter_InputObject": {},
    "AccountRumPageloadEventsAdaptiveGroupsOrderBy": {},
    "AccountRumPageloadEventsAdaptiveGroupsSum": {
        "visits": "The number of pages viewed by end-users that were initiated from a different website (i.e. where the Document.referrer does not match the hostname)"
    },
    "AccountRumPerformanceEventsAdaptiveGroups": {
        "avg": "",
        "count": "The number of pages viewed by end-users",
        "dimensions": "List of dimensions to group by",
        "quantiles": "",
        "sum": ""
    },
    "AccountRumPerformanceEventsAdaptiveGroupsAvg": {
        "connectionTime": "Connection time",
        "dnsTime": "Domain lookup time",
        "firstContentfulPaint": "The time when the first content piece from the DOM is painted (i.e. some text or an image)",
        "firstPaint": "The time when the first pixel is painted onto the screen (i.e. background of the page)",
        "loadEventTime": "The time taken for the load event",
        "pageLoadTime": "The time to download and display the entire content of a web page in the browser window",
        "pageRenderTime": "The time to download and display the entire content of a web page in the browser window",
        "requestTime": "The time between initiating the request and receiving the first byte of the response",
        "responseTime": "The time between receiving the first byte and the last byte of the response",
        "sampleInterval": "Average sample interval"
    },
    "AccountRumPerformanceEventsAdaptiveGroupsDimensions": {
        "countryName": "Client country ISO 3166 alpha2 code",
        "customTagInternalSxg": "Signed Exchange enabled status",
        "date": "Request date from browser",
        "datetimeFifteenMinutes": "Request datetime from browser, truncated to multiple of 15 minutes",
        "datetimeFiveMinutes": "Request datetime from browser, truncated to multiple of 5 minutes",
        "datetimeHalfOfHour": "Request datetime from browser, truncated to multiple of 30 minutes",
        "datetimeHour": "Request datetime from browser, truncated to the hour",
        "datetimeMinute": "Request datetime from browser, truncated to the minute",
        "deviceType": "Device type used for view the page",
        "refererHost": "Host of the HTTP request referer",
        "refererPath": "Path of the HTTP request referer",
        "refererScheme": "Scheme of the HTTP request referer (http or https)",
        "requestHost": "HTTP Host of the web page URL",
        "requestPath": "Path of the web page URL",
        "requestScheme": "Scheme of the web page URL (http or https)",
        "siteTag": "The key value to identify a site",
        "userAgentBrowser": "Browser parsed from the user agent",
        "userAgentOS": "OS parsed from the user agent"
    },
    "AccountRumPerformanceEventsAdaptiveGroupsFilter_InputObject": {},
    "AccountRumPerformanceEventsAdaptiveGroupsOrderBy": {},
    "AccountRumPerformanceEventsAdaptiveGroupsQuantiles": {
        "connectionTimeP50": "Connection time",
        "connectionTimeP75": "Connection time",
        "connectionTimeP90": "Connection time",
        "connectionTimeP99": "Connection time",
        "dnsTimeP50": "Domain lookup time",
        "dnsTimeP75": "Domain lookup time",
        "dnsTimeP90": "Domain lookup time",
        "dnsTimeP99": "Domain lookup time",
        "firstContentfulPaintP50": "The time when the first content piece from the DOM is painted (i.e. some text or an image)",
        "firstContentfulPaintP75": "The time when the first content piece from the DOM is painted (i.e. some text or an image)",
        "firstContentfulPaintP90": "The time when the first content piece from the DOM is painted (i.e. some text or an image)",
        "firstContentfulPaintP99": "The time when the first content piece from the DOM is painted (i.e. some text or an image)",
        "firstPaintP50": "The time when the first pixel is painted onto the screen (i.e. background of the page)",
        "firstPaintP75": "The time when the first pixel is painted onto the screen (i.e. background of the page)",
        "firstPaintP90": "The time when the first pixel is painted onto the screen (i.e. background of the page)",
        "firstPaintP99": "The time when the first pixel is painted onto the screen (i.e. background of the page)",
        "loadEventTimeP50": "The time taken for the load event",
        "loadEventTimeP75": "The time taken for the load event",
        "loadEventTimeP90": "The time taken for the load event",
        "loadEventTimeP99": "The time taken for the load event",
        "pageLoadTimeP50": "The time to download and display the entire content of a web page in the browser window",
        "pageLoadTimeP75": "The time to download and display the entire content of a web page in the browser window",
        "pageLoadTimeP90": "The time to download and display the entire content of a web page in the browser window",
        "pageLoadTimeP99": "The time to download and display the entire content of a web page in the browser window",
        "pageRenderTimeP50": "The time to download and display the entire content of a web page in the browser window",
        "pageRenderTimeP75": "The time to download and display the entire content of a web page in the browser window",
        "pageRenderTimeP90": "The time to download and display the entire content of a web page in the browser window",
        "pageRenderTimeP99": "The time to download and display the entire content of a web page in the browser window",
        "requestTimeP50": "The time between initiating the request and receiving the first byte of the response",
        "requestTimeP75": "The time between initiating the request and receiving the first byte of the response",
        "requestTimeP90": "The time between initiating the request and receiving the first byte of the response",
        "requestTimeP99": "The time between initiating the request and receiving the first byte of the response",
        "responseTimeP50": "The time between receiving the first byte and the last byte of the response",
        "responseTimeP75": "The time between receiving the first byte and the last byte of the response",
        "responseTimeP90": "The time between receiving the first byte and the last byte of the response",
        "responseTimeP99": "The time between receiving the first byte and the last byte of the response"
    },
    "AccountRumPerformanceEventsAdaptiveGroupsSum": {
        "visits": "The number of pages viewed by end-users that were initiated from a different website (i.e. where the Document.referrer does not match the hostname)"
    },
    "AccountRumWebVitalsEventsAdaptive": {
        "countryName": "Client country ISO 3166 alpha2 code",
        "cumulativeLayoutShift": "Cumulative Layout Shift (Core Web Vitals) (-1 indicates N/A)",
        "cumulativeLayoutShiftCurrentRect": "Layout values of the rectangular area after the changes",
        "cumulativeLayoutShiftElement": "DOM selector name of the largest layout shift",
        "cumulativeLayoutShiftPath": "Observed path of the Cumulative Layout Shift (Core Web Vitals)",
        "cumulativeLayoutShiftPreviousRect": "Layout values of the rectangular area before the changes",
        "customTagInternalSxg": "Signed Exchange enabled status",
        "date": "Request date from browser",
        "datetime": "Request datetime from browser",
        "datetimeFifteenMinutes": "Request datetime from browser, truncated to multiple of 15 minutes",
        "datetimeFiveMinutes": "Request datetime from browser, truncated to multiple of 5 minutes",
        "datetimeHalfOfHour": "Request datetime from browser, truncated to multiple of 30 minutes",
        "datetimeHour": "Request datetime from browser, truncated to the hour",
        "datetimeMinute": "Request datetime from browser, truncated to the minute",
        "deviceType": "Device type used for view the page",
        "refererHost": "Host of the HTTP request referer",
        "refererPath": "Path of the HTTP request referer",
        "refererScheme": "Scheme of the HTTP request referer (http or https)",
        "requestHost": "HTTP Host of the web page URL",
        "requestPath": "Path of the web page URL",
        "requestScheme": "Scheme of the web page URL (http or https)",
        "sampleInterval": "ABR sample interval",
        "siteTag": "The key value to identify a site",
        "userAgentBrowser": "Browser parsed from the user agent",
        "userAgentOS": "OS parsed from the user agent"
    },
    "AccountRumWebVitalsEventsAdaptiveFilter_InputObject": {},
    "AccountRumWebVitalsEventsAdaptiveGroups": {
        "avg": "",
        "count": "The number of pages viewed by end-users",
        "dimensions": "List of dimensions to group by",
        "quantiles": "",
        "sum": ""
    },
    "AccountRumWebVitalsEventsAdaptiveGroupsAvg": {
        "cumulativeLayoutShift": "Cumulative Layout Shift (Core Web Vitals) (negative value indicates N/A)",
        "firstContentfulPaint": "First Contentful Paint in microseconds (negative value indicates N/A)",
        "firstInputDelay": "First Input Delay (Core Web Vitals) in microseconds (negative value indicates N/A)",
        "interactionToNextPaint": "Interaction to Next Paint in microseconds (negative value indicates N/A)",
        "largestContentfulPaint": "Largest Contentful Paint (Core Web Vitals) in microseconds (negative value indicates N/A)",
        "sampleInterval": "Average sample interval",
        "timeToFirstByte": "Time to First Byte in microseconds (negative value indicates N/A)"
    },
    "AccountRumWebVitalsEventsAdaptiveGroupsDimensions": {
        "countryName": "Client country ISO 3166 alpha2 code",
        "cumulativeLayoutShiftElement": "DOM selector name of the largest layout shift",
        "cumulativeLayoutShiftPath": "Observed path of the Cumulative Layout Shift (Core Web Vitals)",
        "customTagInternalSxg": "Signed Exchange enabled status",
        "date": "Request date from browser",
        "datetimeFifteenMinutes": "Request datetime from browser, truncated to multiple of 15 minutes",
        "datetimeFiveMinutes": "Request datetime from browser, truncated to multiple of 5 minutes",
        "datetimeHalfOfHour": "Request datetime from browser, truncated to multiple of 30 minutes",
        "datetimeHour": "Request datetime from browser, truncated to the hour",
        "datetimeMinute": "Request datetime from browser, truncated to the minute",
        "deviceType": "Device type used for view the page",
        "firstInputDelayElement": "DOM selector name of the input delay",
        "firstInputDelayName": "Action name of the input delay",
        "firstInputDelayPath": "Observed path of the First Input Delay (Core Web Vitals)",
        "largestContentfulPaintElement": "DOM selector name of the largest object",
        "largestContentfulPaintObjectHost": "Host of the largest object",
        "largestContentfulPaintObjectPath": "Path of the largest object",
        "largestContentfulPaintObjectScheme": "Scheme of the largest object (http or https)",
        "largestContentfulPaintPath": "Observed path of the Largest Contentful Paint (Core Web Vitals)",
        "refererHost": "Host of the HTTP request referer",
        "refererPath": "Path of the HTTP request referer",
        "refererScheme": "Scheme of the HTTP request referer (http or https)",
        "requestHost": "HTTP Host of the web page URL",
        "requestPath": "Path of the web page URL",
        "requestScheme": "Scheme of the web page URL (http or https)",
        "siteTag": "The key value to identify a site",
        "userAgentBrowser": "Browser parsed from the user agent",
        "userAgentOS": "OS parsed from the user agent"
    },
    "AccountRumWebVitalsEventsAdaptiveGroupsFilter_InputObject": {},
    "AccountRumWebVitalsEventsAdaptiveGroupsOrderBy": {},
    "AccountRumWebVitalsEventsAdaptiveGroupsQuantiles": {
        "cumulativeLayoutShiftP50": "Cumulative Layout Shift (Core Web Vitals) (negative value indicates N/A)",
        "cumulativeLayoutShiftP75": "Cumulative Layout Shift (Core Web Vitals) (negative value indicates N/A)",
        "cumulativeLayoutShiftP90": "Cumulative Layout Shift (Core Web Vitals) (negative value indicates N/A)",
        "cumulativeLayoutShiftP99": "Cumulative Layout Shift (Core Web Vitals) (negative value indicates N/A)",
        "firstContentfulPaintP50": "First Contentful Paint in microseconds (negative value indicates N/A)",
        "firstContentfulPaintP75": "First Contentful Paint in microseconds (negative value indicates N/A)",
        "firstContentfulPaintP90": "First Contentful Paint in microseconds (negative value indicates N/A)",
        "firstContentfulPaintP99": "First Contentful Paint in microseconds (negative value indicates N/A)",
        "firstInputDelayP50": "First Input Delay (Core Web Vitals) in microseconds (negative value indicates N/A)",
        "firstInputDelayP75": "First Input Delay (Core Web Vitals) in microseconds (negative value indicates N/A)",
        "firstInputDelayP90": "First Input Delay (Core Web Vitals) in microseconds (negative value indicates N/A)",
        "firstInputDelayP99": "First Input Delay (Core Web Vitals) in microseconds (negative value indicates N/A)",
        "interactionToNextPaintP50": "Interaction to Next Paint in microseconds (negative value indicates N/A)",
        "interactionToNextPaintP75": "Interaction to Next Paint in microseconds (negative value indicates N/A)",
        "interactionToNextPaintP90": "Interaction to Next Paint in microseconds (negative value indicates N/A)",
        "interactionToNextPaintP99": "Interaction to Next Paint in microseconds (negative value indicates N/A)",
        "largestContentfulPaintP50": "Largest Contentful Paint (Core Web Vitals) in microseconds (negative value indicates N/A)",
        "largestContentfulPaintP75": "Largest Contentful Paint (Core Web Vitals) in microseconds (negative value indicates N/A)",
        "largestContentfulPaintP90": "Largest Contentful Paint (Core Web Vitals) in microseconds (negative value indicates N/A)",
        "largestContentfulPaintP99": "Largest Contentful Paint (Core Web Vitals) in microseconds (negative value indicates N/A)",
        "timeToFirstByteP50": "Time to First Byte in microseconds (negative value indicates N/A)",
        "timeToFirstByteP75": "Time to First Byte in microseconds (negative value indicates N/A)",
        "timeToFirstByteP90": "Time to First Byte in microseconds (negative value indicates N/A)",
        "timeToFirstByteP99": "Time to First Byte in microseconds (negative value indicates N/A)"
    },
    "AccountRumWebVitalsEventsAdaptiveGroupsSum": {
        "clsGood": "Cumulative Layout Shift (Core Web Vitals), count of Good occurrences (under 0.1)",
        "clsNeedsImprovement": "Cumulative Layout Shift (Core Web Vitals), count of Needs Improvement occurrences (between 0.1 and 0.25)",
        "clsPoor": "Cumulative Layout Shift (Core Web Vitals), count of Poor occurrences (over 0.25)",
        "clsTotal": "Cumulative Layout Shift (Core Web Vitals), total count",
        "fcpGood": "First Contentful Paint, count of Good occurrences (under 1.8 s)",
        "fcpNeedsImprovement": "First Contentful Paint, count of Needs Improvement occurrences (between 1.8 s and 3 s)",
        "fcpPoor": "First Contentful Paint, count of Poor occurrences (over 3 s)",
        "fcpTotal": "First Contentful Paint, total count",
        "fidGood": "First Input Delay (Core Web Vitals), count of Good occurrences (under 100 ms)",
        "fidNeedsImprovement": "First Input Delay (Core Web Vitals), count of Needs Improvement occurrences (between 100 ms and 300ms)",
        "fidPoor": "First Input Delay (Core Web Vitals), count of Poor occurrences (over 300 ms)",
        "fidTotal": "First Input Delay (Core Web Vitals), total count",
        "inpGood": "Interaction to Next Paint, count of Good occurrences (under 200 ms)",
        "inpNeedsImprovement": "Interaction to Next Paint, count of Needs Improvement occurrences (between 200 ms and 500ms)",
        "inpPoor": "Interaction to Next Paint, count of Poor occurrences (over 500 ms)",
        "inpTotal": "Interaction to Next Paint, total count",
        "lcpGood": "Largest Contentful Paint (Core Web Vitals), count of Good occurrences (under 2.5 sec)",
        "lcpNeedsImprovement": "Largest Contentful Paint (Core Web Vitals), count of Needs Improvement occurrences (between 2.5 sec and 4.0 sec)",
        "lcpPoor": "Largest Contentful Paint (Core Web Vitals), count of Poor occurrences (over 4.0 sec)",
        "lcpTotal": "Largest Contentful Paint (Core Web Vitals), total count",
        "ttfbGood": "Time to First Byte, count of Good occurrences (under 800 ms)",
        "ttfbNeedsImprovement": "Time to First Byte, count of Needs Improvement occurrences (between 800 ms and 1800ms)",
        "ttfbPoor": "Time to First Byte, count of Poor occurrences (over 500 ms)",
        "ttfbTotal": "Time to First Byte, total count",
        "visits": "The number of pages viewed by end-users that were initiated from a different website (i.e. where the Document.referrer does not match the hostname)"
    },
    "AccountRumWebVitalsEventsAdaptiveOrderBy": {},
    "AccountSettings": {
        "accessLoginRequestsAdaptiveGroups": "",
        "cdnNetworkAnalyticsAdaptiveGroups": "",
        "dosdAttackAnalyticsGroups": "",
        "dosdNetworkAnalyticsAdaptiveGroups": "",
        "durableObjectsInvocationsAdaptiveGroups": "",
        "durableObjectsPeriodicGroups": "",
        "durableObjectsStorageGroups": "",
        "durableObjectsSubrequestsAdaptiveGroups": "",
        "fbmAttackAnalyticsGroups": "",
        "firewallEventsAdaptive": "",
        "firewallEventsAdaptiveGroups": "",
        "flowtrackdNetworkAnalyticsAdaptiveGroups": "",
        "gatewayL4DownstreamSessionsAdaptiveGroups": "",
        "gatewayL4SessionsAdaptiveGroups": "",
        "gatewayL4UpstreamSessionsAdaptiveGroups": "",
        "gatewayL7RequestsAdaptiveGroups": "",
        "gatewayResolverByCategoryAdaptiveGroups": "",
        "gatewayResolverQueriesAdaptiveGroups": "",
        "httpRequests1dGroups": "",
        "httpRequests1hGroups": "",
        "httpRequests1mGroups": "",
        "httpRequestsOverviewAdaptiveGroups": "",
        "imagesRequestsAdaptiveGroups": "",
        "ipFlows1dGroups": "",
        "ipFlows1hGroups": "",
        "ipFlows1mAttacksGroups": "",
        "ipFlows1mGroups": "",
        "logpushHealthAdaptiveGroups": "",
        "magicFirewallNetworkAnalyticsAdaptiveGroups": "",
        "magicFirewallSamplesAdaptiveGroups": "",
        "magicTransitNetworkAnalyticsAdaptiveGroups": "",
        "magicTransitTunnelHealthChecksAdaptiveGroups": "",
        "magicTransitTunnelTrafficAdaptiveGroups": "",
        "mnmFlowDataAdaptiveGroups": "",
        "nelReportsAdaptiveGroups": "",
        "pagesFunctionsInvocationsAdaptiveGroups": "",
        "queueMessageOperationsAdaptiveGroups": "",
        "queuesMessagesAdaptiveGroups": "",
        "r2OperationsAdaptiveGroups": "",
        "r2StorageAdaptiveGroups": "",
        "rumPageloadEventsAdaptiveGroups": "",
        "rumPerformanceEventsAdaptiveGroups": "",
        "rumWebVitalsEventsAdaptive": "",
        "rumWebVitalsEventsAdaptiveGroups": "",
        "spectrumNetworkAnalyticsAdaptiveGroups": "",
        "storageTraces": "",
        "streamMinutesViewedAdaptiveGroups": "",
        "turnstileAdaptiveGroups": "",
        "videoBufferEventsAdaptiveGroups": "",
        "videoPlaybackEventsAdaptiveGroups": "",
        "videoQualityEventsAdaptiveGroups": "",
        "workersAnalyticsEngineAdaptiveGroups": "",
        "workersInvocationsAdaptive": "",
        "workersInvocationsScheduled": "",
        "workersSubrequestsAdaptiveGroups": "",
        "zeroTrustPrivateNetworkDiscoveryGroups": ""
    },
    "AccountSpectrumNetworkAnalyticsAdaptiveGroups": {
        "avg": "The average of values for a metric per dimension",
        "dimensions": "List of dimensions to group by",
        "sum": "The sum of values for a metric per dimension"
    },
    "AccountSpectrumNetworkAnalyticsAdaptiveGroupsAvg": {
        "bitRate": "Sum of bits received, divided by 1 second, providing a per-second bit rate when grouped by datetime",
        "bitRateDay": "Sum of bits received, divided by 86400 seconds, providing a per-second bit rate when grouped by date",
        "bitRateFifteenMinutes": "Sum of bits received, divided by 900 seconds, providing a per-second bit rate when grouped by datetimeFifteenMinutes",
        "bitRateFiveMinutes": "Sum of bits received, divided by 300 seconds, providing a per-second bit rate when grouped by datetimeFiveMinutes",
        "bitRateHour": "Sum of bits received, divided by 3600 seconds, providing a per-second bit rate when grouped by datetimeHour",
        "bitRateMinute": "Sum of bits received, divided by 60 seconds, providing a per-second bit rate when grouped by datetimeMinute",
        "bitRateTenSeconds": "Sum of bits received, divided by 10 seconds, providing a per-second bit rate when grouped by datetimeTenSeconds",
        "packetRate": "Sum of packets received, divided by 1 second, providing a per-second packet rate when grouped by datetime",
        "packetRateDay": "Sum of packets received, divided by 86400 seconds, providing a per-second packet rate when grouped by date",
        "packetRateFifteenMinutes": "Sum of packets received, divided by 900 seconds, providing a per-second packet rate when grouped by datetimeFifteenMinutes",
        "packetRateFiveMinutes": "Sum of packets received, divided by 300 seconds, providing a per-second packet rate when grouped by datetimeFiveMinutes",
        "packetRateHour": "Sum of packets received, divided by 3600 seconds, providing a per-second packet rate when grouped by datetimeHour",
        "packetRateMinute": "Sum of packets received, divided by 60 seconds, providing a per-second packet rate when grouped by datetimeMinute",
        "packetRateTenSeconds": "Sum of packets received, divided by 10 seconds, providing a per-second packet rate when grouped by datetimeTenSeconds"
    },
    "AccountSpectrumNetworkAnalyticsAdaptiveGroupsDimensions": {
        "coloCity": "City where the Cloudflare datacenter that received the packet is located",
        "coloCode": "Cloudflare datacenter that received the packet (nearest IATA airport code)",
        "coloCountry": "Country where the Cloudflare datacenter that received the packet is located (ISO 3166-1 alpha-2)",
        "coloGeohash": "Latitude and longitude where the Cloudflare datacenter that received the packet is located (Geohash encoding)",
        "coloName": "Cloudflare datacenter that received the packet (unique site identifier)",
        "date": "Date that the packet was received",
        "datetime": "Date and time that the packet was received",
        "datetimeFifteenMinutes": "Date and time that the packet was received, rounded to the start of the nearest fifteen minutes",
        "datetimeFiveMinutes": "Date and time that the packet was received, rounded to the start of the nearest five minutes",
        "datetimeHour": "Date and time that the packet was received, rounded to the start of the nearest hour",
        "datetimeMinute": "Date and time that the packet was received, rounded to the start of the nearest minute",
        "datetimeTenSeconds": "Date and time that the packet was received, rounded to the start of the nearest ten seconds",
        "destinationAsn": "ASN associated with the destination IP of the packet, or 0 if there was no mapping available",
        "destinationAsnName": "Name of ASN associated with the destination IP of the packet, if available",
        "destinationCountry": "Country where the destination IP of the packet is located (ISO 3166-1 alpha-2)",
        "destinationGeohash": "Latitude and longitude where the destination IP of the packet is located (Geohash encoding)",
        "destinationPort": "Value of the Destination Port header field in the TCP or UDP packet",
        "direction": "Direction of the packet relative to the customer network (possible values: inbound, outbound, lateral)",
        "ethertype": "Value of the Ethertype header field in the Ethernet packet (2048 for IPv4; 34525 for IPv6)",
        "greChecksum": "Value of the Checkusm header field in the GRE packet",
        "greEthertype": "Value of the Ethertype header field in the GRE packet",
        "greHeaderLength": "Length of the GRE packet header, in bytes",
        "greKey": "Value of the Key header field in the GRE packet",
        "greSequenceNumber": "Value of the Sequence Number header field in the GRE packet",
        "greVersion": "Value of the Version header field in the GRE packet",
        "icmpChecksum": "Value of the Checkusm header field in the ICMP packet",
        "icmpCode": "Value of the Code header field in the ICMP packet",
        "icmpType": "Value of the Type header field in the ICMP packet",
        "ipDestinationAddress": "Value of the Destination Address header field in the IPv4 or IPv6 packet",
        "ipDestinationSubnet": "Computed subnet of the Destination Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6)",
        "ipFragmentOffset": "Value of the Fragment Offset header field in the IPv4 or IPv6 packet",
        "ipHeaderLength": "Length of the IPv4 or IPv6 packet header, in bytes",
        "ipMoreFragments": "Value of the More Fragments header field in the IPv4 or IPv6 packet",
        "ipProtocol": "Value of the Protocol header field in the IPv4 or IPv6 packet",
        "ipProtocolName": "Name of the protocol specified by the Protocol header field in the IPv4 or IPv6 packet",
        "ipSourceAddress": "Value of the Source Address header field in the IPv4 or IPv6 packet",
        "ipSourceSubnet": "Computed subnet of the Source Address header field in the IPv4 or IPv6 packet (/24 for IPv4; /64 for IPv6)",
        "ipTotalLength": "Total length of the IPv4 or IPv6 packet, in bytes",
        "ipTotalLengthBuckets": "Total length of the IPv4 or IPv6 packet, in bytes, with the last two digits truncated",
        "ipTtl": "Value of the TTL header field in the IPv4 packet or the Hop Limit header field in the IPv6 packet",
        "ipTtlBuckets": "Value of the TTL header field in the IPv4 packet or the Hop Limit header field in the IPv6 packet, with the last digit truncated",
        "ipv4Checksum": "Value of the Checksum header field in the IPv4 packet",
        "ipv4DontFragment": "Value of the Don't Fragment header field in the IPv4 packet",
        "ipv4Dscp": "Value of the Differentiated Services Code Point header field in the IPv4 packet",
        "ipv4Ecn": "Value of the Explicit Congestion Notification header field in the IPv4 packet",
        "ipv4Identification": "Value of the Identification header field in the IPv4 packet",
        "ipv4Options": "List of Options numbers included in the IPv4 packet header",
        "ipv6Dscp": "Value of the Differentiated Services Code Point header field in the IPv6 packet",
        "ipv6Ecn": "Value of the Explicit Congestion Notification header field in the IPv6 packet",
        "ipv6ExtensionHeaders": "List of Extension Header numbers included in the IPv6 packet header",
        "ipv6FlowLabel": "Value of the Flow Label header field in the IPv6 packet",
        "ipv6Identification": "Value of the Identification extension header field in the IPv6 packet",
        "mitigationSystem": "Which system dropped the packet (possible values: dosd, flowtrackd, magic-firewall)",
        "outcome": "The action that was taken on the packet (possible values: pass, drop)",
        "sampleInterval": "ABR sample interval",
        "sourceAsn": "ASN associated with the source IP of the packet, or 0 if there was no mapping available",
        "sourceAsnName": "Name of ASN associated with the source IP of the packet, if available",
        "sourceCountry": "Country where the source IP of the packet is located (ISO 3166-1 alpha-2)",
        "sourceGeohash": "Latitude and longitude where the source IP of the packet is located (Geohash encoding)",
        "sourcePort": "Value of the Source Port header field in the TCP or UDP packet",
        "tcpAcknowledgementNumber": "Value of the Acknowledgement Number header field in the TCP packet",
        "tcpChecksum": "Value of the Checkusm header field in the TCP packet",
        "tcpDataOffset": "Value of the Data Offset header field in the TCP packet",
        "tcpFlags": "Value of the Flags header field in the TCP packet",
        "tcpFlagsString": "Human-readable string representation of the Flags header field in the TCP packet",
        "tcpMss": "Value of the MSS option header field in the TCP packet",
        "tcpOptions": "List of Options numbers included in the TCP packet header",
        "tcpSackBlocks": "Value of the SACK Blocks option header field in the TCP packet",
        "tcpSackPermitted": "Value of the SACK Permitted option header field in the TCP packet",
        "tcpSequenceNumber": "Value of the Sequence Number header field in the TCP packet",
        "tcpTimestampEcr": "Value of the Timestamp Echo Reply option header field in the TCP packet",
        "tcpTimestampValue": "Value of the Timestamp option header field in the TCP packet",
        "tcpUrgentPointer": "Value of the Urgent Pointer header field in the TCP packet",
        "tcpWindowScale": "Value of the Window Scale option header field in the TCP packet",
        "tcpWindowSize": "Value of the Window Size header field in the TCP packet",
        "udpChecksum": "Value of the Checkusm header field in the UDP packet",
        "udpPayloadLength": "Value of the Payload Length header field in the UDP packet"
    },
    "AccountSpectrumNetworkAnalyticsAdaptiveGroupsFilter_InputObject": {},
    "AccountSpectrumNetworkAnalyticsAdaptiveGroupsOrderBy": {},
    "AccountSpectrumNetworkAnalyticsAdaptiveGroupsSum": {
        "bits": "Sum of bits received",
        "packets": "Sum of packets received"
    },
    "AccountStorageTraces": {
        "containerId": "The container that this resource is stored under.",
        "datetime": "Storage trace timestamp",
        "resourceId": "The identifier to access this resource in the container.",
        "serviceId": "The identifier of the storage service that houses the resourse.",
        "traceId": "The ID that this trace entry is under.",
        "userAccountId": "The AccountID of the user who owns the resource."
    },
    "AccountStorageTracesFilter_InputObject": {},
    "AccountStorageTracesOrderBy": {},
    "AccountStreamMinutesViewedAdaptiveGroups": {
        "count": "The number of values for a metric per dimension",
        "dimensions": "List of dimensions to group by",
        "sum": "The sum of values for a metric per dimension"
    },
    "AccountStreamMinutesViewedAdaptiveGroupsDimensions": {
        "clientCountryName": "ISO 3166 alpha2 country code from the client",
        "creator": "Customer-provided creator ID of a video",
        "date": "The date the event occurred at the edge",
        "datetime": "The date and time the event occurred at the edge",
        "datetimeFifteenMinutes": "The date and time the event occurred at the edge truncated to a multiple of 15 minutes",
        "datetimeFiveMinutes": "The date and time the event occurred at the edge truncated to a multiple of 5 minutes",
        "datetimeHour": "The date and time the event occurred at the edge truncated to hours",
        "datetimeMinute": "The date and time the event occurred at the edge truncated to the minute",
        "mediaType": "The source of the minutes viewed",
        "uid": "Unique ID of a video"
    },
    "AccountStreamMinutesViewedAdaptiveGroupsFilter_InputObject": {},
    "AccountStreamMinutesViewedAdaptiveGroupsOrderBy": {},
    "AccountStreamMinutesViewedAdaptiveGroupsSum": {
        "minutesViewed": ""
    },
    "AccountTurnstileAdaptiveGroups": {
        "avg": "",
        "count": "Number of Cloudflare Turnstile events processed",
        "dimensions": "List of dimensions to group by"
    },
    "AccountTurnstileAdaptiveGroupsAvg": {
        "sampleInterval": "Average sample interval"
    },
    "AccountTurnstileAdaptiveGroupsDimensions": {
        "action": "The action tag of the challenge event",
        "date": "The date the challenge event was emitted",
        "datetime": "The date and time the challenge event was emitted",
        "datetimeDay": "The date and time the challenge event was emitted truncated to the day",
        "datetimeFifteenMinutes": "The date and time the challenge event was emitted truncated to a multiple of 15 minutes",
        "datetimeFiveMinutes": "The date and time the challenge event was emitted truncated to a multiple of 5 minutes",
        "datetimeHalfOfHour": "The date and time the challenge event was emitted truncated to a multiple of 30 minutes",
        "datetimeHour": "The date and time the challenge event was emitted truncated to the hour",
        "datetimeMinute": "The date and time the challenge event was emitted truncated to the minute",
        "eventType": "The type of the Cloudflare Turnstile event",
        "siteKey": "The sitekey of the widget associated with the event"
    },
    "AccountTurnstileAdaptiveGroupsFilter_InputObject": {},
    "AccountTurnstileAdaptiveGroupsOrderBy": {},
    "AccountVideoBufferEventsAdaptiveGroups": {
        "avg": "",
        "count": "Total number of buffer events",
        "dimensions": "List of dimensions to group by"
    },
    "AccountVideoBufferEventsAdaptiveGroupsAvg": {
        "sampleInterval": "Average sample interval"
    },
    "AccountVideoBufferEventsAdaptiveGroupsDimensions": {
        "clientCountryName": "ISO 3166 alpha2 country code from the client",
        "date": "Request date of the event",
        "datetime": "Request datetime of the event",
        "datetimeFifteenMinutes": "Request datetime of the event, truncated to multiple of 15 minutes",
        "datetimeFiveMinutes": "Request datetime of the event, truncated to multiple of 5 minutes",
        "datetimeHalfOfHour": "Request datetime of the event, truncated to multiple of 30 minutes",
        "datetimeHour": "Request datetime of the event, truncated to the hour",
        "datetimeMinute": "Request datetime of the event, truncated to the minute",
        "deviceBrowser": "Browser of the device used in playback",
        "deviceOs": "OS of the device used in playback",
        "deviceType": "Device type used in playback",
        "uid": "unique id for a video"
    },
    "AccountVideoBufferEventsAdaptiveGroupsFilter_InputObject": {},
    "AccountVideoBufferEventsAdaptiveGroupsOrderBy": {},
    "AccountVideoPlaybackEventsAdaptiveGroups": {
        "avg": "",
        "count": "Total number of playback starts",
        "dimensions": "List of dimensions to group by",
        "sum": ""
    },
    "AccountVideoPlaybackEventsAdaptiveGroupsAvg": {
        "sampleInterval": "Average sample interval"
    },
    "AccountVideoPlaybackEventsAdaptiveGroupsDimensions": {
        "clientCountryName": "ISO 3166 alpha2 country code from the client",
        "date": "Request date of the event",
        "datetime": "Request datetime of the event",
        "datetimeFifteenMinutes": "Request datetime of the event, truncated to multiple of 15 minutes",
        "datetimeFiveMinutes": "Request datetime of the event, truncated to multiple of 5 minutes",
        "datetimeHalfOfHour": "Request datetime of the event, truncated to multiple of 30 minutes",
        "datetimeHour": "Request datetime of the event, truncated to the hour",
        "datetimeMinute": "Request datetime of the event, truncated to the minute",
        "deviceBrowser": "Browser of the device used in playback",
        "deviceOs": "OS of the device used in playback",
        "deviceType": "Device type used in playback",
        "uid": "unique id for a video"
    },
    "AccountVideoPlaybackEventsAdaptiveGroupsFilter_InputObject": {},
    "AccountVideoPlaybackEventsAdaptiveGroupsOrderBy": {},
    "AccountVideoPlaybackEventsAdaptiveGroupsSum": {
        "timeViewedMinutes": "Total time viewed in minutes"
    },
    "AccountVideoQualityEventsAdaptiveGroups": {
        "avg": "",
        "count": "Total number of quality change events",
        "dimensions": "List of dimensions to group by"
    },
    "AccountVideoQualityEventsAdaptiveGroupsAvg": {
        "sampleInterval": "Average sample interval"
    },
    "AccountVideoQualityEventsAdaptiveGroupsDimensions": {
        "clientCountryName": "ISO 3166 alpha2 country code from the client",
        "date": "Request date of the event",
        "datetime": "Request datetime of the event",
        "datetimeFifteenMinutes": "Request datetime of the event, truncated to multiple of 15 minutes",
        "datetimeFiveMinutes": "Request datetime of the event, truncated to multiple of 5 minutes",
        "datetimeHalfOfHour": "Request datetime of the event, truncated to multiple of 30 minutes",
        "datetimeHour": "Request datetime of the event, truncated to the hour",
        "datetimeMinute": "Request datetime of the event, truncated to the minute",
        "deviceBrowser": "Browser of the device used in playback",
        "deviceOs": "OS of the device used in playback",
        "deviceType": "Device type used in playback",
        "qualityResolution": "Video playback vertical resolution",
        "uid": "unique id for a video"
    },
    "AccountVideoQualityEventsAdaptiveGroupsFilter_InputObject": {},
    "AccountVideoQualityEventsAdaptiveGroupsOrderBy": {},
    "AccountWorkersAnalyticsEngineAdaptiveGroups": {
        "count": "The number of values for a metric per dimension",
        "dimensions": "List of dimensions to group by"
    },
    "AccountWorkersAnalyticsEngineAdaptiveGroupsDimensions": {
        "dataset": "The dataset name",
        "date": "The date the event occurred",
        "datetime": "The date and time the event occurred",
        "datetimeFifteenMinutes": "The date and time the event occurred truncated to a multiple of 15 minutes",
        "datetimeFiveMinutes": "The date and time the event occurred truncated to a multiple of 5 minutes",
        "datetimeHour": "The date and time the event occurred truncated to the start of an hour",
        "datetimeMinute": "The date and time the event occurred truncated to the start of a minute"
    },
    "AccountWorkersAnalyticsEngineAdaptiveGroupsFilter_InputObject": {},
    "AccountWorkersAnalyticsEngineAdaptiveGroupsOrderBy": {},
    "AccountWorkersInvocationsAdaptive": {
        "avg": "The average value used for sample interval",
        "dimensions": "List of dimensions to group by",
        "max": "The max value for a metric",
        "min": "The min value for a metric",
        "quantiles": "Quantiles of a metric per dimension",
        "sum": "The sum of values for a metric per dimension"
    },
    "AccountWorkersInvocationsAdaptiveAvg": {
        "sampleInterval": ""
    },
    "AccountWorkersInvocationsAdaptiveDimensions": {
        "date": "Request datetime, truncated to start of a day",
        "datetime": "Request datetime",
        "datetimeHour": "Request datetime, truncated to start of an hour",
        "datetimeMinute": "Request datetime, truncated to start of an minute",
        "dispatchNamespaceName": "The name of the script's dispatch namespace",
        "environmentName": "The name of the script environment",
        "scriptName": "The name of the script",
        "scriptTag": "The unique tag of the script",
        "status": "Status of the worker invocation",
        "usageModel": "Usage model of the worker invocation"
    },
    "AccountWorkersInvocationsAdaptiveFilter_InputObject": {},
    "AccountWorkersInvocationsAdaptiveMax": {
        "cpuTime": "Maximum CPU time for one request - microseconds",
        "duration": "Maximum duration of one request - GB*s",
        "responseBodySize": "Maximum response body size for one request - bytes",
        "wallTime": "Maximum wall time for one request - microseconds"
    },
    "AccountWorkersInvocationsAdaptiveMin": {
        "cpuTime": "Minimum CPU time for one request - microseconds",
        "duration": "Minimum duration of one request - GB*s",
        "responseBodySize": "Minimum response body size for one request - bytes",
        "wallTime": "Minimum wall time for one request - microseconds"
    },
    "AccountWorkersInvocationsAdaptiveOrderBy": {},
    "AccountWorkersInvocationsAdaptiveQuantiles": {
        "cpuTimeP25": "CPU time 25th percentile - microseconds",
        "cpuTimeP50": "CPU time 50th percentile - microseconds",
        "cpuTimeP75": "CPU time 75th percentile - microseconds",
        "cpuTimeP90": "CPU time 90th percentile - microseconds",
        "cpuTimeP99": "CPU time 99th percentile - microseconds",
        "cpuTimeP999": "CPU time 99.9th percentile - microseconds",
        "durationP25": "Duration 25th percentile - GB*s",
        "durationP50": "Duration 50th percentile - GB*s",
        "durationP75": "Duration 75th percentile - GB*s",
        "durationP90": "Duration 90th percentile - GB*s",
        "durationP99": "Duration 99th percentile - GB*s",
        "durationP999": "Duration 99.9th percentile - GB*s",
        "responseBodySizeP25": "Response body size 25th percentile - bytes",
        "responseBodySizeP50": "Response body size 50th percentile - bytes",
        "responseBodySizeP75": "Response body size 75th percentile - bytes",
        "responseBodySizeP90": "Response body size 90th percentile - bytes",
        "responseBodySizeP99": "Response body size 99th percentile - bytes",
        "responseBodySizeP999": "Response body size 99.9th percentile - bytes",
        "wallTimeP25": "Wall time 25th percentile - microseconds",
        "wallTimeP50": "Wall time 50th percentile - microseconds",
        "wallTimeP75": "Wall time 75th percentile - microseconds",
        "wallTimeP90": "Wall time 90th percentile - microseconds",
        "wallTimeP99": "Wall time 99th percentile - microseconds",
        "wallTimeP999": "Wall time 99.9th percentile - microseconds"
    },
    "AccountWorkersInvocationsAdaptiveSum": {
        "duration": "Sum of Duration - GB*s",
        "errors": "Sum of Errors",
        "requests": "Sum of Requests",
        "responseBodySize": "Sum of Response Body Sizes",
        "subrequests": "Sum of Subrequests",
        "wallTime": "Sum of Wall Time"
    },
    "AccountWorkersInvocationsScheduled": {
        "cpuTimeUs": "CPU time - microseconds",
        "cron": "The cron string of the schedule",
        "datetime": "Request datetime",
        "environmentName": "The name of the script environment",
        "scheduledDatetime": "Scheduled datetime",
        "scriptName": "The name of the script",
        "status": "Status of the worker invocation"
    },
    "AccountWorkersInvocationsScheduledFilter_InputObject": {},
    "AccountWorkersInvocationsScheduledOrderBy": {},
    "AccountWorkersSubrequestsAdaptiveGroups": {
        "dimensions": "List of dimensions to group by",
        "sum": "The sum of values for a metric per dimension"
    },
    "AccountWorkersSubrequestsAdaptiveGroupsDimensions": {
        "cacheStatus": "Cache status",
        "date": "Request datetime, truncated to start of a day",
        "datetime": "Request datetime",
        "datetimeHour": "Request datetime, truncated to start of an hour",
        "datetimeMinute": "Request datetime, truncated to start of an minute",
        "environmentName": "The name of the script environment",
        "scriptName": "The name of the script",
        "usageModel": "Usage model of the worker invocation"
    },
    "AccountWorkersSubrequestsAdaptiveGroupsFilter_InputObject": {},
    "AccountWorkersSubrequestsAdaptiveGroupsOrderBy": {},
    "AccountWorkersSubrequestsAdaptiveGroupsSum": {
        "requestBodySizeUncached": "Workers fetch request body size in bytes where the request was not cached",
        "subrequests": "Number of subrequests"
    },
    "AccountZeroTrustPrivateNetworkDiscoveryGroups": {
        "count": "Sum of network access during the select range",
        "dimensions": "List of dimensions to group by",
        "max": "",
        "uniq": ""
    },
    "AccountZeroTrustPrivateNetworkDiscoveryGroupsDimensions": {
        "date": "Request date",
        "datetimeHour": "Request datetime and start of the hour",
        "destinationIP": "Destination IPv4 or IPv6",
        "destinationPort": "Destination port",
        "email": "The email address of the user who accessed the resource",
        "hostname": "SNI hostname of the origin if TLS intercept is enabled",
        "originId": "UUID of the origin if it has been identified before",
        "status": "status of the origin, one of unreviewed, in_review, approved, unapproved",
        "transport": "The transport protocol used in the session, one of (0, tcp) (1, quic) (2, udp)",
        "userId": "The ID of the user who accessed the resource"
    },
    "AccountZeroTrustPrivateNetworkDiscoveryGroupsFilter_InputObject": {},
    "AccountZeroTrustPrivateNetworkDiscoveryGroupsMax": {
        "dateTime": "Latest access time of a user"
    },
    "AccountZeroTrustPrivateNetworkDiscoveryGroupsOrderBy": {},
    "AccountZeroTrustPrivateNetworkDiscoveryGroupsUniq": {
        "emails": "Approximate count of unique emails",
        "origins": "Approximate count of unique origins. An origin is a (transport, destinationIP, destinationPort)",
        "userIds": "Approximate count of unique users"
    },
    "Date": {},
    "Mutation": {
        "do": ""
    },
    "Query": {
        "cost": "",
        "viewer": ""
    },
    "Settings": {
        "availableFields": "The list of available fields to query",
        "enabled": "",
        "maxDuration": "Requested time range should not be wider than this (seconds)",
        "maxNumberOfFields": "Maximum number of fields to request at once",
        "maxPageSize": "Maximum allowed value for 'limit'",
        "notOlderThan": "Cannot reach for data beyond this distance in the past (seconds)"
    },
    "Time": {},
    "ZoneApiRequestSequencesGroups": {
        "aggArgMax": "",
        "aggMax": "",
        "dimensions": "List of dimensions to group by"
    },
    "ZoneApiRequestSequencesGroupsAggArgMax": {
        "correlation": "Correlation score estimated over a 24 hour window (higher scores mean more correlation between requests in the sequence of endpoint operations)",
        "numOccurrences": "Estimated number of occurrences of this sequence of endpoint operations",
        "operationsApiEndpoints": "API endpoints comprising the sequence of operations. Individual endpoints are delimited by # symbols",
        "operationsClientRequestHTTPMethods": "HTTP request methods comprising the sequence of operations. Individual request method names are delimited by # symbols"
    },
    "ZoneApiRequestSequencesGroupsAggMax": {
        "timeLastSeen": "Time of the most recent occurrence of this sequence of endpoint operations (based on the timestamp of the first request in the sequence)",
        "timeLastUpdated": "The time at which Cloudflare last refreshed this data"
    },
    "ZoneApiRequestSequencesGroupsDimensions": {
        "clientRequestHTTPHost": "The host associated with this sequence of endpoint operations",
        "datetime": "Sequence generation timeslot, truncated to 10 minutes",
        "rank": "Sequence rank based on ordering sequences by correlation"
    },
    "ZoneApiRequestSequencesGroupsFilter_InputObject": {},
    "ZoneApiRequestSequencesGroupsOrderBy": {},
    "ZoneCacheReserveOperationsAdaptiveGroups": {
        "dimensions": "List of dimensions to group by",
        "sum": "The sum of values for a metric per dimension"
    },
    "ZoneCacheReserveOperationsAdaptiveGroupsDimensions": {
        "actionStatus": "Status of the R2 operation",
        "bucketName": "Name of bucket containing stored objects",
        "date": "Request timestamp, truncated to start of a day",
        "datetime": "Request timestamp",
        "datetimeHour": "Request timestamp, truncated to start of an hour",
        "datetimeMinute": "Request timestamp, truncated to start of an minute",
        "operationClass": "Billable class of storage operation"
    },
    "ZoneCacheReserveOperationsAdaptiveGroupsFilter_InputObject": {},
    "ZoneCacheReserveOperationsAdaptiveGroupsOrderBy": {},
    "ZoneCacheReserveOperationsAdaptiveGroupsSum": {
        "requests": "Sum of Requests"
    },
    "ZoneCacheReserveStorageAdaptiveGroups": {
        "dimensions": "List of dimensions to group by",
        "max": "The max of values for a metric per dimension"
    },
    "ZoneCacheReserveStorageAdaptiveGroupsDimensions": {
        "bucketHash": "Hash of bucket containing stored objects",
        "bucketName": "Name of bucket containing stored objects",
        "date": "Storage sample timestamp, truncated to start of a day",
        "datetime": "Storage sample timestamp",
        "datetimeHour": "Storage sample timestamp, truncated to start of an hour",
        "datetimeMinute": "Storage sample timestamp, truncated to start of an minute"
    },
    "ZoneCacheReserveStorageAdaptiveGroupsFilter_InputObject": {},
    "ZoneCacheReserveStorageAdaptiveGroupsMax": {
        "storedBytes": "Payload and metadata size of objects in bucket"
    },
    "ZoneCacheReserveStorageAdaptiveGroupsOrderBy": {},
    "ZoneEmailRoutingAdaptive": {
        "datetime": "The date and time the source email was received",
        "dkim": "DKIM check status of the source email",
        "dmarc": "DMARC check status of the source email",
        "errorDetail": "Detailed error message (if any)",
        "from": "The sender email address of the source email",
        "isNDR": "Is this event related to a NDR (bounce) email?",
        "messageId": "The Message-ID header of the source email (if present)",
        "ruleMatched": "The UUID of the routing rule matched by the source email",
        "sampleInterval": "ABR sample interval",
        "sessionId": "Unique identifier for the email log entry (note: retries for the same email may result in multiple log entries)",
        "spf": "SPF check status of the source email",
        "status": "The resulting outcome (action) for the email",
        "subject": "The subject of the source email",
        "to": "The recipient email address of the source email"
    },
    "ZoneEmailRoutingAdaptiveFilter_InputObject": {},
    "ZoneEmailRoutingAdaptiveGroups": {
        "count": "Number of emails processed (approximation when sampleInterval > 1)",
        "dimensions": "List of dimensions to group by"
    },
    "ZoneEmailRoutingAdaptiveGroupsDimensions": {
        "date": "The date the source email was received",
        "datetimeFifteenMinutes": "The date and time the source email was received truncated to fifteen minutes",
        "datetimeFiveMinutes": "The date and time the source email was received truncated to five minutes",
        "datetimeHour": "The date and time the source email was received truncated to the hour",
        "datetimeMinute": "The date and time the source email was received truncated to the minute",
        "dkim": "DKIM check status of the source email",
        "dmarc": "DMARC check status of the source email",
        "isNDR": "Is this event related to a NDR (bounce) email?",
        "ruleMatched": "The UUID of the routing rule matched by the source email",
        "sampleInterval": "ABR sample interval",
        "spf": "SPF check status of the source email",
        "status": "The resulting outcome (action) for the email"
    },
    "ZoneEmailRoutingAdaptiveGroupsFilter_InputObject": {},
    "ZoneEmailRoutingAdaptiveGroupsOrderBy": {},
    "ZoneEmailRoutingAdaptiveOrderBy": {},
    "ZoneFilter_InputObject": {},
    "ZoneFirewallEventsAdaptive": {
        "action": "The code of the first-class action the Cloudflare Firewall took on this request",
        "apiGatewayMatchedEndpoint": "API Gateway endpoint matched at the edge",
        "botScore": "The final score originated from bot management detections.",
        "botScoreSrcName": "Name of the source detection which generated the bot management score.",
        "clientASNDescription": "The ASN of the visitor as string",
        "clientAsn": "The ASN number of the visitor",
        "clientCountryName": "Country from which request originated",
        "clientIP": "The visitor's IP address (IPv4 or IPv6)",
        "clientIPClass": "The classification of the visitor's IP address, possible values are: unknown | clean | badHost | searchEngine | allowlist | greylist | monitoringService | securityScanner | noRecord | scan | backupService | mobilePlatform | tor",
        "clientRefererHost": "The referer host",
        "clientRefererPath": "The referer path requested by visitor",
        "clientRefererQuery": "The referer query-string was requested by the visitor",
        "clientRefererScheme": "The referer url scheme requested by the visitor",
        "clientRequestHTTPHost": "The HTTP hostname requested by the visitor",
        "clientRequestHTTPMethodName": "The HTTP method used by the visitor",
        "clientRequestHTTPProtocol": "The version of HTTP protocol requested by the visitor",
        "clientRequestPath": "The path requested by visitor",
        "clientRequestQuery": "The query-string was requested by the visitor",
        "clientRequestScheme": "The url scheme requested by the visitor",
        "contentScanHasFailed": "1 if not all contents for this request where successfully scanned, else 0",
        "contentScanNumMaliciousObj": "Number of scannable content objects that are malicious",
        "contentScanNumObj": "Number of scannable content objects",
        "contentScanObjResults": "Array of scan results in order of detection",
        "contentScanObjTypes": "Array of content types in order of detection",
        "date": "The date the event occurred at the edge",
        "datetime": "The date and time the event occurred at the edge",
        "datetimeFifteenMinutes": "The date and time the event occurred at the edge truncated to a multiple of 15 minutes",
        "datetimeFiveMinutes": "The date and time the event occurred at the edge truncated to a multiple of 5 minutes",
        "datetimeHour": "The date and time the event occurred at the edge truncated to hours",
        "datetimeMinute": "The date and time the event occurred at the edge truncated to the minute",
        "edgeColoName": "The airport code of the Cloudflare datacenter that served this request",
        "edgeResponseStatus": "HTTP response status code returned to browser",
        "httpApplication": "Unique identifier for HTTP Application",
        "httpApplicationVersion": "Version associated with HTTP Application",
        "ja3Hash": "MD5 hash of the JA3 TLS fingerprint",
        "kind": "The kind of event, currently only possible values are: firewall",
        "matchIndex": "Rules match index in the chain",
        "metadata": "Additional product-specific information. Metadata is organized in key:value pairs",
        "originResponseStatus": "HTTP origin response status code returned to browser",
        "originatorRayName": "The RayId of the request that issued the challenge/jschallenge",
        "rayName": "The RayId of the request",
        "ref": "The ref-field is a user-defined rule identifier that can be set via the API for some firewall products and allows users to label their rules individually alongside cloudflare provided identifiers (only available to entitled customers)",
        "ruleId": "The Cloudflare security product-specific RuleId triggered by this request",
        "rulesetId": "The Cloudflare security product-specific RulesetId triggered by this request",
        "sampleInterval": "ABR sample interval",
        "source": "The Cloudflare security product triggered by this request",
        "userAgent": "visitor's user-agent string",
        "wafAttackScore": "Beta. Overall request score generated by the WAF detection module",
        "wafMlAttackScore": "Beta. Overall request score generated by the WAF detection module",
        "wafMlSqliAttackScore": "Beta. WAF ML score for an SQLi attack",
        "wafMlXssAttackScore": "Beta. WAF ML score for an XSS attack",
        "wafRceAttackScore": "Beta. WAF score for a RCE attack",
        "wafSqliAttackScore": "Beta. WAF score for a SQLi attack",
        "wafXssAttackScore": "Beta. WAF score for a XSS attack"
    },
    "ZoneFirewallEventsAdaptiveByTimeGroups": {
        "avg": "The average value used for sample interval",
        "count": "The sum of sample interval values",
        "dimensions": "List of dimensions to group by"
    },
    "ZoneFirewallEventsAdaptiveByTimeGroupsAvg": {
        "sampleInterval": ""
    },
    "ZoneFirewallEventsAdaptiveByTimeGroupsDimensions": {
        "apiGatewayMatchedEndpoint": "API Gateway endpoint matched at the edge",
        "botScore": "The final score originated from bot management detections.",
        "botScoreSrcName": "Name of the source detection which generated the bot management score.",
        "date": "The date the event occurred at the edge",
        "datetime": "The date and time the event occurred at the edge",
        "datetimeFifteenMinutes": "The date and time the event occurred at the edge truncated to a multiple of 15 minutes",
        "datetimeFiveMinutes": "The date and time the event occurred at the edge truncated to a multiple of 5 minutes",
        "datetimeHour": "The date and time the event occurred at the edge truncated to hours",
        "datetimeMinute": "The date and time the event occurred at the edge truncated to the minute",
        "httpApplication": "Unique identifier for HTTP Application",
        "httpApplicationVersion": "Version associated with HTTP Application",
        "ja3Hash": "MD5 hash of the JA3 TLS fingerprint",
        "wafAttackScore": "Beta. Overall request score generated by the WAF detection module",
        "wafMlAttackScore": "Beta. Overall request score generated by the WAF ML detection module",
        "wafMlSqliAttackScore": "Beta. WAF ML score for an SQLi attack",
        "wafMlXssAttackScore": "Beta. WAF ML score for an XSS attack",
        "wafRceAttackScore": "Beta. WAF score for a RCE attack",
        "wafSqliAttackScore": "Beta. WAF score for a SQLi attack",
        "wafXssAttackScore": "Beta. WAF score for a XSS attack"
    },
    "ZoneFirewallEventsAdaptiveByTimeGroupsFilter_InputObject": {},
    "ZoneFirewallEventsAdaptiveByTimeGroupsOrderBy": {},
    "ZoneFirewallEventsAdaptiveFilter_InputObject": {},
    "ZoneFirewallEventsAdaptiveGroups": {
        "avg": "The average value used for sample interval",
        "count": "The sum of sample interval values",
        "dimensions": "List of dimensions to group by"
    },
    "ZoneFirewallEventsAdaptiveGroupsAvg": {
        "sampleInterval": ""
    },
    "ZoneFirewallEventsAdaptiveGroupsDimensions": {
        "action": "The code of the first-class action the Cloudflare Firewall took on this request",
        "apiGatewayMatchedEndpoint": "API Gateway endpoint matched at the edge",
        "botScore": "The final score originated from bot management detections.",
        "botScoreSrcName": "Name of the source detection which generated the bot management score.",
        "clientASNDescription": "The ASN of the visitor as string",
        "clientAsn": "The ASN number of the visitor",
        "clientCountryName": "Country from which request originated",
        "clientIP": "The visitor's IP address (IPv4 or IPv6)",
        "clientIPClass": "The classification of the visitor's IP address, possible values are: unknown | clean | badHost | searchEngine | allowlist | greylist | monitoringService | securityScanner | noRecord | scan | backupService | mobilePlatform | tor",
        "clientRefererHost": "The referer host",
        "clientRefererPath": "The referer path requested by visitor",
        "clientRefererQuery": "The referer query-string was requested by the visitor",
        "clientRefererScheme": "The referer url scheme requested by the visitor",
        "clientRequestHTTPHost": "The HTTP hostname requested by the visitor",
        "clientRequestHTTPMethodName": "The HTTP method used by the visitor",
        "clientRequestHTTPProtocol": "The version of HTTP protocol requested by the visitor",
        "clientRequestPath": "The path requested by visitor",
        "clientRequestQuery": "The query-string was requested by the visitor",
        "clientRequestScheme": "The url scheme requested by the visitor",
        "date": "The date the event occurred at the edge",
        "datetime": "The date and time the event occurred at the edge",
        "datetimeFifteenMinutes": "The date and time the event occurred at the edge truncated to a multiple of 15 minutes",
        "datetimeFiveMinutes": "The date and time the event occurred at the edge truncated to a multiple of 5 minutes",
        "datetimeHour": "The date and time the event occurred at the edge truncated to hours",
        "datetimeMinute": "The date and time the event occurred at the edge truncated to the minute",
        "edgeColoName": "The airport code of the Cloudflare datacenter that served this request",
        "edgeResponseStatus": "HTTP response status code returned to browser",
        "httpApplication": "Unique identifier for HTTP Application",
        "httpApplicationVersion": "Version associated with HTTP Application",
        "ja3Hash": "MD5 hash of the JA3 TLS fingerprint",
        "kind": "The kind of event, currently only possible values are: firewall",
        "matchIndex": "Rules match index in the chain",
        "originResponseStatus": "HTTP origin response status code returned to browser",
        "originatorRayName": "The RayId of the request that issued the challenge/jschallenge",
        "rayName": "The RayId of the request",
        "ref": "The ref-field is a user-defined rule identifier that can be set via the API for some firewall products and allows users to label their rules individually alongside cloudflare provided identifiers (only available to entitled customers)",
        "ruleId": "The Cloudflare security product-specific RuleId triggered by this request",
        "rulesetId": "The Cloudflare security product-specific RulesetId triggered by this request",
        "sampleInterval": "ABR sample interval",
        "source": "The Cloudflare security product triggered by this request",
        "userAgent": "visitor's user-agent string",
        "wafAttackScore": "Beta. Overall request score generated by the WAF detection module",
        "wafMlAttackScore": "Beta. Overall request score generated by the WAF ML detection module",
        "wafMlSqliAttackScore": "Beta. WAF ML score for an SQLi attack",
        "wafMlXssAttackScore": "Beta. WAF ML score for an XSS attack",
        "wafRceAttackScore": "Beta. WAF score for a RCE attack",
        "wafSqliAttackScore": "Beta. WAF score for a SQLi attack",
        "wafXssAttackScore": "Beta. WAF score for a XSS attack"
    },
    "ZoneFirewallEventsAdaptiveGroupsFilter_InputObject": {},
    "ZoneFirewallEventsAdaptiveGroupsOrderBy": {},
    "ZoneFirewallEventsAdaptiveMetadataElem": {
        "key": "The key of the metadata. Key format can vary by Cloudflare security product and can change over time.",
        "value": "The value of the metadata. Value format can vary by Cloudflare security product and can change over time."
    },
    "ZoneFirewallEventsAdaptiveOrderBy": {},
    "ZoneHealthCheckEventsAdaptive": {
        "datetime": "The date and time the event was written to the database",
        "eventId": "The event id that created this healthcheck event",
        "expectedResponseCodes": "The expected response codes for the health check",
        "failureReason": "Reason why the health check failed",
        "fqdn": "Fully qualified domain name of the origin (if available)",
        "healthChanged": "1 if the origin health status has changed since the last health check, 0 otherwise",
        "healthCheckId": "A unique identifier for the health check",
        "healthCheckName": "Human-identifiable health check name",
        "healthStatus": "Origin health status",
        "originIP": "IP address of the origin",
        "originResponseStatus": "HTTP status code returned by the origin",
        "region": "Region where the health check occurred",
        "rttMs": "RTT (milliseconds) to reach the origin",
        "sampleInterval": "ABR sample interval",
        "scope": "Geographic aggregation level of the health status",
        "tcpConnMs": "Time taken for the tcp connection to be established",
        "timeToFirstByteMs": "Time taken for the first byte to be received once connection is available",
        "tlsHandshakeMs": "Time taken for the tls handshake to be completed"
    },
    "ZoneHealthCheckEventsAdaptiveFilter_InputObject": {},
    "ZoneHealthCheckEventsAdaptiveGroups": {
        "avg": "The average value for a metric",
        "count": "The number of values for a metric per dimension",
        "dimensions": "List of dimensions to group by",
        "sum": "The sum of values for a metric per dimension"
    },
    "ZoneHealthCheckEventsAdaptiveGroupsAvg": {
        "rttMs": "Average RTT (milliseconds)",
        "sampleInterval": "Average sample interval",
        "tcpConnMs": "Average TCP Connection time (milliseconds)",
        "timeToFirstByteMs": "Average Time To First Byte (milliseconds)",
        "tlsHandshakeMs": "Average TLS Handshake time (milliseconds)"
    },
    "ZoneHealthCheckEventsAdaptiveGroupsDimensions": {
        "datetime": "Datetime the event was written to the database",
        "datetimeFifteenMinutes": "Datetime the event was written to the database truncated to a multiple of 15 minutes",
        "datetimeFiveMinutes": "Datetime the event was written to the database truncated to a multiple of 5 minutes",
        "datetimeHour": "Datetime the event was written to the database truncated to the hour",
        "datetimeMinute": "Datetime the event was written to the database truncated to the minute",
        "failureReason": "Reason why the health check failed",
        "fqdn": "Fully qualified domain name of the origin (if available)",
        "healthChanged": "1 if the origin health status has changed since the last health check, 0 otherwise",
        "healthCheckId": "A unique identifier for the health check",
        "healthCheckName": "Human-identifiable health check name",
        "healthStatus": "Origin health status",
        "originIP": "IP address of the origin",
        "originResponseStatus": "HTTP status code returned by the origin",
        "region": "Region where the health check occurred",
        "rttMs": "RTT (milliseconds) to reach the origin",
        "sampleInterval": "ABR sample interval",
        "scope": "Geographic aggregation level of the health status",
        "tcpConnMs": "Time taken for the tcp connection to be established",
        "timeToFirstByteMs": "Time taken for the first byte to be received once connection is available",
        "tlsHandshakeMs": "Time taken for the tls handshake to be completed"
    },
    "ZoneHealthCheckEventsAdaptiveGroupsFilter_InputObject": {},
    "ZoneHealthCheckEventsAdaptiveGroupsOrderBy": {},
    "ZoneHealthCheckEventsAdaptiveGroupsSum": {
        "healthStatus": ""
    },
    "ZoneHealthCheckEventsAdaptiveOrderBy": {},
    "ZoneHttpRequests1dByColoGroups": {
        "dimensions": "List of dimensions to group by",
        "sum": "The sum of values for a metric per dimension"
    },
    "ZoneHttpRequests1dByColoGroupsCountryMapElem": {
        "clientCountryName": "Country from which request originated",
        "requests": "",
        "threats": "Requests classified as threats"
    },
    "ZoneHttpRequests1dByColoGroupsDimensions": {
        "coloCode": "Code of edge server",
        "date": "Request date"
    },
    "ZoneHttpRequests1dByColoGroupsFilter_InputObject": {},
    "ZoneHttpRequests1dByColoGroupsOrderBy": {},
    "ZoneHttpRequests1dByColoGroupsResponseStatusMapElem": {
        "edgeResponseStatus": "HTTP response status code returned to client",
        "requests": ""
    },
    "ZoneHttpRequests1dByColoGroupsSum": {
        "bytes": "Bytes returned to client",
        "cachedBytes": "Bytes returned to client from cache",
        "cachedRequests": "Requests served from cache",
        "countryMap": "",
        "requests": "",
        "responseStatusMap": "",
        "threatPathingMap": ""
    },
    "ZoneHttpRequests1dByColoGroupsThreatPathingMapElem": {
        "requests": "",
        "threatPathingName": "Threat type"
    },
    "ZoneHttpRequests1dGroups": {
        "avg": "The average value for a metric per dimension",
        "dimensions": "List of dimensions to group by",
        "sum": "The sum of values for a metric per dimension",
        "uniq": "The number of unique values for a metric per dimension"
    },
    "ZoneHttpRequests1dGroupsAvg": {
        "bytes": "",
        "sampleInterval": "Average sample interval"
    },
    "ZoneHttpRequests1dGroupsBrowserMapElem": {
        "pageViews": "Successful requests for HTML content",
        "uaBrowserFamily": "Browser type"
    },
    "ZoneHttpRequests1dGroupsClientHTTPVersionMapElem": {
        "clientHTTPProtocol": "HTTP version",
        "requests": ""
    },
    "ZoneHttpRequests1dGroupsClientSSLMapElem": {
        "clientSSLProtocol": "Protocol version",
        "requests": ""
    },
    "ZoneHttpRequests1dGroupsContentTypeMapElem": {
        "bytes": "Bytes returned to client",
        "edgeResponseContentTypeName": "Content type returned to client",
        "requests": ""
    },
    "ZoneHttpRequests1dGroupsCountryMapElem": {
        "bytes": "Bytes returned to client",
        "clientCountryName": "Country from which request originated",
        "requests": "",
        "threats": "Requests classified as threats"
    },
    "ZoneHttpRequests1dGroupsDimensions": {
        "date": "Request date"
    },
    "ZoneHttpRequests1dGroupsFilter_InputObject": {},
    "ZoneHttpRequests1dGroupsIpClassMapElem": {
        "ipType": "IP class",
        "requests": ""
    },
    "ZoneHttpRequests1dGroupsOrderBy": {},
    "ZoneHttpRequests1dGroupsResponseStatusMapElem": {
        "edgeResponseStatus": "HTTP response status code returned to client",
        "requests": ""
    },
    "ZoneHttpRequests1dGroupsSum": {
        "browserMap": "",
        "bytes": "Bytes returned to client",
        "cachedBytes": "Bytes returned to client from cache",
        "cachedRequests": "Requests served from cache",
        "clientHTTPVersionMap": "",
        "clientSSLMap": "",
        "contentTypeMap": "",
        "countryMap": "",
        "encryptedBytes": "Bytes returned to client using SSL/TLS protocol",
        "encryptedRequests": "Requests served using SSL/TLS protocol",
        "ipClassMap": "",
        "pageViews": "Successful requests for HTML content",
        "requests": "",
        "responseStatusMap": "",
        "threatPathingMap": "",
        "threats": "Requests classified as threats"
    },
    "ZoneHttpRequests1dGroupsThreatPathingMapElem": {
        "requests": "",
        "threatPathingName": "Threat type"
    },
    "ZoneHttpRequests1dGroupsUniq": {
        "uniques": "A number of unique IPs"
    },
    "ZoneHttpRequests1hGroups": {
        "avg": "The average value for a metric per dimension",
        "dimensions": "List of dimensions to group by",
        "sum": "The sum of values for a metric per dimension",
        "uniq": "The number of unique values for a metric per dimension"
    },
    "ZoneHttpRequests1hGroupsAvg": {
        "bytes": "",
        "sampleInterval": "Average sample interval"
    },
    "ZoneHttpRequests1hGroupsBrowserMapElem": {
        "pageViews": "Successful requests for HTML content",
        "uaBrowserFamily": "Browser type"
    },
    "ZoneHttpRequests1hGroupsClientHTTPVersionMapElem": {
        "clientHTTPProtocol": "HTTP version",
        "requests": ""
    },
    "ZoneHttpRequests1hGroupsClientSSLMapElem": {
        "clientSSLProtocol": "Protocol version",
        "requests": ""
    },
    "ZoneHttpRequests1hGroupsContentTypeMapElem": {
        "bytes": "Bytes returned to client",
        "edgeResponseContentTypeName": "Content type returned to client",
        "requests": ""
    },
    "ZoneHttpRequests1hGroupsCountryMapElem": {
        "bytes": "Bytes returned to client",
        "clientCountryName": "Country from which request originated",
        "requests": "",
        "threats": "Requests classified as threats"
    },
    "ZoneHttpRequests1hGroupsDimensions": {
        "date": "Request date",
        "datetime": "Request datetime truncated to the hour"
    },
    "ZoneHttpRequests1hGroupsFilter_InputObject": {},
    "ZoneHttpRequests1hGroupsIpClassMapElem": {
        "ipType": "IP class",
        "requests": ""
    },
    "ZoneHttpRequests1hGroupsOrderBy": {},
    "ZoneHttpRequests1hGroupsResponseStatusMapElem": {
        "edgeResponseStatus": "HTTP response status code returned to client",
        "requests": ""
    },
    "ZoneHttpRequests1hGroupsSum": {
        "browserMap": "",
        "bytes": "Bytes returned to client",
        "cachedBytes": "Bytes returned to client from cache",
        "cachedRequests": "Requests served from cache",
        "clientHTTPVersionMap": "",
        "clientSSLMap": "",
        "contentTypeMap": "",
        "countryMap": "",
        "encryptedBytes": "Bytes returned to client using SSL/TLS protocol",
        "encryptedRequests": "Requests served using SSL/TLS protocol",
        "ipClassMap": "",
        "pageViews": "Successful requests for HTML content",
        "requests": "",
        "responseStatusMap": "",
        "threatPathingMap": "",
        "threats": "Requests classified as threats"
    },
    "ZoneHttpRequests1hGroupsThreatPathingMapElem": {
        "requests": "",
        "threatPathingName": "Threat type"
    },
    "ZoneHttpRequests1hGroupsUniq": {
        "uniques": "A number of unique IPs"
    },
    "ZoneHttpRequests1mByColoGroups": {
        "dimensions": "List of dimensions to group by",
        "sum": "The sum of values for a metric per dimension"
    },
    "ZoneHttpRequests1mByColoGroupsCountryMapElem": {
        "clientCountryName": "Country from which request originated",
        "requests": "",
        "threats": "Requests classified as threats"
    },
    "ZoneHttpRequests1mByColoGroupsDimensions": {
        "coloCode": "Code of edge server",
        "date": "Request date",
        "datetime": "Request datetime",
        "datetimeFifteenMinutes": "Request datetime truncated to multiple of 15 minutes",
        "datetimeHalfOfHour": "Request datetime truncated to multiple of 30 minutes",
        "datetimeHour": "Request datetime truncated to the hour"
    },
    "ZoneHttpRequests1mByColoGroupsFilter_InputObject": {},
    "ZoneHttpRequests1mByColoGroupsOrderBy": {},
    "ZoneHttpRequests1mByColoGroupsResponseStatusMapElem": {
        "edgeResponseStatus": "HTTP response status code returned to client",
        "requests": ""
    },
    "ZoneHttpRequests1mByColoGroupsSum": {
        "bytes": "Bytes returned to client",
        "cachedBytes": "Bytes returned to client from cache",
        "cachedRequests": "Requests served from cache",
        "countryMap": "",
        "requests": "",
        "responseStatusMap": "",
        "threatPathingMap": ""
    },
    "ZoneHttpRequests1mByColoGroupsThreatPathingMapElem": {
        "requests": "",
        "threatPathingName": "Threat type"
    },
    "ZoneHttpRequests1mGroups": {
        "avg": "The average value for a metric per dimension",
        "dimensions": "List of dimensions to group by",
        "sum": "The sum of values for a metric per dimension",
        "uniq": "The number of unique values for a metric per dimension"
    },
    "ZoneHttpRequests1mGroupsAvg": {
        "bytes": "",
        "sampleInterval": "Average sample interval"
    },
    "ZoneHttpRequests1mGroupsBrowserMapElem": {
        "pageViews": "Successful requests for HTML content",
        "uaBrowserFamily": "Browser type"
    },
    "ZoneHttpRequests1mGroupsClientHTTPVersionMapElem": {
        "clientHTTPProtocol": "HTTP version",
        "requests": ""
    },
    "ZoneHttpRequests1mGroupsClientSSLMapElem": {
        "clientSSLProtocol": "Protocol version",
        "requests": ""
    },
    "ZoneHttpRequests1mGroupsContentTypeMapElem": {
        "bytes": "Bytes returned to client",
        "edgeResponseContentTypeName": "Content type returned to client",
        "requests": ""
    },
    "ZoneHttpRequests1mGroupsCountryMapElem": {
        "bytes": "Bytes returned to client",
        "clientCountryName": "Country from which request originated",
        "requests": "",
        "threats": "Requests classified as threats"
    },
    "ZoneHttpRequests1mGroupsDimensions": {
        "date": "Request date",
        "datetime": "Request datetime, truncated to the minute",
        "datetimeDay": "Request datetime truncated to the day",
        "datetimeFifteenMinutes": "Request datetime truncated to multiple of 15 minutes",
        "datetimeFiveMinutes": "Request datetime truncated to multiple of 5 minutes",
        "datetimeHalfOfHour": "Request datetime truncated to multiple of 30 minutes",
        "datetimeHour": "Request datetime truncated to the hour",
        "datetimeMinute": "Request datetime truncated to the minute"
    },
    "ZoneHttpRequests1mGroupsFilter_InputObject": {},
    "ZoneHttpRequests1mGroupsIpClassMapElem": {
        "ipType": "IP class",
        "requests": ""
    },
    "ZoneHttpRequests1mGroupsOrderBy": {},
    "ZoneHttpRequests1mGroupsResponseStatusMapElem": {
        "edgeResponseStatus": "HTTP response status code returned to client",
        "requests": ""
    },
    "ZoneHttpRequests1mGroupsSum": {
        "browserMap": "",
        "bytes": "Bytes returned to client",
        "cachedBytes": "Bytes returned to client from cache",
        "cachedRequests": "Requests served from cache",
        "clientHTTPVersionMap": "",
        "clientSSLMap": "",
        "contentTypeMap": "",
        "countryMap": "",
        "encryptedBytes": "Bytes returned to client using SSL/TLS protocol",
        "encryptedRequests": "Requests served using SSL/TLS protocol",
        "ipClassMap": "",
        "pageViews": "Successful requests for HTML content",
        "requests": "",
        "responseStatusMap": "",
        "threatPathingMap": "",
        "threats": "Requests classified as threats"
    },
    "ZoneHttpRequests1mGroupsThreatPathingMapElem": {
        "requests": "",
        "threatPathingName": "Threat type"
    },
    "ZoneHttpRequests1mGroupsUniq": {
        "uniques": "A number of unique IPs"
    },
    "ZoneHttpRequestsAdaptive": {
        "apiGatewayMatchedEndpoint": "API Gateway endpoint matched at the edge",
        "botManagementDecision": "Judgement of the bot management system",
        "botScore": "The final score originated from bot management detections.",
        "botScoreBucketBy10": "Range of the bot management score",
        "botScoreSrcName": "Name of the source detection which generated the bot management score.",
        "cacheStatus": "Cache status",
        "clientASNDescription": "The ASN of the visitor as string",
        "clientAsn": "The ASN number of the visitor",
        "clientCountryName": "Country from which request originated",
        "clientDeviceType": "",
        "clientIP": "The visitor's IP address (IPv4 or IPv6)",
        "clientRefererHost": "The referrer host",
        "clientRequestHTTPHost": "The HTTP hostname requested by the visitor",
        "clientRequestHTTPMethodName": "HTTP method of client request",
        "clientRequestHTTPProtocol": "The version of HTTP protocol requested by the visitor",
        "clientRequestPath": "The path requested by visitor",
        "clientRequestQuery": "Query parameters of client request",
        "clientRequestReferer": "HTTP request referrer",
        "clientRequestScheme": "The url scheme requested by the visitor",
        "clientSSLProtocol": "SSL protocol version",
        "coloCode": "",
        "contentScanHasFailed": "1 if not all contents for this request where successfully scanned, else 0",
        "contentScanNumMaliciousObj": "Number of scannable content objects that are malicious",
        "contentScanNumObj": "Number of scannable content objects",
        "date": "The date the event occurred at the edge",
        "datetime": "The date and time the event occurred at the edge",
        "datetimeFifteenMinutes": "The date and time the event occurred at the edge truncated to a multiple of 15 minutes",
        "datetimeFiveMinutes": "The date and time the event occurred at the edge truncated to a multiple of 5 minutes",
        "datetimeHour": "The date and time the event occurred at the edge truncated to hours",
        "datetimeMinute": "The date and time the event occurred at the edge truncated to the minute",
        "edgeResponseContentTypeName": "",
        "edgeResponseStatus": "HTTP response status code returned to browser",
        "httpApplication": "Unique identifier for HTTP Application",
        "httpApplicationVersion": "Version associated with HTTP Application",
        "ja3Hash": "MD5 hash of the JA3 TLS fingerprint",
        "originASN": "",
        "originASNDescription": "ASN associated with origin",
        "originIP": "",
        "originResponseStatus": "HTTP origin response status code returned to browser",
        "requestSource": "",
        "upperTierColoName": "",
        "userAgent": "visitor's user-agent string",
        "userAgentBrowser": "Browser parsed from the user agent",
        "userAgentOS": "OS parsed from the user agent",
        "wafAttackScore": "Beta. Overall request score generated by the WAF detection module",
        "wafRceAttackScore": "Beta. WAF score for a RCE attack",
        "wafSqliAttackScore": "Beta. WAF score for a SQLi attack",
        "wafXssAttackScore": "Beta. WAF score for a XSS attack",
        "xRequestedWith": "The X-Requested-With header of the client request"
    },
    "ZoneHttpRequestsAdaptiveFilter_InputObject": {},
    "ZoneHttpRequestsAdaptiveGroups": {
        "avg": "The average value used for sample interval",
        "count": "The number of values for a metric per dimension",
        "dimensions": "List of dimensions to group by",
        "ratio": "The ratio of a range of status codes, between 0 and 1",
        "sum": "The sum of values for a metric per dimension"
    },
    "ZoneHttpRequestsAdaptiveGroupsAvg": {
        "originResponseDurationMs": "The average originResponseDuration, in milliseconds, excluding 0 values (i.e. cached ones)",
        "sampleInterval": ""
    },
    "ZoneHttpRequestsAdaptiveGroupsDimensions": {
        "apiGatewayMatchedEndpoint": "API Gateway endpoint matched at the edge",
        "botManagementDecision": "Judgement of the bot management system",
        "botScore": "The final score originated from bot management detections.",
        "botScoreBucketBy10": "Range of the bot management score",
        "botScoreSrcName": "Name of the source detection which generated the bot management score.",
        "cacheStatus": "",
        "clientASNDescription": "The ASN of the visitor as string",
        "clientAsn": "",
        "clientCountryName": "Country from which request originated",
        "clientDeviceType": "",
        "clientIP": "",
        "clientRefererHost": "The referrer host",
        "clientRequestHTTPHost": "Host requested by the client",
        "clientRequestHTTPMethodName": "HTTP method of client request",
        "clientRequestHTTPProtocol": "HTTP protocol version",
        "clientRequestPath": "Path of client request",
        "clientRequestQuery": "Query parameters of client request",
        "clientRequestReferer": "HTTP request referrer",
        "clientRequestScheme": "HTTP request URI scheme (http/https)",
        "clientSSLProtocol": "SSL protocol version",
        "coloCode": "",
        "contentScanHasFailed": "1 if not all contents for this request where successfully scanned, else 0",
        "contentScanNumMaliciousObj": "Number of scannable content objects that are malicious",
        "contentScanNumObj": "Number of scannable content objects",
        "date": "The date the event occurred at the edge",
        "datetime": "The date and time the event occurred at the edge",
        "datetimeFifteenMinutes": "The date and time the event occurred at the edge truncated to a multiple of 15 minutes",
        "datetimeFiveMinutes": "The date and time the event occurred at the edge truncated to a multiple of 5 minutes",
        "datetimeHour": "The date and time the event occurred at the edge truncated to hours",
        "datetimeMinute": "The date and time the event occurred at the edge truncated to the minute",
        "edgeResponseContentTypeName": "",
        "edgeResponseStatus": "",
        "httpApplication": "Unique identifier for HTTP Application",
        "httpApplicationVersion": "Version associated with HTTP Application",
        "ja3Hash": "MD5 hash of the JA3 TLS fingerprint",
        "originASN": "",
        "originASNDescription": "ASN associated with origin",
        "originIP": "",
        "originResponseStatus": "HTTP response status code returned by the origin",
        "requestSource": "",
        "sampleInterval": "ABR sample interval",
        "upperTierColoName": "",
        "userAgent": "",
        "userAgentBrowser": "Browser parsed from the user agent",
        "userAgentOS": "OS parsed from the user agent",
        "wafAttackScore": "Beta. Overall request score generated by the WAF detection module",
        "wafRceAttackScore": "Beta. WAF score for a RCE attack",
        "wafSqliAttackScore": "Beta. WAF score for a SQLi attack",
        "wafXssAttackScore": "Beta. WAF score for a XSS attack",
        "xRequestedWith": "The X-Requested-With header of the client request"
    },
    "ZoneHttpRequestsAdaptiveGroupsFilter_InputObject": {},
    "ZoneHttpRequestsAdaptiveGroupsOrderBy": {},
    "ZoneHttpRequestsAdaptiveGroupsRatio": {
        "status4xx": "",
        "status5xx": ""
    },
    "ZoneHttpRequestsAdaptiveGroupsSum": {
        "edgeResponseBytes": "",
        "visits": "The number of requests by end-users that were initiated from a different website (i.e. where the request HTTP Referer header does not match the host in the HTTP Host header)"
    },
    "ZoneHttpRequestsAdaptiveOrderBy": {},
    "ZoneHttpRequestsOverviewAdaptiveGroups": {
        "avg": "The average value for a metric per dimension",
        "dimensions": "List of dimensions to group by",
        "ratio": "The ratio of a range of status codes, between 0 and 1",
        "sum": "The sum of values for a metric per dimension"
    },
    "ZoneHttpRequestsOverviewAdaptiveGroupsAvg": {
        "originResponseDurationMs": "The average originResponseDuration, in milliseconds, excluding 0 values (i.e. cached ones)",
        "sampleInterval": "Average sample interval"
    },
    "ZoneHttpRequestsOverviewAdaptiveGroupsDimensions": {
        "clientCountryName": "Country from which request originated",
        "clientRequestHTTPProtocol": "HTTP protocol version",
        "clientSSLProtocol": "SSL protocol version",
        "date": "The date the event occurred at the edge",
        "datetime": "The date and time the event occurred at the edge",
        "datetimeFifteenMinutes": "The date and time the event occurred at the edge truncated to a multiple of 15 minutes",
        "datetimeFiveMinutes": "The date and time the event occurred at the edge truncated to a multiple of 5 minutes",
        "datetimeHour": "The date and time the event occurred at the edge truncated to hours",
        "datetimeMinute": "The date and time the event occurred at the edge truncated to the minute",
        "edgeResponseContentTypeName": "Content type returned to client",
        "edgeResponseStatus": "HTTP response status code returned to client",
        "httpApplication": "Unique identifier for HTTP Application",
        "httpApplicationVersion": "Version associated with HTTP Application",
        "userAgentBrowser": "Browser parsed from the user agent"
    },
    "ZoneHttpRequestsOverviewAdaptiveGroupsFilter_InputObject": {},
    "ZoneHttpRequestsOverviewAdaptiveGroupsOrderBy": {},
    "ZoneHttpRequestsOverviewAdaptiveGroupsRatio": {
        "status4xx": "",
        "status5xx": ""
    },
    "ZoneHttpRequestsOverviewAdaptiveGroupsSum": {
        "bytes": "",
        "cachedBytes": "Bytes returned to client from cache",
        "cachedRequests": "Requests served from cache",
        "pageViews": "Successful requests for HTML content",
        "requests": "",
        "visits": "The number of requests by end-users that were initiated from a different website (i.e. where the request HTTP Referer header does not match the host in the HTTP Host header)"
    },
    "ZoneImageResizingRequests1mGroups": {
        "count": "Counts a number of rows per specific dimensions",
        "dimensions": "List of dimensions to group by",
        "sum": "Calculates a sum of each field per speicific dimensions"
    },
    "ZoneImageResizingRequests1mGroupsDimensions": {
        "contentType": "",
        "date": "",
        "datetime": "",
        "datetimeFifteenMinutes": "",
        "datetimeFiveMinutes": "",
        "datetimeHour": "",
        "datetimeMinute": "",
        "resizeError": "Error description when a resized image was requested but could not be served"
    },
    "ZoneImageResizingRequests1mGroupsFilter_InputObject": {},
    "ZoneImageResizingRequests1mGroupsOrderBy": {},
    "ZoneImageResizingRequests1mGroupsSum": {
        "originalBytes": "The size of the image before resizing",
        "originalPixels": "The area of the image before resizing",
        "requests": "Count of image resizing requests",
        "resizedBytes": "The size of the image after resizing",
        "resizedPixels": "The area of the image after resizing"
    },
    "ZoneLoadBalancingRequestsAdaptive": {
        "coloCode": "IATA airport code of data center that received the request",
        "datetime": "Request datetime",
        "errorType": "Error generated when selecting an origin",
        "lbName": "Load balancer name",
        "numberOriginsSelected": "Number of origins that were selected and returned to the client",
        "origins": "All origins in the pool that was selected based on steering policy",
        "pools": "List of pools from which a pool will be selected based on steering policy",
        "proxied": "Whether traffic is proxied through the Cloudflare network (orange-clouded)",
        "region": "Load balancing region where request originated",
        "sampleInterval": "ABR sample interval",
        "selectedOriginIndex": "Index of the selected origin from the list of all origins. If multiple origins were selected, this is the index of the first origin in that list",
        "selectedPoolAvgRttMs": "Average RTT (milliseconds) to reach the origins within the selected pool",
        "selectedPoolHealthChecksEnabled": "Health checks active status for the selected pool",
        "selectedPoolHealthy": "Health status for the selected pool",
        "selectedPoolId": "A unique identifier for the selected pool",
        "selectedPoolIndex": "Index of the selected pool from the list of all pools",
        "selectedPoolName": "Name for the selected pool",
        "sessionAffinity": "Type of session affinity enabled",
        "sessionAffinityStatus": "Current status of session affinity",
        "steeringPolicy": "Policy by which the load balancer will route traffic"
    },
    "ZoneLoadBalancingRequestsAdaptiveFilter_InputObject": {},
    "ZoneLoadBalancingRequestsAdaptiveGroups": {
        "avg": "",
        "count": "The number of values for a metric per dimension",
        "dimensions": "List of dimensions to group by"
    },
    "ZoneLoadBalancingRequestsAdaptiveGroupsAvg": {
        "sampleInterval": "Average sample interval"
    },
    "ZoneLoadBalancingRequestsAdaptiveGroupsDimensions": {
        "coloCode": "IATA airport code of data center that received the request",
        "datetime": "Request datetime",
        "datetimeFifteenMinutes": "Request datetime truncated to multiple of 15 minutes",
        "datetimeFiveMinutes": "Request datetime truncated to multiple of 5 minutes",
        "datetimeHalfOfHour": "Request datetime truncated to multiple of 30 minutes",
        "datetimeHour": "Request datetime truncated to the hour",
        "datetimeMinute": "Request datetime truncated to multiple of 1 minute",
        "errorType": "Error generated when selecting an origin",
        "lbName": "Load balancer name",
        "multipleOriginsSelected": "Indicates whether multiple origins were returned to the client",
        "numberOriginsSelected": "Number of origins that were selected and returned to the client",
        "proxied": "Whether traffic is proxied through the Cloudflare network (orange-clouded)",
        "region": "Load balancing region where request originated",
        "sampleInterval": "ABR sample interval",
        "selectedOriginIndex": "Index of the selected origin from the list of all origins. If multiple origins were selected, this is the index of the first origin in that list",
        "selectedOriginName": "Name of the selected origin",
        "selectedOriginNames": "Names of each selected origin",
        "selectedPoolAvgRttMs": "Dynamic Latency: RTT (milliseconds) to reach the origin pool",
        "selectedPoolHealthChecksEnabled": "Health checks status for the selected pool",
        "selectedPoolHealthy": "Health status for the selected pool",
        "selectedPoolId": "A unique identifier for the selected pool",
        "selectedPoolIndex": "Index of the selected pool from the list of all pools",
        "selectedPoolName": "Name for the selected pool",
        "sessionAffinityEnabled": "Type of session affinity enabled",
        "sessionAffinityStatus": "Current status of session affinity",
        "steeringPolicy": "Policy by which the load balancer will route traffic"
    },
    "ZoneLoadBalancingRequestsAdaptiveGroupsFilter_InputObject": {},
    "ZoneLoadBalancingRequestsAdaptiveGroupsOrderBy": {},
    "ZoneLoadBalancingRequestsAdaptiveOrderBy": {},
    "ZoneLoadBalancingRequestsAdaptiveOriginsElem": {
        "fqdn": "Fully qualified domain name of the origin (if available)",
        "health": "Origin health status",
        "ipv4": "IPv4 Address of the origin",
        "ipv6": "IPv6 address of the origin",
        "originName": "Origin name",
        "selected": "All the origins that were returned to the client",
        "weight": "Ratio of traffic that will be distributed to this origin among all origins in the pool"
    },
    "ZoneLoadBalancingRequestsAdaptivePoolsElem": {
        "avgRttMs": "Dynamic Latency: RTT (milliseconds) to reach the origin pool",
        "distance": "Distance to Pool KM",
        "healthCheckEnabled": "Health checks status",
        "healthy": "Pool health status",
        "id": "A unique identifier for the pool",
        "poolName": "Pool name"
    },
    "ZoneLogpushHealthAdaptiveGroups": {
        "avg": "",
        "count": "The number of values for a metric per dimension",
        "dimensions": "List of dimensions to group by",
        "sum": "The sum of values for a metric per dimension"
    },
    "ZoneLogpushHealthAdaptiveGroupsAvg": {
        "sampleInterval": "Average sample interval"
    },
    "ZoneLogpushHealthAdaptiveGroupsDimensions": {
        "date": "Date that we completed pushing the log batch",
        "datetime": "Datetime that we completed pushing the log batch",
        "datetimeFifteenMinutes": "Datetime that we completed pushing the log batch, truncated to multiple of 15 minutes",
        "datetimeFiveMinutes": "Datetime that we completed pushing the log batch, truncated to multiple of 5 minutes",
        "datetimeHour": "Datetime that we completed pushing the log batch, truncated to the hour",
        "datetimeMinute": "Datetime that we completed pushing the log batch, truncated to the minute",
        "destinationType": "Destination type, e.g. 'S3' or 'GCS'",
        "final": "Cloudflare may attempt to push a batch of logs multiple times if we encounter a failure. This field will be set to 'true' if this was the last push attempt for this batch of logs. If this field is set to false, it means the push failed but another retry was attempted. If this field is set to true and status >= 300, then the batch of logs failed to push and log data was lost. If you want to count the total number of logs that succeeded or failed, you should always set final = true.",
        "jobId": "The Logpush Job ID",
        "status": "HTTP response status code of the log destination"
    },
    "ZoneLogpushHealthAdaptiveGroupsFilter_InputObject": {},
    "ZoneLogpushHealthAdaptiveGroupsOrderBy": {},
    "ZoneLogpushHealthAdaptiveGroupsSum": {
        "bytes": "Bytes of uncompressed log data pushed",
        "bytesCompressed": "Bytes of compressed log data pushed",
        "records": "A count of the total number of records pushed."
    },
    "ZoneNelReportsAdaptiveGroups": {
        "avg": "",
        "count": "The number of NEL Reports",
        "dimensions": "List of dimensions to group by"
    },
    "ZoneNelReportsAdaptiveGroupsAvg": {
        "sampleInterval": "Average sample interval"
    },
    "ZoneNelReportsAdaptiveGroupsDimensions": {
        "clientIPASN": "Client ASN",
        "clientIPASNDescription": "Client ASN Description",
        "clientIPCountry": "Client Country",
        "clientIPCountryCode": "2 letter client country code using ISO 3166-1 alpha-2 syntax",
        "clientIPVersion": "IP Version the client used to connect",
        "date": "Request date from browser",
        "datetime": "Request datetime from browser",
        "datetimeFifteenMinutes": "Request datetime from browser, truncated to multiple of 15 minutes",
        "datetimeFiveMinutes": "Request datetime from browser, truncated to multiple of 5 minutes",
        "datetimeHalfOfHour": "Request datetime from browser, truncated to multiple of 30 minutes",
        "datetimeHour": "Request datetime from browser, truncated to the hour",
        "datetimeMinute": "Request datetime from browser, truncated to the minute",
        "lastKnownGoodColoCode": "IATA airport code of colo the client connected to",
        "phase": "The phase of connection the error occurred in",
        "protocol": "HTTP Protocol used when the error occured",
        "type": "The type of error in the phase"
    },
    "ZoneNelReportsAdaptiveGroupsFilter_InputObject": {},
    "ZoneNelReportsAdaptiveGroupsOrderBy": {},
    "ZoneSettings": {
        "apiRequestSequencesGroups": "",
        "cacheReserveOperationsAdaptiveGroups": "",
        "cacheReserveStorageAdaptiveGroups": "",
        "emailRoutingAdaptive": "",
        "emailRoutingAdaptiveGroups": "",
        "firewallEventsAdaptive": "",
        "firewallEventsAdaptiveByTimeGroups": "",
        "firewallEventsAdaptiveGroups": "",
        "healthCheckEventsAdaptive": "",
        "healthCheckEventsAdaptiveGroups": "",
        "httpRequests1dByColoGroups": "",
        "httpRequests1dGroups": "",
        "httpRequests1hGroups": "",
        "httpRequests1mByColoGroups": "",
        "httpRequests1mGroups": "",
        "httpRequestsAdaptive": "",
        "httpRequestsAdaptiveGroups": "",
        "httpRequestsOverviewAdaptiveGroups": "",
        "imageResizingRequests1mGroups": "",
        "loadBalancingRequestsAdaptive": "",
        "loadBalancingRequestsAdaptiveGroups": "",
        "logpushHealthAdaptiveGroups": "",
        "nelReportsAdaptiveGroups": "",
        "synAvgPps1mGroups": "",
        "waitingRoomAnalyticsAdaptive": "",
        "waitingRoomAnalyticsAdaptiveGroups": "",
        "workersZoneInvocationsAdaptiveGroups": "",
        "workersZoneSubrequestsAdaptiveGroups": "",
        "zarazActionsAdaptiveGroups": "",
        "zarazTrackAdaptiveGroups": "",
        "zarazTriggersAdaptiveGroups": ""
    },
    "ZoneSynAvgPps1mGroups": {
        "count": "Counts a number of rows per specific dimensions",
        "dimensions": "List of dimensions to group by",
        "sum": "Calculates a sum of each field per speicific dimensions"
    },
    "ZoneSynAvgPps1mGroupsDimensions": {
        "date": "Date of this record.",
        "datetimeDay": "Specific minute for which we gathered samples truncated to a multiple of a day.",
        "datetimeFifteenMinutes": "Specific minute for which we gathered samples truncated to a multiple of 15 minutes.",
        "datetimeFiveMinutes": "Specific minute for which we gathered samples truncated to a multiple of 5 minutes.",
        "datetimeHour": "Specific minute for which we gathered samples truncated to a multiple of an hour.",
        "datetimeMinute": "Specific minute for which we gathered samples."
    },
    "ZoneSynAvgPps1mGroupsFilter_InputObject": {},
    "ZoneSynAvgPps1mGroupsOrderBy": {},
    "ZoneSynAvgPps1mGroupsSum": {
        "avgPpsPerMinute": "Avg packets per second for this minute."
    },
    "ZoneWaitingRoomAnalyticsAdaptive": {
        "datetime": "The date and time of the state of analytics for the waiting room",
        "maxEstimatedTimeMinutes": "Maximum value of estimated time in minutes",
        "newUsersPerMinute": "Actual value of new users per minute",
        "newUsersPerMinuteConfig": "Configured value of new users per minute",
        "sampleInterval": "ABR sample interval",
        "sessionDuration": "Configured value of session duration",
        "timeBetweenRefreshesP50": "50th percentile of the time between session refreshes in seconds",
        "timeBetweenRefreshesP75": "75th percentile of the time between session refreshes in seconds",
        "timeBetweenRefreshesP90": "90th percentile of the time between session refreshes in seconds",
        "timeBetweenRefreshesP95": "95th percentile of the time between session refreshes in seconds",
        "timeInQueueP50": "50th percentile of the time spent waiting in queue in seconds",
        "timeInQueueP75": "75th percentile of the time spent waiting in queue in seconds",
        "timeInQueueP90": "90th percentile of the time spent waiting in queue in seconds",
        "timeInQueueP95": "95th percentile of the time spent waiting in queue in seconds",
        "timeOnOriginP50": "50th percentile of the time spent on the origin in seconds",
        "timeOnOriginP75": "75th percentile of the time spent on the origin in seconds",
        "timeOnOriginP90": "90th percentile of the time spent on the origin in seconds",
        "timeOnOriginP95": "95th percentile of the time spent on the origin in seconds",
        "totalActiveUsers": "Actual value of total active users",
        "totalActiveUsersConfig": "Configured value of total active users",
        "totalQueuedUsers": "Total number of users that are queued",
        "totalTimeWaitedP50": "50th percentile of the total time (in seconds) spent waiting in queue by users who were queued and then gained access to the origin",
        "totalTimeWaitedP75": "75th percentile of the total time (in seconds) spent waiting in queue by users who were queued and then gained access to the origin",
        "totalTimeWaitedP90": "90th percentile of the total time (in seconds) spent waiting in queue by users who were queued and then gained access to the origin",
        "totalTimeWaitedP95": "95th percentile of the total time (in seconds) spent waiting in queue by users who were queued and then gained access to the origin",
        "waitingRoomId": "Unique Identifier for the waiting room",
        "waitingRoomName": "Name of the waiting room"
    },
    "ZoneWaitingRoomAnalyticsAdaptiveFilter_InputObject": {},
    "ZoneWaitingRoomAnalyticsAdaptiveGroups": {
        "avg": "Beta. The avg of values for a metric per dimension",
        "avgWeighted": "Beta. The avgWeighted values for a metric per dimension",
        "dimensions": "List of dimensions to group by",
        "max": "Beta. The max value for a metric per dimenstion",
        "min": "Beta. The minimum value for a metric per dimenstion"
    },
    "ZoneWaitingRoomAnalyticsAdaptiveGroupsAvg": {
        "maxEstimatedTimeMinutes": "Average of the maximum estimated wait time per minute. A negative number means no data",
        "newUsersPerMinute": "Average rate of new users per minute. A negative number means no data",
        "newUsersPerMinuteConfig": "Configured value of new users per minute. A negative number means no data",
        "sampleInterval": "Average sample interval",
        "sessionDuration": "Configured value of session duration. A negative number means no data",
        "totalActiveUsers": "Average rate of total active users. A negative number means no data",
        "totalActiveUsersConfig": "Configured value of total active users. A negative number means no data",
        "totalQueuedUsers": "Average of total queued users"
    },
    "ZoneWaitingRoomAnalyticsAdaptiveGroupsAvgWeighted": {
        "timeBetweenRefreshesP50": "Weighted average of 50th percentile of time spent between session refreshes in seconds. A negative number means no data",
        "timeBetweenRefreshesP75": "Weighted average of 75th percentile of time spent between session refreshes in seconds. A negative number means no data",
        "timeBetweenRefreshesP90": "Weighted average of 90th percentile of time spent between session refreshes in seconds. A negative number means no data",
        "timeBetweenRefreshesP95": "Weighted average of 95th percentile of time spent between session refreshes in seconds. A negative number means no data",
        "timeInQueueP50": "Weighted average of 50th percentile of time spent in queue in seconds. A negative number means no data",
        "timeInQueueP75": "Weighted average of 75th percentile of time spent in queue in seconds. A negative number means no data",
        "timeInQueueP90": "Weighted average of 90th percentile of time spent in queue in seconds. A negative number means no data",
        "timeInQueueP95": "Weighted average of 95th percentile of time spent in queue in seconds. A negative number means no data",
        "timeOnOriginP50": "Weighted average of 50th percentile of time spent on origin in seconds. A negative number means no data",
        "timeOnOriginP75": "Weighted average of 75th percentile of time spent on origin in seconds. A negative number means no data",
        "timeOnOriginP90": "Weighted average of 90th percentile of time spent on origin in seconds. A negative number means no data",
        "timeOnOriginP95": "Weighted average of 95th percentile of time spent on origin in seconds. A negative number means no data",
        "totalTimeWaitedP50": "Weighted average of 50th percentile of the total time spent waiting in queue by users who have gained access to the origin in seconds. A negative number means no data",
        "totalTimeWaitedP75": "Weighted average of 75th percentile of the total time spent waiting in queue by users who have gained access to the origin in seconds. A negative number means no data",
        "totalTimeWaitedP90": "Weighted average of 90th percentile of the total time spent waiting in queue by users who have gained access to the origin in seconds. A negative number means no data",
        "totalTimeWaitedP95": "Weighted average of 95th percentile of the total time spent waiting in queue by users who have gained access to the origin in seconds. A negative number means no data"
    },
    "ZoneWaitingRoomAnalyticsAdaptiveGroupsDimensions": {
        "date": "The date the event was written to the database",
        "datetime": "The date and time the event was written to the database",
        "datetimeFifteenMinutes": "The date and time the event was written to the database, truncated to a multiple of 15 minutes",
        "datetimeFiveMinutes": "The date and time the event was written to the database, truncated to a multiple of 5 minutes",
        "datetimeHour": "The date and time the event was written to the database, truncated to the hour",
        "datetimeMinute": "The date and time the event was written to the database, truncated to the minute",
        "sampleInterval": "ABR sample interval",
        "waitingRoomId": "Unique Identifier for the waiting room"
    },
    "ZoneWaitingRoomAnalyticsAdaptiveGroupsFilter_InputObject": {},
    "ZoneWaitingRoomAnalyticsAdaptiveGroupsMax": {
        "maxEstimatedTimeMinutes": "The maximum value of estimated time in minutes. A negative number means no data",
        "newUsersPerMinute": "The maximum value of the actual new users per minute. A negative number means no data",
        "newUsersPerMinuteConfig": "The maximum value of the configured new users per minute. A negative number means no data",
        "sessionDuration": "The maximum value of the configured session duration configuration. A negative number means no data",
        "totalActiveUsers": "The maximum value of the actual total active users. A negative number means no data",
        "totalActiveUsersConfig": "The maximum value of the configured total active users. A negative number means no data",
        "totalQueuedUsers": "The maximum value of total number of queued users. A negative number means no data"
    },
    "ZoneWaitingRoomAnalyticsAdaptiveGroupsMin": {
        "maxEstimatedTimeMinutes": "The minimum value of estimated time in minutes. A negative number means no data",
        "newUsersPerMinute": "The minimum value of the actual new users per minute. A negative number means no data",
        "newUsersPerMinuteConfig": "The minimum value of the configured new users per minute. A negative number means no data",
        "sessionDuration": "The minimum value of the configured session duration configuration. A negative number means no data",
        "totalActiveUsers": "The minimum value of the actual total active users. A negative number means no data",
        "totalActiveUsersConfig": "The minimum value of the configured total active users. A negative number means no data",
        "totalQueuedUsers": "The minimum value of total number of queued users. A negative number means no data"
    },
    "ZoneWaitingRoomAnalyticsAdaptiveGroupsOrderBy": {},
    "ZoneWaitingRoomAnalyticsAdaptiveOrderBy": {},
    "ZoneWorkersZoneInvocationsAdaptiveGroups": {
        "avg": "The average of values for a metric per dimension",
        "dimensions": "List of dimensions to group by",
        "sum": "The sum of values for a metric per dimension"
    },
    "ZoneWorkersZoneInvocationsAdaptiveGroupsAvg": {
        "avgCpuTime": "Average CPU time used per request (in microseconds)"
    },
    "ZoneWorkersZoneInvocationsAdaptiveGroupsDimensions": {
        "constantScriptId": "Worker script Id",
        "date": "Request datetime, truncated to start of a day",
        "datetime": "Request datetime",
        "datetimeHour": "Request datetime, truncated to start of an hour",
        "datetimeMinute": "Request datetime, truncated to start of an minute",
        "httpResponseStatus": "Origin HTTP response code",
        "status": "Status of the worker invocation"
    },
    "ZoneWorkersZoneInvocationsAdaptiveGroupsFilter_InputObject": {},
    "ZoneWorkersZoneInvocationsAdaptiveGroupsOrderBy": {},
    "ZoneWorkersZoneInvocationsAdaptiveGroupsSum": {
        "requests": "Sum of Requests",
        "responseBodySize": "Bandwidth (in bytes) returned to eyeball",
        "subrequests": "Number of sub-requests issued by the edge worker",
        "totalCpuTime": "Total CPU time used (in microseconds)"
    },
    "ZoneWorkersZoneSubrequestsAdaptiveGroups": {
        "dimensions": "List of dimensions to group by",
        "sum": "The sum of values for a metric per dimension"
    },
    "ZoneWorkersZoneSubrequestsAdaptiveGroupsDimensions": {
        "cacheStatus": "Cache status",
        "date": "Request datetime, truncated to start of a day",
        "datetime": "Request datetime",
        "datetimeHour": "Request datetime, truncated to start of an hour",
        "datetimeMinute": "Request datetime, truncated to start of an minute",
        "httpResponseStatus": "Origin HTTP response code"
    },
    "ZoneWorkersZoneSubrequestsAdaptiveGroupsFilter_InputObject": {},
    "ZoneWorkersZoneSubrequestsAdaptiveGroupsOrderBy": {},
    "ZoneWorkersZoneSubrequestsAdaptiveGroupsSum": {
        "responseBodySize": "Bandwidth (in bytes) received via subrequests",
        "subrequests": "Number of subrequests issued by a worker"
    },
    "ZoneZarazActionsAdaptiveGroups": {
        "count": "Number of processed Zaraz Actions",
        "dimensions": "List of dimensions to group by"
    },
    "ZoneZarazActionsAdaptiveGroupsDimensions": {
        "actionName": "Action Name",
        "date": "The date the Action was triggered",
        "datetimeFifteenMinutes": "The date and time truncated to fifteen minutes",
        "datetimeFiveMinutes": "The date and time truncated to five minutes",
        "datetimeHour": "The date and time truncated to the hour",
        "datetimeMinute": "The date and time truncated to the minute",
        "toolName": "Tool Name"
    },
    "ZoneZarazActionsAdaptiveGroupsFilter_InputObject": {},
    "ZoneZarazActionsAdaptiveGroupsOrderBy": {},
    "ZoneZarazTrackAdaptiveGroups": {
        "count": "Number of processed Zaraz Track requests",
        "dimensions": "List of dimensions to group by"
    },
    "ZoneZarazTrackAdaptiveGroupsDimensions": {
        "date": "Date when track was called",
        "datetimeFifteenMinutes": "The date and time truncated to fifteen minutes",
        "datetimeFiveMinutes": "The date and time truncated to five minutes",
        "datetimeHour": "The date and time truncated to the hour",
        "datetimeMinute": "The date and time truncated to the minute",
        "trackName": "Track Name",
        "urlPath": "The URL from where Track was called"
    },
    "ZoneZarazTrackAdaptiveGroupsFilter_InputObject": {},
    "ZoneZarazTrackAdaptiveGroupsOrderBy": {},
    "ZoneZarazTriggersAdaptiveGroups": {
        "count": "Number of processed Zaraz Triggers",
        "dimensions": "List of dimensions to group by"
    },
    "ZoneZarazTriggersAdaptiveGroupsDimensions": {
        "date": "The date when trigger was triggerd",
        "datetimeFifteenMinutes": "The date and time truncated to fifteen minutes",
        "datetimeFiveMinutes": "The date and time truncated to five minutes",
        "datetimeHour": "The date and time truncated to the hour",
        "datetimeMinute": "The date and time truncated to the minute",
        "triggerName": "Trigger Name"
    },
    "ZoneZarazTriggersAdaptiveGroupsFilter_InputObject": {},
    "ZoneZarazTriggersAdaptiveGroupsOrderBy": {},
    "account": {
        "accessLoginRequestsAdaptiveGroups": "Access login requests",
        "accountTag": "",
        "cdnNetworkAnalyticsAdaptiveGroups": "Network analytics data for Cloudflare CDN traffic",
        "dosdAttackAnalyticsGroups": "Attack analytics metadata for attacks detected by dosd",
        "dosdNetworkAnalyticsAdaptiveGroups": "Network analytics data for dosd",
        "durableObjectsInvocationsAdaptiveGroups": "Durable Objects invocations with adaptive sampling",
        "durableObjectsPeriodicGroups": "Durable Objects periodic metrics",
        "durableObjectsStorageGroups": "Durable Objects storage metrics",
        "durableObjectsSubrequestsAdaptiveGroups": "Durable Objects subrequests with adaptive sampling",
        "fbmAttackAnalyticsGroups": "FBM analytics metadata for attacks detected by dosd",
        "firewallEventsAdaptive": "Raw Firewall events with adaptive sampling",
        "firewallEventsAdaptiveGroups": "Aggregated Firewall events with adaptive sampling",
        "flowtrackdNetworkAnalyticsAdaptiveGroups": "Network analytics data for flowtrackd",
        "gatewayL4DownstreamSessionsAdaptiveGroups": "Aggregated metrics about downstream (client to edge) L4 Gateway Sessions. Metrics are reported on TCP or UDP session close",
        "gatewayL4SessionsAdaptiveGroups": "BETA - Aggregate counts of Gateway L4 sessions with adaptive sampling",
        "gatewayL4UpstreamSessionsAdaptiveGroups": "Aggregated metrics about upstream (edge to client) L4 Gateway Sessions. Metrics are reported on TCP, QUIC or UDP session close",
        "gatewayL7RequestsAdaptiveGroups": "BETA - Aggregate counts of Gateway L7 requests with adaptive sampling",
        "gatewayResolverByCategoryAdaptiveGroups": "BETA - Aggregate counts of Gateway Resolver queries by category with adaptive sampling",
        "gatewayResolverQueriesAdaptiveGroups": "BETA - Aggregate counts of Gateway Resolver queries with adaptive sampling",
        "httpRequests1dGroups": "Daily rollups of request data",
        "httpRequests1hGroups": "Hourly rollups of request data",
        "httpRequests1mGroups": "Minutely rollups of request data",
        "httpRequestsOverviewAdaptiveGroups": "A high-level summary of HTTP requests made by end users.",
        "imagesRequestsAdaptiveGroups": "A high-level summary of Cloudflare Images served to end users.",
        "ipFlows1dGroups": "Beta. Daily rollups of IP flows",
        "ipFlows1hGroups": "Beta. Hourly rollups of IP flows",
        "ipFlows1mAttacksGroups": "Beta. Minutely rollups of IP flows including only attack traffic",
        "ipFlows1mGroups": "Beta. Minutely rollups of IP flows",
        "logpushHealthAdaptiveGroups": "Beta. Logpush job health metrics",
        "magicFirewallNetworkAnalyticsAdaptiveGroups": "Network analytics data for Magic Firewall",
        "magicFirewallSamplesAdaptiveGroups": "Data to visualize traffic allowed and blocked by Magic Firewall rules",
        "magicTransitNetworkAnalyticsAdaptiveGroups": "Network analytics data for Magic Transit traffic",
        "magicTransitTunnelHealthChecksAdaptiveGroups": "Beta. Magic Transit Health check results for customer GRE Tunnels with adaptive sampling (ABR).",
        "magicTransitTunnelTrafficAdaptiveGroups": "Bandwidth usage metric of a Magic Transit tunnel.",
        "mnmFlowDataAdaptiveGroups": "Flow data collected through Magic Network Monitoring",
        "nelReportsAdaptiveGroups": "Data to visualize network error logs",
        "pagesFunctionsInvocationsAdaptiveGroups": "Pages Functions invocations with adaptive sampling",
        "queueMessageOperationsAdaptiveGroups": "Beta. Queue message operation data with adaptive sampling",
        "queuesMessagesAdaptiveGroups": "Beta. Queue message data with adaptive sampling",
        "r2OperationsAdaptiveGroups": "Beta. R2 operations with adaptive sampling",
        "r2StorageAdaptiveGroups": "Beta. R2 storage with adaptive sampling",
        "rumPageloadEventsAdaptiveGroups": "Beta. Aggregated RUM pageload event metrics with adaptive sampling",
        "rumPerformanceEventsAdaptiveGroups": "Beta. Aggregated RUM performance event metrics with adaptive sampling",
        "rumWebVitalsEventsAdaptive": "Beta. RUM Web Vitals event metrics with adaptive sampling",
        "rumWebVitalsEventsAdaptiveGroups": "Beta. Aggregated RUM Web Vitals event metrics with adaptive sampling",
        "settings": "",
        "spectrumNetworkAnalyticsAdaptiveGroups": "Network analytics data for Spectrum traffic",
        "storageTraces": "Storage Tracing Information",
        "streamMinutesViewedAdaptiveGroups": "A high-level summary of Cloudflare Stream minutes viewed.",
        "turnstileAdaptiveGroups": "Beta. Cloudflare Turnstile aggregated events with adaptive sampling",
        "videoBufferEventsAdaptiveGroups": "Beta. Aggregated video streaming buffer event metrics with adaptive sampling",
        "videoPlaybackEventsAdaptiveGroups": "Beta. Aggregated video streaming playback event metrics with adaptive sampling",
        "videoQualityEventsAdaptiveGroups": "Beta. Aggregated video streaming quality change event metrics with adaptive sampling",
        "workersAnalyticsEngineAdaptiveGroups": "Beta. Custom Events with adaptive sampling",
        "workersInvocationsAdaptive": "Beta. Workers invocations with adaptive sampling",
        "workersInvocationsScheduled": "Workers scheduled invocations",
        "workersSubrequestsAdaptiveGroups": "Beta. Workers subrequests with adaptive sampling",
        "zeroTrustPrivateNetworkDiscoveryGroups": "Beta - Unique origins, applications, and users discovered for Zero Trust private networks",
        "zones": ""
    },
    "bool": {},
    "bytes": {},
    "float32": {},
    "float64": {},
    "int64": {},
    "string": {},
    "uint16": {},
    "uint32": {},
    "uint64": {},
    "uint8": {},
    "viewer": {
        "accounts": "",
        "budget": "",
        "zones": ""
    },
    "zone": {
        "apiRequestSequencesGroups": "Sequences of API endpoint operations. Sequences are grouped by AuthID and currently ranked by correlation score. Correlation scores are estimated over a 24 hour window and are current to within 10 minutes",
        "cacheReserveOperationsAdaptiveGroups": "Beta. Cache Reserve operations with adaptive sampling",
        "cacheReserveStorageAdaptiveGroups": "Beta. Cache Reserve storage with adaptive sampling",
        "emailRoutingAdaptive": "Beta. Raw email routing logs with adaptive sampling",
        "emailRoutingAdaptiveGroups": "Beta. Aggregated email routing logs with adaptive sampling",
        "firewallEventsAdaptive": "Raw Firewall events with adaptive sampling",
        "firewallEventsAdaptiveByTimeGroups": "Aggregated Firewall events with adaptive sampling grouped by time",
        "firewallEventsAdaptiveGroups": "Aggregated Firewall events with adaptive sampling",
        "healthCheckEventsAdaptive": "Raw Health Check events with adaptive sampling",
        "healthCheckEventsAdaptiveGroups": "Aggregated Health Check events with adaptive sampling",
        "httpRequests1dByColoGroups": "Daily rollups of request data by colo",
        "httpRequests1dGroups": "Daily rollups of request data",
        "httpRequests1hGroups": "Hourly rollups of request data",
        "httpRequests1mByColoGroups": "Minutely rollups of request data by colo",
        "httpRequests1mGroups": "Minutely rollups of request data",
        "httpRequestsAdaptive": "Raw HTTP requests with adaptive sampling",
        "httpRequestsAdaptiveGroups": "Aggregated HTTP requests data with adaptive sampling",
        "httpRequestsOverviewAdaptiveGroups": "A high-level summary of HTTP requests made by end users.",
        "imageResizingRequests1mGroups": "Minutely rollups of Image Resizing requests",
        "loadBalancingRequestsAdaptive": "Raw Load Balancing origin requests with adaptive sampling",
        "loadBalancingRequestsAdaptiveGroups": "Aggregated Load Balancing origin requests with adaptive sampling",
        "logpushHealthAdaptiveGroups": "Beta. Logpush job health metrics",
        "nelReportsAdaptiveGroups": "Data to visualize network error logs",
        "settings": "",
        "synAvgPps1mGroups": "Minutely rollups of average packets per second sent in a SYN attack",
        "waitingRoomAnalyticsAdaptive": "Beta. Raw waiting room analytics logs",
        "waitingRoomAnalyticsAdaptiveGroups": "Beta. Aggregated waiting room analytics logs with adaptive sampling",
        "workersZoneInvocationsAdaptiveGroups": "Workers invocations with adaptive sampling",
        "workersZoneSubrequestsAdaptiveGroups": "Workers subrequests with adaptive sampling",
        "zarazActionsAdaptiveGroups": "Zaraz Actions Analytics",
        "zarazTrackAdaptiveGroups": "Zaraz Track Analytics - counts zaraz.track calls",
        "zarazTriggersAdaptiveGroups": "Zaraz Triggers Analytics (a trigger is a set of rules that can trigger a zaraz action)",
        "zoneTag": ""
    }
}